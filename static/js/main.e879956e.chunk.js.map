{"version":3,"sources":["components/pages/pages-js/TypeWriter.js","components/workspace/layouts/SibarToggle.js","actions/types.js","reducers/task/taskReducer.js","reducers/task/usersTasksByStatusReducer.js","reducers/task/assignedTaskReducer.js","reducers/authentication/authReducer.js","reducers/timer/TimerReportReducer.js","reducers/timer/timerReducer.js","reducers/message/messageReducer.js","reducers/todo/todoReducer.js","reducers/company/department/departmentReducer.js","reducers/company/employee/employeeReducer.js","reducers/company/calendar/calendarReducer.js","reducers/index.js","Store.js","rough/MappingForm.js","rough/Test.js","components/layouts/Button.js","components/layouts/Navbar.js","components/layouts/Footer.js","components/pages/pages-images/adeyemon_peter.jpg","components/pages/pages-images/akan_asanga.jpg","components/pages/pages-images/ariyibi_baseet_.jpg","components/pages/pages-images/toluwanimi_ayoola.jpg","components/pages/pages-images/ayodele_samuel_adebayo.jpg","components/pages/pages-images/opaluwa_aisha.jpg","components/pages/pages-images/v.jpg","components/pages/About.js","components/pages/pages-images/landingPage.svg","components/pages/IndexArea.js","components/pages/Features.js","components/pages/pages-images/dashboard.png","components/pages/pages-images/manage-employee.png","components/pages/ShowDashboard.js","components/pages/Pricing.js","components/pages/Home.js","components/pages/pages-images/4oh4.png","components/pages/404.js","components/App.js","components/Validation/Schema.js","components/layouts/FormInput.js","services/root-endpoints.js","toaster/index.js","components/pages/ContactUs.js","components/pages/pages-images/login-img.png","components/layouts/HomeButton.js","services/auth.service.js","actions/auth/authAction.js","components/pages/Login.js","components/pages/Signup.js","components/pages/pages-images/forgotpassword.svg","components/pages/pages-images/mailsent.svg","components/pages/pages-images/mailAnimation.gif","components/pages/ResetPassword.js","components/workspace/dashboard/timer/notify.wav","services/auth-header.js","services/timer/timer.Service.js","components/workspace/dashboard/timer/Timer.js","actions/timer/timerAction.js","services/user.service.js","actions/user/userAction.js","components/workspace/layouts/Navbar.js","components/workspace/layouts/Sidebar.js","components/workspace/layouts/Footer.js","components/workspace/dashboard/cards/Card.js","components/workspace/dashboard/cards/Cards.js","components/workspace/dashboard/cards/TodoCard.js","services/company/calendar/calendarService.js","actions/company/calendar/calendarAction.js","_helper/dateFormatter.js","components/workspace/dashboard/cards/EventCard.js","components/workspace/dashboard/cards/EscheduleCard.js","components/workspace/dashboard/cards/NotificationCards.js","components/workspace/dashboard/cards/MostActiveEmployee.js","components/workspace/dashboard/timer/HourTimerScreen.js","components/workspace/dashboard/Index.js","services/employee/employee.service.js","actions/employee/employeeAction.js","components/loader/Loader.js","services/company/department-service.js","actions/company/department/departmentAction.js","components/company/employee/AddEmployee.js","components/workspace/layouts/Table.js","components/company/employee/EmployeeList.js","components/company/employee/EmployeeProfile.js","components/company/department/NewDepartmentForm.js","components/company/department/ManageDepartment.js","components/user/Profile.js","components/user/ChangePassword.js","components/user/UpdateProfile.js","components/workspace/layouts/TaskSidebar.js","services/task.service.js","components/workspace/dashboard/DraftTask.js","actions/task/taskAction.js","actions/task/usersTasksByStatus.js","components/workspace/dashboard/employeeTasks/AcceptedTasks.js","actions/task/assignedTaskAction.js","components/workspace/dashboard/employeeTasks/AssignedTasks.js","components/workspace/dashboard/employeeTasks/PendingTasks.js","components/workspace/dashboard/employeeTasks/AllTasks.js","components/workspace/dashboard/TaskDetails.js","components/workspace/dashboard/employeeTasks/EmployeeTasks.js","components/workspace/dashboard/employeeTasks/Sample.js","components/workspace/dashboard/employeeTasks/SampleCompose.js","components/workspace/dashboard/employeeTasks/TaskInboxSample.js","components/workspace/dashboard/Task.js","services/todo.service.js","components/workspace/dashboard/todos/TodoRows.js","actions/todo/todoAction.js","components/workspace/dashboard/todos/TodoForm.js","components/workspace/dashboard/todos/Todo.js","components/workspace/dashboard/reports/BillingReport.js","components/workspace/dashboard/reports/TimerReport.js","components/company/employee/UpdateEmployeeProfile.js","services/company/company-service.js","components/company/Settings/UpdateCompanyProfile.js","components/company/Settings/CompanyProfile.js","components/company/Settings/Settings.js","components/tour/config/settings.js","components/tour/config/Text.js","components/tour/config/Glitch.js","components/tour/config/Tooltip.js","components/tour/config/Button.js","components/tour/config/tourConfig.js","components/tour/config/TourContainer.js","components/workspace/dashboard/eShedule/Eshedule.js","components/company/calendar/Calendar.js","components/company/calendar/ManageCalendar.js","components/workspace/dashboard/reports/TaskReport.js","components/workspace/dashboard/timer/PersonalTimeSheet.js","components/workspace/dashboard/Dashboard.js","components/pages/pages-images/message_sent.svg","components/pages/pages-images/oneStep.svg","index.js","components/pages/Confirmation.js","components/pages/Thanks.js","components/pages/ForgotPassword.js","components/pages/NewStaffPassword.js"],"names":["TypeWriter","el","toRotate","period","this","loopNum","parseInt","txt","tick","isDeleting","prototype","i","length","fullTxt","substring","innerHTML","that","delta","Math","random","setTimeout","window","onload","elements","document","getElementsByClassName","getAttribute","JSON","parse","css","createElement","type","body","appendChild","$","on","toggleClass","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SYNC_CURRENT_USER","UPDATE_USER_PROFILE","END_TOUR","SET_MESSAGE","CLEAR_MESSAGE","OPEN_NEW_FORM","CLOSE_NEW_FORM","ADD_DEPARTMENT","DELETE_DEPARTMENT","EDIT_DEPARTMENT","FETCH_COMPANY_DEPARTMENT","DEPARTMENT_ERROR","FETCH_COMPANY_EMPLOYEES","ADD_NEW_EMPLOYEE","GET_TIMER_REPORT","TIMER_ON","TIMER_OFF","SET_WORKED_MILLISECOND","FETCH_TASKS_PENDING","FETCH_TASKS_SUCCESS","ASSIGN_TASK","DELETE_TASK","EDIT_TASK","UPDATE_TASK_STATUS","TOGGLE_TASK_COMPLETE","FETCH_TASKS_BY_STATUS_PENDING","FETCH_TASKS_BY_STATUS_SUCCESS","DELETE_TASKS_BY_STATUS","FETCH_ASSIGNED_TASKS_PENDING","FETCH_ASSIGNED_TASKS_SUCCESS","DELETE_ASSIGNED_TASK","FETCH_TODOS_PENDING","FETCH_TODOS_SUCCESS","FETCH_TODOS_ERROR","ADD_TODO","UPDATE_TODO","DELETE_TODO","OPEN_TODO_FORM","CLOSE_TODO_FORM","TOGGLE_TODO_COMPLETE","ADD_NEW_CALENDAR_EVENT","FETCH_CALENDAR_EVENT_SUCCESSFUL","DELETE_EVENT_SUCCESSFUL","initialState","isFetching","tasks","taskReducer","state","action","payload","filter","task","id","map","completed","usersTasksByStatus","usersTasksByStatusReducer","assignedTasks","assignedTaskReducer","isLoggedIn","currentUser","isFirstTimer","error","welcome","authReducer","firstname","lastname","department","role","workedHour","completedTask","TimerReportReducer","timerIsOff","remindUser","workedMilliSecond","timerReducer","todos","title","dueDate","Date","now","isTodoFormOpen","todoReducer","toDoID","todo","Object","assign","isFormOpen","departments","departmentReducer","departmentName","employees","employeeReducer","events","calendarReducer","eventName","end","eventDateAndTime","evts","eventID","rootReducer","combineReducers","authenticationState","timerReport","timerStatus","message","calendar","middleware","thunk","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","Profile","props","name","rank","stack","DisplayProfile","placeholder","value","Component","Button","label","className","icon","Navbar","Fragment","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","spy","smooth","duration","activeclass","Footer","style","backgroundColor","width","AboutContent","paceEngineersProfile","img","unclebay","aisha","baseet","peter","tolu","akan","src","aboutImage","alt","paceEngineer","paceEngineerProfile","About","useEffect","IndexArea","data-period","data-type","height","viewBox","fill","xmlns","fillRule","d","landingPageImg","FeaturesCard","animation","svg","heading","paragraph","data-aos","data-aos-duration","Features","ShowDashboard","dashboard","manageEmployee","Pricing","faSitemap","faSnowflake","faBookReader","Home","PageNotFound","deadEnd","App","AOS","init","exact","path","component","forgotPasswordSchema","Yup","shape","email","required","resetPasswordSchema","password","min","confirmPassword","oneOf","loginSchema","signUpSchema","companyName","max","termsOfService","changePasswordSchema","contactUsSchema","contactName","contactEmail","AddEmployeeSchema","billRateCharge","expectedWorkHours","departmentID","roleID","staffRole","TodoListSchema","TextInput","labelClassName","useField","field","htmlFor","CheckbBox","children","titleclassname","TextArea","resize","AUTH_API_URL","TODO_API_URL","TASK_API_URL","FETCH_TASKS_BY_STATUS_API_URL","FETCH_COMPANY_PROFILE_API","netWorkError","toast","warning","somethingWentWrongLogger","logOutSuccessLogger","profileUpdateCompletedLogger","info","profileUpdateFailLogger","ContactUs","redirectToThanks","history","push","initialValues","validationSchema","onSubmit","values","axios","post","then","response","console","log","catch","setSubmitting","touched","errors","handleSubmit","handleChange","isSubmitting","onChange","rows","cols","disabled","withRouter","HomeButton","AuthService","register","dispatch","data","code","localStorage","setItem","stringify","accessToken","undefined","status","login","logout","clear","currentUserFromLocalStorage","getItem","useSelector","useDispatch","useHistory","autoComplete","loginImage","Signup","data-placement","ResetPassword","getCurrentUser","currentUserCompanyID","companyID","currentUserStaffID","staffID","currentUserRoleID","authHeader","TimerService","startTimer","put","headers","stopTimer","getPersonalTimeSheet","get","initializeTimerRecord","timerReminder","withReactContent","Swal","TimerContainer","useState","isTimerOff","setisTimerOff","shouldRemindUser","isTimerSessionExist","useSound","notify","volume","playSound","reminderTracker","fire","showCloseButton","showCancelButton","cancelButtonColor","confirmButtonText","cancelButtonText","text","footer","clearTimeout","onStop","stopMillsecond","resume","reset","err","convertedStopHour","floor","inputValue","isConfirmed","hour","onStart","start","getTime","setInterval","currentMilliSecond","h","data-tut","initialTime","Number","startImmediately","stop","onClick","stopTime","Hours","formatValue","Minutes","minute","Seconds","second","UserService","fetchUserProfile","currentUserProfile","updateUserProfile","newProfile","updateUserPassword","syncCurrentUser","fullName","setFullName","setStaffID","setRoleID","firstName","lastName","Timer","aria-haspopup","aria-labelledby","maxWidth","cursor","Sidebar","setCurrentUserRoleID","currentUserRoleName","setCurrentUserRoleName","activeclassname","waitForLogger","Card","count","url","cardColor","Cards","pendingTasksCounter","setPendingTasksCounter","completedTasksCounter","setCompletedTasksCounter","overDureTasksCounter","setOverDueTasksCounter","pending","fetchPendingTasks","a","fetchCompletedTasks","fetchOverDueTasks","CardTemplate","TodoCard","formatedDueDate","toLocaleDateString","weekday","year","month","day","CalendarService","fetchCalendarEvent","postNewCalendarEvent","newEvent","deleteCalendarEvent","delete","updateCalendarEvent","updatedEvent","getCalendarEvent","addNewCalendarEvent","formatDate","date","eventHolder","EventCard","eventState","setEventState","EscheduleCard","scheduleTitle","scheduleTime","NotificationCards","MostActiveEmployee","HourTimerScreen","getWorkedHour","round","maxHeight","Index","openTour","EmployeeService","addNewEmployeeToServer","newEmployee","toString","fetchCompanyEmployees","putEmployeeBillingAndWorkHour","getCompanyEmployees","companyEmployees","Loader","DepartmentService","postNewDepartment","newDepartment","fetchDepartment","getDepartment","companyDepartment","availableRole","roleName","index","successEmployedAlert","AddEmployee","companyDepartmentDropDown","resetForm","defaultValue","Table","keyField","columns","bordered","enableSearch","selectRow","pagination","customInput","customInputName","customInputPlaceHolder","customButtonType","customButtonLabel","customButtonFunction","controlHeader","rowEvents","enableClearSearchButton","noDataIndication","rowStyle","SearchBar","Search","ClearSearchButton","search","searchProps","baseProps","hover","EmployeeList","employeesList","setEmployeesList","isFetchingState","setIsFetchingState","Header","dataField","formatter","cellContent","row","paginationFactory","ProfileRow","EmployeeProfile","params","useParams","employeeProfile","setEmployeeProfile","getEmployeeProfile","employee","aria-current","phone","NewDepartmentForm","setCompanyID","const","addDepartment","border","DepartmentRowLayout","serialNumber","size","scope","background","color","editDepartment","ManageDepartment","shouldFormOpen","setShouldFormOpen","position","reverse","fontSize","userProfile","setUserProfile","phoneNumber","address","userName","ChangePassword","enableReinitialize","newPassword","updatePassword","password2","UpdateProfile","isLoading","setIsLoading","profile","setProfile","TaskSidebar","activeClassName","TaskService","assignTask","newTask","fetchTasks","fetchUsersTasksByStatus","taskStatus","fetchAssignedTasks","editTask","deleteTask","updateTaskStatus","deleteAssignedTask","DraftTask","employeesDropDown","assignedID","taskName","taskDescription","documentsAttached","endDate","list","autocomplete","getTaskByStatus","taskHeader","headerAttrs","hidden","cell","class","AcceptedTasks","taskDetails","e","rowIndex","taskID","mode","headerColumnStyle","filterFactory","AssignedTasks","assignedTaskState","setAssignedTaskState","taskRecord","PendingTasks","AllTasks","selectedDepartmentTaskSheet","TaskDetails","setTaskDetails","assignedUser","setAssignedUser","taskStatusName","setTaskStatusName","findAssignedEmployee","fetchTaskDetails","handleTaskStatus","updateTaskDetails","location","reload","dateCreated","attachment","handleDelete","acceptedTasks","requests","rowId","Sample","data-original-title","SampleCompose","method","TaskInboxSample","Task","TodoService","fetchTodos","addTodo","deleteTodo","updateTodo","TodoRows","closeTodoForm","TodoForm","newTodo","Todo","BillingReport","usersDetails","TimerReport","UpdateEmployeeProfile","updateEmployeeBillingAndWorkHour","goBack","CompanyService","updateCompanyProfile","newCompanyProfile","UpdateCompanyProfile","companyType","companyAdjective","currency","companyProfile","setCompanyProfile","fetchCompanyProfile","alert","Settings","fontFamily","headingSizes","themeColors","dark","light","black","styled","p","rnd","doPercAndValue","perc","doKeyframes","Array","reduce","acc","next","anim","keyframes","anim2","div","span","styles","button","Link","StyledLink","bg","nospaces","tourConfig","selector","content","Glitch","data-glitch","Text","Tooltip","data-tooltip","marginTop","TourContainer","isTourOpen","setIsTourOpen","classList","add","remove","onRequestClose","steps","isOpen","maskClassName","rounded","accentColor","Eshedule","readOnly","Calendar","localizer","momentLocalizer","moment","eventsState","setEventsState","startAccessor","endAccessor","ManageCalendar","editMode","setEditMode","eventInEditMode","setEventInEditMode","marginLeft","col","handleEdit","TaskReport","departmentsState","setDepartmentsState","selectedDepartmentID","setSelectedDepartmentID","setSelectedDepartmentTaskSheet","departmentsDropDown","handleFormatDate","event","target","PersonalTimeSheet","timeSheet","Dashboard","redirect","setRedirect","Eschedule","CompanyProfile","ReactDOM","render","StrictMode","mailAnimation","messageSent","forgotIllustration","Login","Test","getElementById"],"mappings":"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","file":"static/js/main.e879956e.chunk.js","sourcesContent":["// Home page typewriter script\r\n\r\n\r\nvar TypeWriter = function(el, toRotate, period) {\r\n    this.toRotate = toRotate;\r\n    this.el = el;\r\n    this.loopNum = 0;\r\n    this.period = parseInt(period, 10) || 4000;\r\n    this.txt = '';\r\n    this.tick();\r\n    this.isDeleting = false;\r\n  };\r\n  \r\n  TypeWriter.prototype.tick = function() {\r\n    var i = this.loopNum % this.toRotate.length;\r\n    var fullTxt = this.toRotate[i];\r\n  \r\n    if (this.isDeleting) {\r\n    this.txt = fullTxt.substring(0, this.txt.length - 1);\r\n    } else {\r\n    this.txt = fullTxt.substring(0, this.txt.length + 1);\r\n    }\r\n  \r\n    this.el.innerHTML = '<span className=\"wrap\">'+this.txt+'</span>';\r\n  \r\n    var that = this;\r\n    var delta = 500 - Math.random() * 100;\r\n  \r\n    if (this.isDeleting) { delta /= 2; }\r\n  \r\n    if (!this.isDeleting && this.txt === fullTxt) {\r\n    delta = this.period;\r\n    this.isDeleting = true;\r\n    } else if (this.isDeleting && this.txt === '') {\r\n    this.isDeleting = false;\r\n    this.loopNum++;\r\n    delta = 500;\r\n    }\r\n  \r\n    setTimeout(function() {\r\n    that.tick();\r\n    }, delta);\r\n  };\r\n  \r\n  window.onload = function() {\r\n    var elements = document.getElementsByClassName('typewrite');\r\n    for (var i=0; i<elements.length; i++) {\r\n        var toRotate = elements[i].getAttribute('data-type');\r\n        var period = elements[i].getAttribute('data-period');\r\n        if (toRotate) {\r\n          new TypeWriter(elements[i], JSON.parse(toRotate), period);\r\n        }\r\n    }\r\n    // INJECT CSS\r\n    var css = document.createElement(\"style\");\r\n    css.type = \"text/css\";\r\n    css.innerHTML = \".typewrite > .wrap { border-right: 0.08em solid #fff}\";\r\n    document.body.appendChild(css);\r\n  };","// Jquery\r\nimport $ from 'jquery';\r\n\r\n\r\n$(function () {\r\n    // ------------------------------------------------------- //\r\n    // Sidebar\r\n    // ------------------------------------------------------ //\r\n    $('.sidebar-toggler').on('click', function () {\r\n        $('.sidebar').toggleClass('shrink show');\r\n    });\r\n});\r\n\r\n","// Authentication \r\nexport const AUTH_USER = 'AUTH_USER';\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const SYNC_CURRENT_USER = 'SYNC_CURRENT_USER';\r\n\r\n\r\n// User\r\nexport const UPDATE_USER_PROFILE = 'UPDATE_USER_PROFILE';\r\n\r\n\r\n// TOUR\r\nexport const END_TOUR = 'END_TOUR';\r\n\r\n\r\n// Error Messages\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\n\r\n\r\n// Department \r\nexport const OPEN_NEW_FORM = 'OPEN_NEW_FORM';\r\nexport const CLOSE_NEW_FORM = 'CLOSE_NEW_FORM';\r\nexport const ADD_DEPARTMENT = 'ADD_DEPARTMENT';\r\nexport const DELETE_DEPARTMENT = 'DELETE_DEPARTMENT';\r\nexport const EDIT_DEPARTMENT = 'EDIT_DEPARTMENT';\r\nexport const FETCH_COMPANY_DEPARTMENT = 'FETCH_COMPANY_DEPARTMENT';\r\nexport const DEPARTMENT_ERROR = 'DEPARTMENT_ERROR';\r\n\r\n\r\n\r\n// Employee\r\nexport const FETCH_COMPANY_EMPLOYEES = 'GET_EMPLOYEES';\r\nexport const ADD_NEW_EMPLOYEE = 'ADD_NEW_EMPLOYEE';\r\n\r\n\r\n\r\n//  Timer\r\nexport const GET_TIMER_REPORT = 'GET_TIMER_REPORT';\r\nexport const TIMER_ON = 'TIMER_ON';\r\nexport const TIMER_OFF = 'TIMER_OFF';\r\nexport const SET_WORKED_MILLISECOND = 'SET_WORKED_MILLISECOND';\r\n\r\n// Task\r\nexport const FETCH_TASKS_PENDING = 'FETCH_TASKS_PENDING';\r\nexport const FETCH_TASKS_SUCCESS = 'FETCH_TASKS_SUCCESS';\r\nexport const FETCH_TASKS_ERROR = 'FETCH_TASKS_ERROR';\r\nexport const ASSIGN_TASK = 'ASSIGN_TASK'\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const UPDATE_TASK_STATUS = 'UPDATE_TASK_STATUS';\r\nexport const MARK_COMPLETE = 'MARK_COMPLETE';\r\nexport const ACCEPT_TASK = 'ACCEPT_TASK';\r\nexport const TOGGLE_TASK_COMPLETE = 'TOGGLE_TASK_COMPLETE';\r\n\r\n// Get Task By Status\r\nexport const FETCH_TASKS_BY_STATUS_PENDING = 'FETCH_TASKS_BY_STATUS_PENDING';\r\nexport const FETCH_TASKS_BY_STATUS_SUCCESS = 'FETCH_TASKS_BY_STATUS_SUCCESS';\r\nexport const FETCH_TASKS_BY_STATUS_ERROR = 'FETCH_TASKS_BY_STATUS_ERROR';\r\nexport const DELETE_TASKS_BY_STATUS = 'DELETE_TASKS_BY_STATUS';\r\n\r\n// Assigned Task\r\nexport const FETCH_ASSIGNED_TASKS_PENDING = 'FETCH_ASSIGNED_TASKS_PENDING';\r\nexport const FETCH_ASSIGNED_TASKS_SUCCESS = 'FETCH_ASSIGNED_TASKS_SUCCESS';\r\nexport const FETCH_ASSIGNED_TASKS_ERROR = 'FETCH_ASSIGNED_TASKS_ERROR';\r\nexport const EDIT_ASSIGNED_TASK = 'EDIT_ASSIGNED_TASK';\r\nexport const DELETE_ASSIGNED_TASK = 'DELETE_ASSIGNED_TASK';\r\nexport const ASSIGN_TASKS = 'ASSIGN_TASKS';\r\nexport const GET_ACCEPTED_TASKS = 'GET_ACCEPTED_TASKS';\r\n\r\n// Todo\r\nexport const FETCH_TODOS_PENDING = 'FETCH_TODO_PENDING';\r\nexport const FETCH_TODOS_SUCCESS = 'FETCH_TODO_SUCCESS';\r\nexport const FETCH_TODOS_ERROR = 'FETCH_TODO_ERROR';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const OPEN_TODO_FORM = 'OPEN_TODO_FORM';\r\nexport const CLOSE_TODO_FORM = 'CLOSE_TODO_FORM';\r\nexport const TOGGLE_TODO_COMPLETE = 'TOGGLE_TODO_COMPLETE';\r\n\r\n\r\n// CALENDAR\r\nexport const ADD_NEW_CALENDAR_EVENT = 'ADD_NEW_CALENDAR_EVENT';  \r\nexport const FETCH_CALENDAR_EVENT_SUCCESSFUL = 'FETCH_CALENDAR_EVENT_SUCCESSFUL';\r\nexport const DELETE_EVENT_SUCCESSFUL = 'DELETE_EVENT_SUCCESSFUL';\r\nexport const EDIT_CALENDAR_EVENT = 'EDIT_CALENDAR_EVENT';","import { ASSIGN_TASK, FETCH_TASKS_PENDING, FETCH_TASKS_SUCCESS, UPDATE_TASK_STATUS, DELETE_TASK, EDIT_TASK, TOGGLE_TASK_COMPLETE } from '../../actions/types';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  tasks: [],\r\n}\r\n\r\nconst taskReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case ASSIGN_TASK:\r\n            return {\r\n                ...state,\r\n                tasks: [action.payload, ...state.tasks]\r\n            }\r\n\r\n        case FETCH_TASKS_PENDING:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n        \r\n        case FETCH_TASKS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                tasks: action.payload\r\n            }\r\n\r\n        case UPDATE_TASK_STATUS:\r\n            return {\r\n                ...state, \r\n                tasks: [action.payload, ...state.tasks]\r\n            }\r\n\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state, \r\n                tasks: state.tasks.filter((task)=>task.id !== action.payload)\r\n            }\r\n        \r\n        case EDIT_TASK:\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map( task =>  task.id === action.payload.id ? ( task = action.payload ) : task )\r\n            }\r\n        \r\n        case TOGGLE_TASK_COMPLETE:\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map( task => task.id === action.payload.id ? ( task.completed = !task.completed ) : task)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default taskReducer;","import { FETCH_TASKS_BY_STATUS_PENDING, FETCH_TASKS_BY_STATUS_SUCCESS, DELETE_TASKS_BY_STATUS } from '../../actions/types';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  usersTasksByStatus: [],\r\n}\r\nconst usersTasksByStatusReducer = (state=initialState, action) => {\r\n  switch(action.type){\r\n\r\n      case FETCH_TASKS_BY_STATUS_PENDING:\r\n          return {\r\n              ...state,\r\n              isFetching: true\r\n          }\r\n      \r\n      case FETCH_TASKS_BY_STATUS_SUCCESS:\r\n          return {\r\n              ...state,\r\n              isFetching: false,\r\n              usersTasksByStatus: action.payload\r\n          }\r\n\r\n      case DELETE_TASKS_BY_STATUS:\r\n          return {\r\n              ...state, \r\n              usersTasksByStatus: state.usersTasksByStatus.filter((task)=>task.id !== action.payload)\r\n          }\r\n          \r\n      default:\r\n          return state;\r\n  }\r\n}\r\n\r\n\r\nexport default usersTasksByStatusReducer;","import { FETCH_ASSIGNED_TASKS_PENDING, FETCH_ASSIGNED_TASKS_SUCCESS, DELETE_ASSIGNED_TASK } from '../../actions/types';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  assignedTasks: [{}]\r\n}\r\nconst assignedTaskReducer = (state=initialState, action) => {\r\n  switch(action.type){\r\n\r\n      case FETCH_ASSIGNED_TASKS_PENDING:\r\n          return {\r\n              ...state,\r\n              isFetching: true\r\n          }\r\n      \r\n      case FETCH_ASSIGNED_TASKS_SUCCESS:\r\n          return {\r\n              ...state,\r\n              isFetching: false,\r\n              assignedTasks: action.payload\r\n          }\r\n\r\n      case DELETE_ASSIGNED_TASK:\r\n          return {\r\n              ...state, \r\n              assignedTasks: state.assignedTasks.filter((task)=>task.id !== action.payload)\r\n          }\r\n          \r\n      default:\r\n          return state;\r\n  }\r\n}\r\n\r\n\r\nexport default assignedTaskReducer;","//  This Reducer handles REGISTRATION, LOGIN, LOGOUT\r\n\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SYNC_CURRENT_USER,\r\n  END_TOUR,\r\n  UPDATE_USER_PROFILE\r\n} from \"../../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n  isLoggedIn: false, \r\n  currentUser: '',\r\n  isFirstTimer: false,\r\n  error: null,\r\n  welcome: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) =>{\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n\r\n    case REGISTER_SUCCESS:\r\n      return  {\r\n        ...state,\r\n        isFirstTimer: true\r\n      }\r\n      \r\n    case END_TOUR:\r\n      return {\r\n        ...state,\r\n        isFirstTimer: false\r\n      }\r\n\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        welcome: true,\r\n        isLoggedIn: true,\r\n        currentUser: payload,\r\n      };\r\n\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        currentUser: null,\r\n        error: payload\r\n      };\r\n    \r\n    case SYNC_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        currentUser: payload\r\n      }\r\n\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        currentUser: null,\r\n      };\r\n    \r\n      case UPDATE_USER_PROFILE:\r\n        return {\r\n          ...state,\r\n          currentUser: {\r\n            ...state.currentUser,\r\n            payload\r\n          }\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","import { GET_TIMER_REPORT } from '../../actions/types';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\nconst initialState = [\r\n    {\r\n        id: 1,\r\n        firstname: \"Ayodele\",\r\n        lastname: \"Samuel Adebayo\",\r\n        department: \"Hospitality\",\r\n        role: \"Head Surgeon\",\r\n        workedHour: 160,\r\n        completedTask: 19,\r\n    },\r\n    {\r\n        id: 2,\r\n        firstname: \"Adedayo\",\r\n        lastname: \"Stephen Adeolu\",\r\n        department: \"Public Administration\",\r\n        role: \"Chairman\",\r\n        workedHour: 30,\r\n        completedTask: 119,\r\n    },\r\n    {\r\n        id: 3,\r\n        firstname: \"Michael\",\r\n        lastname: \"Jackson\",\r\n        department: \"Management\",\r\n        role: \"Junior manager\",\r\n        workedHour: 10,\r\n        completedTask: 9,\r\n    },\r\n]\r\n\r\n\r\nconst TimerReportReducer = (state=initialState, action)=>{\r\n    switch(action.type){\r\n        case GET_TIMER_REPORT:\r\n            return {...state};\r\n    default:\r\n        return state;\r\n    }\r\n}\r\n\r\n\r\nexport default TimerReportReducer;","import { TIMER_ON, TIMER_OFF, SET_WORKED_MILLISECOND } from '../../actions/types';\r\n\r\nconst initialState = {\r\n    timerIsOff: true,\r\n    remindUser: true,\r\n    workedMilliSecond: 0\r\n}\r\n\r\n\r\nconst timerReducer = (state=initialState, action)=>{\r\n    switch(action.type){\r\n        case TIMER_ON:\r\n            // return state.timerIsOff = !state.timerIsOff, state.hour = 0;\r\n            return {\r\n                ...state,\r\n                 timerIsOff: false,\r\n                 remindUser: false,\r\n                 workedMilliSecond: 0\r\n                };\r\n        case TIMER_OFF:\r\n            // return state.timerIsOff = !state.timerIsOff, state.hour = action.payload;\r\n            return {\r\n                ...state,\r\n                timerIsOff: true,\r\n                remindUser: false,\r\n                workedMilliSecond: action.payload\r\n            };\r\n        case SET_WORKED_MILLISECOND:\r\n            return {\r\n                ...state,\r\n                workedMilliSecond: action.payload\r\n            }\r\n    default:\r\n        return state;\r\n    }\r\n}\r\n\r\n\r\nexport default timerReducer;","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { \r\n    FETCH_TODOS_PENDING, \r\n    FETCH_TODOS_SUCCESS, \r\n    FETCH_TODOS_ERROR,\r\n    OPEN_TODO_FORM,\r\n    CLOSE_TODO_FORM,\r\n    UPDATE_TODO, \r\n    ADD_TODO, \r\n    DELETE_TODO,\r\n    TOGGLE_TODO_COMPLETE,\r\n} from \"../../actions/types\";\r\n\r\n\r\n// Initial state\r\nconst initialState = {\r\n    isFetching: false,\r\n    todos: [\r\n        {\r\n            title: 'Todo Card',\r\n            dueDate: Date.now()\r\n        }\r\n    ],\r\n    error: null,\r\n    isTodoFormOpen: false\r\n}\r\n\r\n// Function to generate id for new todo\r\nconst generateId = (todos) =>{\r\n    const currentMaxId = todos.reduce(( currentMaxId, todo ) => Math.max(todo.id, currentMaxId), -1)\r\n    return currentMaxId + 1\r\n}\r\n\r\n\r\n// Reducer that modifiy the state according to dispatched actions\r\nconst todoReducer = (state=initialState, action) =>{\r\n    const { type, payload } = action\r\n    switch(type){\r\n        case FETCH_TODOS_PENDING:\r\n            return {\r\n                 ...state,\r\n                 isFetching: true,\r\n                }\r\n        case FETCH_TODOS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                todos: payload\r\n            }\r\n        case FETCH_TODOS_ERROR:\r\n            return {\r\n                ...state,\r\n                // If todo is empty then create a new object else return the todos\r\n                todos: state.todos.length === 0 ? {} : state.todos,\r\n                isFetching: false,\r\n                error: action.error\r\n            }\r\n        case OPEN_TODO_FORM:\r\n            return {\r\n                ...state,\r\n                isTodoFormOpen: true\r\n            }\r\n        case CLOSE_TODO_FORM:\r\n            return {\r\n                ...state, \r\n                isTodoFormOpen: false\r\n            }\r\n        case ADD_TODO:\r\n            const { title, dueDate, toDoID } = payload;\r\n            return {\r\n                // Return everything in the state\r\n                ...state,\r\n                // But modify todos\r\n                todos: [ \r\n                    // Add new todo from payload (to the top of the existing todos)\r\n                    {\r\n                        toDoID: toDoID,\r\n                        title: title,\r\n                        dueDate: dueDate,\r\n                        completed: false\r\n                    },\r\n                    // Return everything in todos\r\n                    ...state.todos\r\n                ] \r\n            }\r\n\r\n        case UPDATE_TODO:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map( todo => todo.id === payload.id ? ( todo = payload ) : todo\r\n                )\r\n            }\r\n\r\n        case DELETE_TODO:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter((todo)=> todo.id !== payload )\r\n            }\r\n        \r\n        case TOGGLE_TODO_COMPLETE:\r\n            return Object.assign({}, state, {\r\n                todos: state.todos.map((todo)=>{\r\n                    if(todo.id !== payload){\r\n                        return todo\r\n                    }\r\n\r\n                    return Object.assign({}, todo, {\r\n                        completed: !todo.completed\r\n                    });\r\n                })\r\n            })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todoReducer;\r\n\r\n\r\n","import { \r\n    OPEN_NEW_FORM, \r\n    CLOSE_NEW_FORM, \r\n    ADD_DEPARTMENT, \r\n    EDIT_DEPARTMENT, \r\n    DELETE_DEPARTMENT, \r\n    DEPARTMENT_ERROR,\r\n    FETCH_COMPANY_DEPARTMENT\r\n} \r\n    from '../../../actions/types';\r\n\r\nconst initialState = {\r\n    isFormOpen: false,\r\n    error: null,\r\n    departments: []\r\n}\r\n\r\n\r\nconst departmentReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case FETCH_COMPANY_DEPARTMENT:\r\n            return {\r\n                ...state,\r\n                departments: action.payload\r\n            }\r\n        case OPEN_NEW_FORM:\r\n            return {\r\n                ...state,\r\n                isFormOpen: true\r\n            }\r\n        case CLOSE_NEW_FORM:\r\n            return {\r\n                ...state,\r\n                isFormOpen: false\r\n            }\r\n        case ADD_DEPARTMENT:\r\n            return {\r\n                ...state,\r\n                isFormOpen: false,\r\n                departments: [\r\n                    ...state.departments,\r\n                    {\r\n                        departmentName: action.payload.departmentName\r\n                    }\r\n                ]\r\n            }\r\n        case EDIT_DEPARTMENT:\r\n            return {\r\n                ...state,\r\n                departments: state.departments.map((department)=> department.id === action.payload.id ? ( department = action.payload ) : department)\r\n            }\r\n        case DELETE_DEPARTMENT:\r\n            return {\r\n                ...state,\r\n                departments: state.departments.filter((department)=> department.id !== action.payload )\r\n            }\r\n        case DEPARTMENT_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default departmentReducer;\r\n","import { ADD_NEW_EMPLOYEE, FETCH_COMPANY_EMPLOYEES } from \"../../../actions/types\";\r\n\r\nconst initialState = {\r\n    isFetching: true,\r\n    error: null,\r\n    employees: []\r\n}\r\n\r\n\r\n\r\nconst employeeReducer = (state=initialState, action) =>{\r\n    switch (action.type) {\r\n        case FETCH_COMPANY_EMPLOYEES:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                employees: action.payload\r\n            }\r\n\r\n        case ADD_NEW_EMPLOYEE:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                employees: [action.payload, ...state.employees]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default employeeReducer;\r\n\r\n\r\n","import { ADD_NEW_CALENDAR_EVENT, DELETE_EVENT_SUCCESSFUL, FETCH_CALENDAR_EVENT_SUCCESSFUL } from '../../../actions/types';\r\n\r\nconst initialState = {\r\n    isFetching: true,\r\n    events: [],\r\n    error: null\r\n}\r\n\r\n\r\nconst calendarReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_CALENDAR_EVENT_SUCCESSFUL:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                events: action.payload\r\n            }\r\n\r\n        case ADD_NEW_CALENDAR_EVENT:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                events: [\r\n                    ...state.events,\r\n                    // action.payload\r\n                    {\r\n                        title: action.payload.eventName,\r\n                        end: action.payload.eventDateAndTime\r\n                    }\r\n                ]\r\n            }\r\n        case DELETE_EVENT_SUCCESSFUL:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter((evts)=> evts.eventID !== action.payload)\r\n            }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default calendarReducer;","import { combineReducers } from 'redux';\r\nimport taskReducer from './task/taskReducer';\r\nimport usersTasksByStatusReducer from './task/usersTasksByStatusReducer';\r\nimport assignedTaskReducer from './task/assignedTaskReducer';\r\nimport authReducer from './authentication/authReducer';\r\nimport TimerReportReducer from './timer/TimerReportReducer';\r\nimport timerReducer from './timer/timerReducer';\r\nimport message from './message/messageReducer';\r\nimport todoReducer from './todo/todoReducer';\r\nimport departmentReducer from './company/department/departmentReducer';\r\nimport employeeReducer from './company/employee/employeeReducer';\r\nimport calendarReducer from './company/calendar/calendarReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    authenticationState: authReducer,\r\n    tasks: taskReducer, \r\n    usersTasksByStatus: usersTasksByStatusReducer,\r\n    assignedTasks: assignedTaskReducer,\r\n    todos: todoReducer,\r\n    timerReport: TimerReportReducer,\r\n    timerStatus: timerReducer,\r\n    message: message,\r\n    departments: departmentReducer,\r\n    employees: employeeReducer,\r\n    calendar: calendarReducer,\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\n\r\n\r\nconst store = createStore(\r\n        rootReducer,\r\n        compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n    )\r\n\r\n\r\nexport default store;\r\n\r\n","// Profile Component\r\n\r\nexport default function Profile ({ ...props }){\r\n\r\n  const {name, rank, stack} = props\r\n\r\n  // display profile\r\n\r\n\r\n    return (\r\n        <div>\r\n          \r\n          <h1>{name}</h1>\r\n            <h3>{rank}</h3>\r\n          <pre>{stack}</pre>\r\n          \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport Profile from './MappingForm';\r\nimport { Formik, Field, Form } from 'formik';\r\n\r\n\r\nclass DisplayProfile extends Component{\r\n\r\n    render(){\r\n\r\n        \r\n        return(\r\n            <>\r\n                <Profile name=\"Adeyemo Peter\" rank=\"Senior Developer\" stack=\"Backend\"/>\r\n                <Profile name=\"Toluwanimi Ayoola\" rank=\"Senior Developer\" stack=\"Backend\"/>\r\n                <input type=\"text\" placeholder=\"Surname\" value=\"\"/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default DisplayProfile;","import React from 'react'\r\n\r\nconst Button = props => {\r\n  const { type, label, className } = props;\r\n    return (\r\n      <button \r\n        type={type}\r\n        className={className}\r\n        {...props}\r\n      >\r\n        <i className={props.icon}></i> \r\n        {label}\r\n      </button>  \r\n    )\r\n}\r\n\r\n\r\nexport default Button;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Button from './Button';\r\nimport {HashLink as ScrollLink} from 'react-router-hash-link';\r\n\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n      <nav className=\"navbar navbar-expand-lg text-right navbar-light home-nav\">\r\n        <a href=\"../index.html\" className=\"navbar-brand\" id=\"logo\">Pace</a>\r\n        <Button \r\n          className=\"navbar-toggler\" \r\n          type=\"button\" \r\n          data-toggle=\"collapse\" \r\n          data-target=\"#this_nav\" \r\n          aria-controls=\"this_nav\" \r\n          aria-expanded=\"false\" \r\n          aria-label=\"Toggle navigation\"\r\n          label={ <span className=\"navbar-toggler-icon\"/> }\r\n        />\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"this_nav\">\r\n          <div className=\"navbar-nav\">\r\n            <Link to=\"/\" className=\"nav-link active\">Home</Link>\r\n            <ScrollLink \r\n              to=\"/#features\"         \r\n              spy=\"true\"\r\n              smooth=\"true\"\r\n              duration={500} \r\n              activeclass='active'\r\n              className=\"nav-link\"\r\n            >Features\r\n            </ScrollLink>\r\n            <ScrollLink \r\n              to=\"/#pricing\"         \r\n              spy=\"true\"\r\n              smooth=\"true\"\r\n              duration={500} \r\n              activeclass='active'\r\n              className=\"nav-link\"\r\n            >Pricing\r\n            </ScrollLink>\r\n            <Link to='/about' className=\"nav-link\">About</Link>\r\n            <Link to=\"/contact\" className=\"nav-link\">Contact</Link>\r\n          </div>\r\n          <Link to=\"/signup\" label=\"samuel\" type=\"submit\" className=\"navbar-btn btn btn-sm pace-btn pace-btn-outline-primary ml-auto\">Get Started</Link>\r\n        </div>\r\n      </nav>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <footer className=\"page-footer font-small unique-color-dark\">\r\n          <div style={{backgroundColor: 'rgb(51,94,234)'}}>\r\n            <div className=\"container\">\r\n              <div className=\"row py-4 d-flex flex-column flex-md-row align-items-center\">\r\n                <div className=\"col-md-6 col-lg-5 text-cener text-md-left mb-4 mb-md-0\">\r\n                  <h6 className=\"mb-0 text-light footer-lead\">Get connected with us on social networks!</h6>\r\n                </div>\r\n                <div className=\"col-md-6 col-lg-4 text-ceter social-links\">\r\n                  <a className=\"fb-ic\" href=\"https://facebook.com\">\r\n                    <i className=\"fab fa-facebook-f white-text mr-4\"> </i>\r\n                  </a>\r\n                  <a className=\"tw-ic\" href=\"https://twitter.com\">\r\n                    <i className=\"fab fa-twitter white-text mr-4\"> </i>\r\n                  </a>\r\n                  <a className=\"gplus-ic\" href=\"https://gmail.com\">\r\n                    <i className=\"fab fa-google-plus-g white-text mr-4\"> </i>\r\n                  </a>\r\n                  <a className=\"li-ic\" href=\"https://linkedin.com\">\r\n                    <i className=\"fab fa-linkedin-in white-text mr-4\"> </i>\r\n                  </a>\r\n                  <a className=\"ins-ic\" href=\"https://instagram.com\">\r\n                    <i className=\"fab fa-instagram white-text\"> </i>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"container text-sm-left text-md-left mt-5\">\r\n            <div className=\"row mt-3\">\r\n              <div className=\"col-md-3 col-lg-4 col-xl-3 mx-auto mb-4\">\r\n                <h6 className=\"text-uppercase font-weight-bold small-footer-heading\">Pace Timesheet</h6>\r\n                <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{width: '60px'}} />\r\n                <p>Pace is an employee time tracking system, which provides employee clock time (timesheet).</p>\r\n              </div>\r\n              <div className=\"col-md-2 col-lg-2 col-xl-2 mx-auto mb-4\">\r\n                <h6 className=\"text-uppercase font-weight-bold\">Services</h6>\r\n                <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{width: '60px'}} />\r\n                <p>\r\n                  <Link to=\"/login\">Business Management</Link>\r\n                </p>\r\n                <p>\r\n                  <Link to=\"/login\">Employee Timer</Link>\r\n                </p>\r\n                <p>\r\n                  <Link to=\"/login\">Timeline</Link>\r\n                </p>\r\n                <p>\r\n                  <Link to=\"/login\">Report</Link>\r\n                </p>\r\n              </div>\r\n              <div className=\"col-md-3 col-lg-2 col-xl-2 mx-auto mb-4\">\r\n                <h6 className=\"text-uppercase font-weight-bold small-footer-heading\">Useful links</h6>\r\n                <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{width: '60px'}} />\r\n                <p>\r\n                  <Link to=\"/login\">Your Account</Link>\r\n                </p>\r\n                <p>\r\n                  <Link to=\"/contact\">Become an Affiliate</Link>\r\n                </p>\r\n                <p>\r\n                  <Link to=\"/contact\">Contact us</Link>\r\n                </p>\r\n                <p>\r\n                  <Link to=\"/contact\">Help</Link>\r\n                </p>\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4 contact-container\">\r\n                <h6 className=\"text-uppercase font-weight-bold\">Contact</h6>\r\n                <hr className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\" style={{width: '60px'}} />\r\n                <p>\r\n                  {/* <i className=\"fas fa-phone mr-2\" /> */}\r\n                   (+234) 9028272782\r\n                </p>\r\n                <p>\r\n                  {/* <i className=\"fas fa-print mr-2\" /> */}\r\n                   (+234) 8083826262\r\n                </p>\r\n                <p>\r\n                  {/* <i className=\"fas fa-envelope mr-2\" /> */}\r\n                  team@pace.com\r\n                </p>\r\n                <p>\r\n                  {/* <i className=\"fas fa-home mr-2\" /> */}\r\n                  TIIDELab, Wuse, Abuja\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\r\n            <a href=\"https://tiidelab.com\"> Tiidelab circuit</a>\r\n          </div>\r\n      </footer>\r\n      \r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/adeyemon_peter.a6ad796a.jpg\";","export default __webpack_public_path__ + \"static/media/akan_asanga.bc2883dd.jpg\";","export default __webpack_public_path__ + \"static/media/ariyibi_baseet_.9020ef2b.jpg\";","export default __webpack_public_path__ + \"static/media/toluwanimi_ayoola.a2d2212d.jpg\";","export default __webpack_public_path__ + \"static/media/ayodele_samuel_adebayo.cb6eabb6.jpg\";","export default __webpack_public_path__ + \"static/media/opaluwa_aisha.d0a0e7a8.jpg\";","export default __webpack_public_path__ + \"static/media/v.295d46c1.jpg\";","// React\r\nimport React, { useEffect } from 'react';\r\n\r\n// Images\r\nimport peter from './pages-images/adeyemon_peter.jpg';\r\nimport akan from './pages-images/akan_asanga.jpg';\r\nimport baseet from './pages-images/ariyibi_baseet_.jpg';\r\nimport tolu from './pages-images/toluwanimi_ayoola.jpg';\r\nimport unclebay from './pages-images/ayodele_samuel_adebayo.jpg'\r\nimport aisha from './pages-images/opaluwa_aisha.jpg';\r\nimport aboutImage from './pages-images/v.jpg';\r\n\r\n\r\nconst About = () => {\r\n\r\n  useEffect(()=>{\r\n    document.title = 'About | Pace'\r\n  })\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <AboutContent />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nconst AboutContent = () => {\r\n  const paceEngineersProfile = [\r\n    {\r\n      id: 1,\r\n      name: \"Ayodele Samuel Adebayo\",\r\n      img: unclebay,\r\n      stack: \"Frontend Developer\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Opaluwa Aisha\",\r\n      img: aisha,\r\n      stack: \"Frontend Developer\",    \r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Ariyibi Baseet\",\r\n      img: baseet,\r\n      stack: \"Frontend Developer\",    \r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Adeyemo Peter\",\r\n      img: peter,\r\n      stack: \"Backend Developer\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Toluwanimi Ayoola\",\r\n      img: tolu,\r\n      stack: \"Backend Developer\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Akan Asanga\",\r\n      img: akan,\r\n      stack: \"Backend Developer\",\r\n    }\r\n\r\n  ]\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <section className=\"container about\">\r\n        <section className=\"row pace-big-screen flex-column-reverse flex-lg-row\">\r\n          <article className=\"col-12 col-lg-6\">\r\n            <section>\r\n              <h3 className=\"mb-3\">Our Vision</h3>\r\n              <p>\r\n              The most key component of time trackers are increasing in productivity,\r\nissues identifying and eliminating. Pace timesheet give you that opportunity.\r\nwith Time Tracking, Report Sheet and  productivity management features, it is very easy\r\nto track how much each task takes from start to finish, which websites was used during the work\r\nand understand how to boost you and your employees productivity.\r\n              </p>\r\n            </section>\r\n            <section className=\"mt-5\">\r\n              <h3 className=\"mb-3\">How it started</h3>\r\n              <p>\r\n                Lorem ipsum dolor, sit amet consectetur adipisicing elit. Facilis quisquam sit debitis harum esse necessitatibus iusto obcaecati unde eligendi perspiciatis et nostrum maxime, earum fugit sequi inventore! Odit, cupiditate velit!\r\n              </p>\r\n            </section>\r\n          </article>\r\n          <article className=\"col-12 col-lg-6\">\r\n            <img src={aboutImage} alt=\"pace developer \" className=\"img-fluid mb-5 clock-image\" />\r\n          </article>\r\n        </section>\r\n        <summary className=\"team\">\r\n          <h3>Pace Team </h3>\r\n        </summary>\r\n        <section className=\"row text-center pace-team\">\r\n         {\r\n\r\n          paceEngineersProfile.filter((paceEngineer) => paceEngineer.stack === \"Frontend Developer\").map(function (paceEngineerProfile){ \r\n              return (\r\n                <article className=\"col-sm\" key={paceEngineerProfile.id}>\r\n                  <img src={paceEngineerProfile.img} alt=\"pace developer \" className=\"rounded-circle mx-auto d-block\" />\r\n                  <h4>{paceEngineerProfile.name}</h4>\r\n                  <p className=\"pace-accent\">{paceEngineerProfile.stack}</p>\r\n                </article>\r\n              )\r\n            })\r\n         }         \r\n        </section>\r\n        <section className=\"row text-center pace-team\">\r\n         {\r\n\r\n          paceEngineersProfile.filter((paceEngineer) => paceEngineer.stack === \"Backend Developer\").map(function (paceEngineerProfile){ \r\n              return (\r\n                <article className=\"col-sm\" key={paceEngineerProfile.id}>\r\n                  <img src={paceEngineerProfile.img} alt=\"pace developer \" className=\"rounded-circle mx-auto d-block\" />\r\n                  <h4>{paceEngineerProfile.name}</h4>\r\n                  <p className=\"pace-accent\">{paceEngineerProfile.stack}</p>\r\n                </article>\r\n              )\r\n            })\r\n         }         \r\n        </section>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default About","export default __webpack_public_path__ + \"static/media/landingPage.c287887e.svg\";","import { Link } from 'react-router-dom';\r\n\r\n// Others\r\nimport TypeWriter from './pages-js/TypeWriter';\r\n\r\n// Images\r\nimport landingPageImg from './pages-images/landingPage.svg';\r\n\r\n\r\nconst IndexArea = () => {\r\n    return(\r\n      <>\r\n        <div className=\"row\">\r\n          <section className=\"container d-flex flex-column-reverse home-intro flex-lg-row\">\r\n              <div className=\"col d-flex flex-row\">\r\n                <section className=\"home-intro-text\">\r\n                  {/* type-writing effect */}\r\n                  <h2>Track Your Time At Your Own  \r\n                    <span className=\"typewrite\" data-period={2000} data-type='[ \"Pace|\" ]'>\r\n                      <span className=\"wrap\" />\r\n                    </span>\r\n                  </h2>\r\n                  <p>Spend less time making the right and informed decisions</p>\r\n                  <section className=\"home-intro-btn\">\r\n                    <Link\r\n                      className=\"btn pace-btn pace-btn-primary\" \r\n                      id=\"login-btn\"\r\n                      to=\"/login\"\r\n                      >\r\n                      Login\r\n                      <svg width=\"2em\" height=\"1.3em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-right\" id=\"login-arrow\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fillRule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\" />\r\n                      </svg>\r\n                    </Link>\r\n                    <Link\r\n                      type=\"submit\" \r\n                      className=\"btn pace-btn pace-btn-accent\" \r\n                      id=\"learn-btn\"\r\n                      to=\"/about\"\r\n                      >\r\n                        Learn More\r\n                    </Link>\r\n                  </section>\r\n                </section>\r\n              </div>\r\n              <div className=\"col home-intro-img\">\r\n                <img src={landingPageImg} alt=\"office timing\" className=\"img-fluid\" />\r\n              </div>\r\n          </section>\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default IndexArea;  ","\r\nconst FeaturesCard = props =>{\r\n    const {animation, duration, svg, heading, paragraph} = props\r\n    return(\r\n      <>\r\n        <article className=\"col col-sm-4\" data-aos={animation} data-aos-duration={duration} {...props}>\r\n          {svg}\r\n          <h3>{heading}</h3>\r\n          <p>{paragraph} </p>\r\n        </article>\r\n      </>\r\n    )\r\n  }\r\n  \r\nconst Features = () =>{\r\n    return(\r\n      <>\r\n      <div id=\"features\">&nbsp;</div>\r\n        <h3 data-aos=\"fade-left\" className=\"features-lead mt-3 mr-md-5 mr-4 h2 pace-accent-color text-center\">PACE <span className=\"text-dark mr-3\">FEATURES</span></h3>\r\n        <section className=\"container features-wrapper\">\r\n          <section className=\"row d-flex flex-column flex-sm-row align-items-center pace-features-1\" id=\"pace-features\">\r\n            <FeaturesCard\r\n              svg = \r\n                {\r\n                  <svg viewBox=\"0 0 16 16\" className=\"bi bi-alarm\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" d=\"M6.5 0a.5.5 0 0 0 0 1H7v1.07a7.001 7.001 0 0 0-3.273 12.474l-.602.602a.5.5 0 0 0 .707.708l.746-.746A6.97 6.97 0 0 0 8 16a6.97 6.97 0 0 0 3.422-.892l.746.746a.5.5 0 0 0 .707-.708l-.601-.602A7.001 7.001 0 0 0 9 2.07V1h.5a.5.5 0 0 0 0-1h-3zm1.038 3.018a6.093 6.093 0 0 1 .924 0 6 6 0 1 1-.924 0zM8.5 5.5a.5.5 0 0 0-1 0v3.362l-1.429 2.38a.5.5 0 1 0 .858.515l1.5-2.5A.5.5 0 0 0 8.5 9V5.5zM0 3.5c0 .753.333 1.429.86 1.887A8.035 8.035 0 0 1 4.387 1.86 2.5 2.5 0 0 0 0 3.5zM13.5 1c-.753 0-1.429.333-1.887.86a8.035 8.035 0 0 1 3.527 3.527A2.5 2.5 0 0 0 13.5 1z\" />\r\n                  </svg>\r\n                }\r\n              animation=\"fade-right\"\r\n              duration=\"2000\"\r\n              heading=\"Time Tracking\"\r\n              paragraph=\"Easy time time tracking and monitoring process for day day to day activities and tasks.\"\r\n            />\r\n    \r\n            <FeaturesCard\r\n              svg = \r\n                {\r\n                  <svg viewBox=\"0 0 16 16\" className=\"bi bi-file-earmark-spreadsheet\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" d=\"M5 10H3V9h10v1h-3v2h3v1h-3v2H9v-2H6v2H5v-2H3v-1h2v-2zm1 0v2h3v-2H6z\" />\r\n                    <path d=\"M4 0h5.5v1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4.5h1V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2z\" />\r\n                    <path d=\"M9.5 3V0L14 4.5h-3A1.5 1.5 0 0 1 9.5 3z\" />\r\n                  </svg>\r\n                }\r\n              animation=\"fade-down\"\r\n              duration=\"1000\"\r\n              heading=\"Report Sheet\"\r\n              paragraph=\"Keep accountability for time and money spent on our report page.\"\r\n            />\r\n    \r\n            <FeaturesCard\r\n              svg = \r\n              {\r\n                  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-bar-chart-line\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" d=\"M11 2a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v12h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1v-3a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3h1V7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7h1V2zm1 12h2V2h-2v12zm-3 0V7H7v7h2zm-5 0v-3H2v3h2z\" />\r\n                  </svg>\r\n                }\r\n              animation=\"fade-left\"\r\n              duration=\"2000\"\r\n              heading=\"Productivity Management\"\r\n              paragraph=\"Assign and receive tasks and, make on tasks to suit your discomforts.\"\r\n            />\r\n    \r\n          </section>\r\n    \r\n          {/* row 2 start */}\r\n          \r\n          <section className=\"row m-t5 d-flex flex-column flex-sm-row align-items-center\" id=\"pace-features\">\r\n            <FeaturesCard\r\n                svg = \r\n                {\r\n                  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-calendar3\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fillRule=\"evenodd\" d=\"M14 0H2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zM1 3.857C1 3.384 1.448 3 2 3h12c.552 0 1 .384 1 .857v10.286c0 .473-.448.857-1 .857H2c-.552 0-1-.384-1-.857V3.857z\" />\r\n                      <path fillRule=\"evenodd\" d=\"M6.5 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\" />\r\n                  </svg>\r\n                  }\r\n                  animation=\"fade-right\"\r\n                  duration=\"2000\"\r\n                heading=\"Calendar\"\r\n                paragraph=\"Stay up to date and management events and tasks on Pace Calendar\"\r\n              />\r\n            \r\n            <FeaturesCard\r\n                svg = \r\n                {\r\n                  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-receipt-cutoff\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fillRule=\"evenodd\" d=\"M1.92.506a.5.5 0 0 1 .434.14L3 1.293l.646-.647a.5.5 0 0 1 .708 0L5 1.293l.646-.647a.5.5 0 0 1 .708 0L7 1.293l.646-.647a.5.5 0 0 1 .708 0L9 1.293l.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .801.13l.5 1A.5.5 0 0 1 15 2v13h-1V2.118l-.137-.274-.51.51a.5.5 0 0 1-.707 0L12 1.707l-.646.647a.5.5 0 0 1-.708 0L10 1.707l-.646.647a.5.5 0 0 1-.708 0L8 1.707l-.646.647a.5.5 0 0 1-.708 0L6 1.707l-.646.647a.5.5 0 0 1-.708 0L4 1.707l-.646.647a.5.5 0 0 1-.708 0l-.509-.51L2 2.118V15H1V2a.5.5 0 0 1 .053-.224l.5-1a.5.5 0 0 1 .367-.27zM0 15.5a.5.5 0 0 1 .5-.5h15a.5.5 0 0 1 0 1H.5a.5.5 0 0 1-.5-.5z\" />\r\n                      <path fillRule=\"evenodd\" d=\"M3 4.5a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm8-8a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5z\" />\r\n                  </svg>\r\n                  }\r\n                animation=\"fade-up\"\r\n                duration=\"1000\"\r\n                heading=\"Billing Management\"\r\n                paragraph=\"Cost your billings on an hourly employee work hour basis.\"\r\n                />\r\n    \r\n            <FeaturesCard\r\n                svg = \r\n                {\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-card-checklist\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fillRule=\"evenodd\" d=\"M14.5 3h-13a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z\" />\r\n                      <path fillRule=\"evenodd\" d=\"M7 5.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5zm-1.496-.854a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 1 1 .708-.708l.146.147 1.146-1.147a.5.5 0 0 1 .708 0zM7 9.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5zm-1.496-.854a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 0 1 .708-.708l.146.147 1.146-1.147a.5.5 0 0 1 .708 0z\" />\r\n                    </svg>\r\n                  }\r\n                animation=\"fade-left\"\r\n                duration=\"2000\"\r\n                heading=\"Todo-List\"\r\n                paragraph=\"Break down task into smaller bits to increase work efficiency.\"\r\n              />\r\n          </section>\r\n              </section>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  export default Features;","export default __webpack_public_path__ + \"static/media/dashboard.438fff72.png\";","export default __webpack_public_path__ + \"static/media/manage-employee.7e3c3ca5.png\";","// Images\r\nimport dashboard from './pages-images/dashboard.png';\r\nimport manageEmployee from './pages-images/manage-employee.png';\r\n\r\nconst ShowDashboard = () => {\r\n    return (\r\n      <>\r\n    \r\n        {/* SAMPLES OF DASHBOARD SECTION*/}\r\n        <h3 data-aos=\"fade-right\" className=\"dashboard-show-lead mr-4 h3 text-dark text-center\">UI <span className=\"pace-accent-color\">SCREENSHOTS</span></h3>\r\n        <section className=\"container dashboard-display-wrapper mt-md-5\">\r\n          <div className=\"row block block-1\">\r\n            <article className=\"col d-md-flex flex-md-row-reverse\" id=\"dashboard-display\" data-aos=\"zoom-in\" data-aos-duration=\"2000\">\r\n              <h3 className=\"d-md-none d-sm-block mb-4\">Admin Dashboard</h3>\r\n              <img src={dashboard} alt=\"pace dashboard\" className=\"img-fluid mb-5\" />\r\n              <blockquote>\r\n              <h3 className=\"d-none d-md-block\">Admin Dashboard</h3>\r\n                Pace version 1 Dashboard with bar-chat report and also a section showing the most active employee\r\n                <ul className=\"mt-3\">\r\n                  <li>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-bar-chart\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fillRule=\"evenodd\" d=\"M4 11H2v3h2v-3zm5-4H7v7h2V7zm5-5h-2v12h2V2zm-2-1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1h-2zM6 7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7zm-5 4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1v-3z\" />\r\n                    </svg>\r\n                    <span>Bar chart</span>\r\n                  </li>\r\n                  <li>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-stopwatch\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fillRule=\"evenodd\" d=\"M6 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1H9v1.07A7.001 7.001 0 0 1 8 16 7 7 0 0 1 7 2.07V1h-.5A.5.5 0 0 1 6 .5zM8 3a6 6 0 1 0 .001 12A6 6 0 0 0 8 3zm0 2.1a.5.5 0 0 1 .5.5V9a.5.5 0 0 1-.5.5H4.5a.5.5 0 0 1 0-1h3V5.6a.5.5 0 0 1 .5-.5z\" />\r\n                    </svg>\r\n                    <span>Dashboard Timer &amp; Title bar</span>\r\n                  </li>\r\n                  <li>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-person-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fillRule=\"evenodd\" d=\"M8 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0zM6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm6 5c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10zM13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z\" />\r\n                    </svg>\r\n                    <span>View Active employee</span>\r\n                  </li>\r\n                </ul>\r\n              </blockquote>\r\n            </article>\r\n          </div>\r\n          <div className=\"row block block-2\">\r\n            <article className=\"col d-md-flex\" id=\"dashboard-display\">\r\n              <h3 className=\"d-md-none d-sm-block mb-4\">Add Employee Board</h3>\r\n              <img src={manageEmployee} className=\"img-fluid mb-5\" alt=\"pace dashboard \" data-aos=\"fade-right\" data-aos-duration=\"2000\" />\r\n              <blockquote data-aos=\"fade-left\" data-aos-duration=\"2000\">  \r\n              <h3 className=\"d-none d-md-block\">Add Employee Board</h3>\r\n                Pace version 1 Dashboard with bar-chat report and also a section showing the most active employee\r\n                <ul className=\"mt-3\">\r\n                  <li>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-person-plus\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fillRule=\"evenodd\" d=\"M8 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0zM6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm6 5c0 1-1 1-1 1H1s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C9.516 10.68 8.289 10 6 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10zM13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z\" />\r\n                    </svg>\r\n                    <span>Add new employee</span>\r\n                  </li>\r\n                  <li>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-list-task\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fillRule=\"evenodd\" d=\"M2 2.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5H2zM3 3H2v1h1V3z\" />\r\n                      <path d=\"M5 3.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zM5.5 7a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1h-9zm0 4a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1h-9z\" />\r\n                      <path fillRule=\"evenodd\" d=\"M1.5 7a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5V7zM2 7h1v1H2V7zm0 3.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5H2zm1 .5H2v1h1v-1z\" />\r\n                    </svg>\r\n                    <span>Assign task</span>\r\n                  </li>\r\n                  <li>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-search\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path fillRule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\r\n                      <path fillRule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\r\n                    </svg>\r\n                    <span>Search feature</span>\r\n                  </li>\r\n                </ul>\r\n              </blockquote>\r\n            </article>\r\n          </div>\r\n        </section>\r\n      </>\r\n    )\r\n};\r\n\r\n  \r\n  export default ShowDashboard;","// React\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Layout\r\nimport Button from \"../layouts/Button\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSitemap, faSnowflake, faBookReader } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Pricing = () => {\r\n    return(\r\n        <>\r\n            <div className=\"mb-1\" id=\"pricing\">&nbsp;</div>\r\n            <div className=\"container pricing mb-5 pricing-tags \">\r\n                <div className=\"text-center\">\r\n                    <h4 className=\"w-2 mt-5 mg-lg-0 pace-accent-color p-2\"  data-aos=\"zoom-out-down\">Pricing</h4>\r\n                    <h2 data-aos=\"fade-up-left\">Optimized for businesses of all sizes.</h2>\r\n                    <p className=\"pace-primary-color\" data-aos=\"fade-up-right\">Flexible monthly pricing for projects and teams of all sizes. Get billed in your local currency..</p>\r\n                </div>\r\n                <div className=\"row mt-3 mt-4 p-lg-2 d-flex justify-content-center\">\r\n                    <div className=\"p-2 border\" data-aos=\"fade-down\">\r\n                        <h2 className=\"mb-3 pace-accent-color text-center\">\r\n                        <FontAwesomeIcon icon={faSitemap} />&nbsp;Premium...\r\n                        </h2>\r\n                        <h5 className=\"mb-4 text-center\">#32, 000 / month</h5>\r\n                        <Link to=\"/pricing\">\r\n                            <Button label=\"Get Started\" className=\"btn pace-btn pace-btn-accent pricing-btn\" />\r\n                        </Link>\r\n                        <h4 className=\"mt-3 text-center\">What's included</h4>\r\n                        <ul className=\"px-4 text-center list-unstyled\">\r\n                            <li>Timer Reminder</li>\r\n                            <li>Unlimited staff</li>\r\n                            <li>Unlimited Todo List</li>\r\n                            <li>Request</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div>&nbsp;</div>\r\n                    <div className=\"p-2 border mt-md-0 mt-3\" data-aos=\"fade-down\">\r\n                        <h2 className=\"mb-3 pace-accent-color text-center\">\r\n                        <FontAwesomeIcon icon={faSnowflake} />&nbsp;Basic...\r\n                        </h2>\r\n                        <h5 className=\"mb-4 text-center\">#12, 000 / month</h5>\r\n                        <Link to=\"/pricing\">\r\n                            <Button label=\"Get Started\" className=\"btn pace-btn pace-btn-accent pricing-btn\" />\r\n                        </Link>\r\n                        <h4 className=\"mt-3 text-center\">What's included</h4>\r\n                        <ul className=\"px-4 text-center list-unstyled\">\r\n                            <li>Timer Reminder</li>\r\n                            <li>Workspace for 7 staff</li>\r\n                            <li>Todo List</li>\r\n                            <li>Request</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div>&nbsp;</div>\r\n                    <div className=\"p-2 bg-dark mt-md-0 mt-3\" data-aos=\"fade-down\">\r\n                        <h2 className=\"mb-3 pace-accent-color text-center\">\r\n                        <FontAwesomeIcon icon={faBookReader} />&nbsp;Free....\r\n                        </h2>\r\n                        <h5 className=\"mb-4  text-white text-center\">#0 / month</h5>\r\n                        <Link to=\"/pricing\">\r\n                            <Button label=\"Get Started\" className=\"btn pace-btn pace-btn-primary pricing-btn\" />\r\n                        </Link>\r\n                        <h4 className=\"mt-3 text-center\">What's included</h4>\r\n                        <ul className=\"px-4 text-center list-unstyled\">\r\n                            <li>Timer Reminder</li>\r\n                            <li>Workspace for 3 staff</li>\r\n                            <li>Limited Todo List</li>\r\n                            <li>Limited Request</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/*--------------------------- FAQ Section --------------------------------------------------------*/}\r\n            {/* <div className=\"container mb-5\">\r\n            <h3 className=\"text-center text-bold mt-3\" style={{color:'#FF6584'}}>Frequently Asked Questions</h3>\r\n        <div className=\"d-flex flex-row justify-content-center flex-wrap\">\r\n            <div className=\"p-2 mt-3\">\r\n                <div className=\"card mb-3 mt-3 ml-3\" style={{width:'325px',height:'200px'}}>\r\n                    <div className=\"card-header p-3\" style={{background:'rgb(51, 94, 234)'}}>\r\n                        <h6 className=\"text-white text-center\">Can we access pacetimesheet for free?</h6>\r\n                    </div>\r\n                    <div className=\"card-body p-2 text-justify\">\r\n                        <h6 style={{fontSize:'16px',fontWeight:'normal'}}>\r\n                            yes! you will have a chance to try pacetimesheet for free. No credit card, contract, or signature is required. But you will be restricted to some features like a workspace for staff, to-do list, and request.\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-2 mt-3\">\r\n                <div className=\"card mb-3 mt-3 ml-3\" style={{width:'325px',height:'200px'}}>\r\n                    <div className=\"card-header p-3\" style={{background:'rgb(51, 94, 234)'}}>\r\n                    <h6 className=\"text-white text-center\">What forms of payment did you accept?</h6>\r\n                    </div>\r\n                    <div className=\"card-body p-2 text-justify\">\r\n                        <h6 style={{fontSize:'16px',fontWeight:'normal'}}>\r\n                        we accept all major credit cards - Visa, MasterCard, Paypal. so you can choose the one that better works for you. Also, for every charge you will get full PDF invoice.\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-2 mt-3\">\r\n                <div className=\"card mb-3 mt-3 ml-3\" style={{width:'325px',height:'200px'}}>\r\n                    <div className=\"card-header p-3\" style={{background:'rgb(51, 94, 234)'}}>\r\n                    <h6 className=\"text-white text-center\">Can we run as many projects as we like?</h6>\r\n                    </div>\r\n                    <div className=\"card-body p-2 text-justify\">\r\n                        <h6 style={{fontSize:'16px',fontWeight:'normal'}}>\r\n                        Yes you can run as many project as you want as we don't have any limitation. and you will never be charged extra for more projects in  Pacetimesheet.\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-2 mt-3\">\r\n                <div className=\"card mb-3 mt-3 ml-3\" style={{width:'325px',height:'200px'}}>\r\n                    <div className=\"card-header p-3\" style={{background:'rgb(51, 94, 234)'}}>\r\n                    <h6 className=\"text-white text-center\">Does pacetimesheet automatically stop after several minutes of user inactivity?</h6>\r\n                    </div>\r\n                    <div className=\"card-body p-2 text-justify\">\r\n                        <h6 style={{fontSize:'16px',fontWeight:'normal'}}>\r\n                        Yes, pacetimesheet automatically stops tracking time when your employees don't perform any activity for 5minutes.\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-2 mt-3\">\r\n                <div className=\"card mb-3 mt-3 ml-3\" style={{width:'325px',height:'200px'}}>\r\n                    <div className=\"card-header p-3\" style={{background:'rgb(51, 94, 234)'}}>\r\n                    <h6 className=\"text-white text-center\">Can we cancel at anytime?</h6>\r\n                    </div>\r\n                    <div className=\"card-body p-2 text-justify\">\r\n                        <h6 style={{fontSize:'16px',fontWeight:'normal'}}>\r\n                        Yes you can cancel subscription at anytime. Use how long you want and cancel when you want.\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-2 mt-3\">\r\n                <div className=\"card mb-3 mt-3 ml-3\" style={{width:'325px',height:'200px'}}>\r\n                    <div className=\"card-header p-3\" style={{background:'rgb(51, 94, 234)'}}>\r\n                    <h6 className=\"text-white text-center\">Can we use this for project management?</h6>\r\n                    </div>\r\n                    <div className=\"card-body p-2 text-justify\">\r\n                        <h6 style={{fontSize:'16px',fontWeight:'normal'}}>\r\n                        Yes our platform has built in feature where you can track your time on per meeting or project basis. This feature is very useful if you want to bill your client on the basis of hours worked on a task.\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> */}\r\n        {/* </div> */}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Pricing;","// React\r\nimport { React } from 'react';\r\n\r\n// Components\r\nimport IndexArea from './IndexArea';\r\nimport Features from './Features';\r\nimport ShowDashboard from './ShowDashboard';\r\nimport Pricing from './Pricing';\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <header className=\"container\">\r\n        <IndexArea />\r\n        <div className=\"mt-5 mb-5\"></div>\r\n        <Features />\r\n      </header>\r\n        <ShowDashboard />\r\n        <Pricing />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/4oh4.81c0b1ba.png\";","import { useEffect } from \"react\";\r\nimport { Link }  from \"react-router-dom\";\r\n\r\n\r\n// Images\r\nimport deadEnd from '../pages/pages-images/4oh4.png';\r\n\r\nconst PageNotFound = () => {\r\n    \r\n    useEffect(()=>{\r\n        document.title = 'Page not found | 404'\r\n    })\r\n\r\n\r\n    return(\r\n        <>\r\n        <style>\r\n            {\r\n                `\r\n                nav.navbar,\r\n                footer{\r\n                    display: none;\r\n                }\r\n                `\r\n            }\r\n        </style>\r\n            <div className=\"pageNotFound-wrapper\">\r\n                <div className=\"errorWrapper\">\r\n                    <h4 className=\"error404\">404\r\n                    </h4> \r\n                    <img src={deadEnd} alt=\"lost within the app\" className=\"img-fluid error-img\" />\r\n                </div>\r\n                <div>\r\n                    <p className=\"errorText\">\r\n                        You've clicked a broken link... let's get you back on track <Link to=\"/\">Go Home</Link>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default PageNotFound;","// React \r\nimport React, {useEffect} from 'react';\r\nimport { Route, Switch } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n// Layouts\r\nimport Navbar from './layouts/Navbar';\r\nimport Footer from './layouts/Footer';\r\n\r\n// Others\r\nimport AOS from 'aos';\r\n\r\n// Components\r\nimport About from './pages/About';\r\nimport Home from './pages/Home';\r\nimport PageNotFound from './pages/404';\r\n\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n\r\n    // Initialize AOS animation\r\n    AOS.init({\r\n      duration : 2000\r\n    });\r\n\r\n    document.title = 'Pace Timesheet | Home'\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <main className=\"container\">\r\n        <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/about\" component = {About} />\r\n            <Route exact path=\"/\" component = {Home} />\r\n            <Route component = {PageNotFound} />\r\n          </Switch>\r\n      </main>\r\n        <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default App;","// Add form input to be validated here if not already listed\r\n\r\n\r\n// yup validation\r\nimport * as Yup from 'yup';\r\n\r\n// regex for email\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n\r\n// Forgot Password\r\nexport const forgotPasswordSchema = Yup.object().shape({\r\n    email: Yup.string().email('Invalide email format').required('Email is required')\r\n})\r\n\r\n// Reset Password\r\nexport const resetPasswordSchema = Yup.object().shape({\r\n    password: Yup.string().min(5, 'Password must be more than 7').required('Password is required'),\r\n    confirmPassword: Yup.string().required('Please confirm password').oneOf([Yup.ref('password')], 'Password Mismatch')\r\n})\r\n\r\n// Login Schema\r\nexport const loginSchema = Yup.object().shape({\r\n    email: Yup.string().email('Invalid email format').required('Email is required'),\r\n    password: Yup.string().required('Password is required'),\r\n});\r\n\r\n// Signup Schema\r\nexport const signUpSchema = Yup.object().shape({\r\n    companyName: Yup.string().max(15, 'Workspace Name must be less than 16').required('Workspace Name is required'),\r\n    email: Yup.string().required('Email is required'),\r\n    password: Yup.string().min(4, 'Password must be at least 7 characters').required('Password is required'),\r\n    confirmPassword: Yup.string().required('Please confirm password').oneOf([Yup.ref('password')], 'Password Mismatch'),\r\n    termsOfService : Yup.bool().oneOf([true], 'Please review and accept Terms and Condition')\r\n})\r\n\r\n// Change Password\r\nexport const changePasswordSchema = Yup.object().shape({\r\n    password: Yup.string().min(4, 'Password must be at least 7 characters').required('Password is required'),\r\n    confirmPassword: Yup.string().required('Please confirm password').oneOf([Yup.ref('password')], 'Password Mismatch'),\r\n})\r\n\r\n// ContactUs form input validation\r\nexport const contactUsSchema = Yup.object().shape({\r\n    contactName: Yup.string().required('Name is required'),\r\n    contactEmail: Yup.string().email('Invalid email format').required('Email is required'),\r\n    message: Yup.string().required('Message cannot be blank'),\r\n});\r\n\r\n//  AddEmployee Schema\r\nexport const AddEmployeeSchema = Yup.object().shape({\r\n    email: Yup.string().email('Invalid Email Format').required('Email is required'),\r\n    billRateCharge: Yup.number().required('Bill Rate Charge is required'),\r\n    expectedWorkHours: Yup.number().required('Expected Work Hour is required'),\r\n    departmentID: Yup.string().required('Department is required'),\r\n    roleID: Yup.string().required('Role is required'),\r\n    staffRole: Yup.string().required('Position is required')\r\n})\r\n\r\n\r\n\r\n//  Todo\r\n\r\nexport const TodoListSchema = Yup.object().shape({\r\n    title: Yup.string().required('Todo Title is required'),\r\n    // dueDate: Yup.date().required(\"Due Date is Required\").nullable('kll')\r\n})","// react\r\nimport React from 'react';\r\n\r\n// layout, formik\r\nimport { useField } from 'formik';\r\n\r\nexport const TextInput = ({ label, labelClassName, ...props }) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name} className={labelClassName}>{label}</label>\r\n      <input className=\"text-input\" {...field} {...props}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const CheckbBox = ({ children, ...props }) => {\r\n  const [field] = useField({ ...props});\r\n  return (\r\n    <div>\r\n      <label className=\"checkbox\">\r\n        <input type=\"checkbox\" {...field} {...props} />\r\n        <label className={` form-check-label ${props.titleclassname}`} htmlFor={props.id}>{props.title}</label>\r\n        {children}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const SelectOption = ({children, name, labelClassName, ...props})=>{\r\n  return(\r\n  <>\r\n      <div>\r\n        <label htmlfor={ props.name || props.id } style={{}} display='block' >color</label>\r\n          <select name={props.name} value={props.value} display='block'>\r\n            {children}\r\n          </select>\r\n      </div>\r\n    </>    \r\n      )\r\n}\r\n\r\n\r\n // Textarea component\r\nexport const TextArea = ({ label, resize, labelClassName, ...props }) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id} className={labelClassName}>{label}</label>\r\n      <textarea \r\n          className=\"text-input\" \r\n          {...field} \r\n          {...props}\r\n        />\r\n    </>\r\n  );\r\n};\r\n\r\n// Datalist component\r\nexport const DataList = ({label, children, name, labelClassName, ...props})=>{\r\n  return(\r\n  <>\r\n      <div>\r\n        <label htmlFor={ props.id } style={{}} display='block' >{ label }</label>\r\n          <datalist name={props.name} value={props.value} display='block'>\r\n           <option> {children}</option>\r\n          </datalist>\r\n      </div>\r\n    </>    \r\n      )\r\n}\r\n\r\n// this is rough, will clean up once i'm done sorting it out\r\nexport const Datalist = ({label,id, value, key, children, name, labelClassName, ...props})=>{\r\n  return(\r\n  <>\r\n      <div>\r\n        <label htmlFor={ props.id } style={{}} display='block' >{ label }</label>\r\n          {/* <datalist> */}\r\n          <datalist id= {id}>\r\n            {/* {props.name.map((designation) => { */}\r\n              {/* return ( */}\r\n                <option\r\n                  value={value}\r\n                  key={key}\r\n                  // value={`${name.id}`}\r\n                  // key={`${name.id}`}\r\n                >\r\n                  {/* {`${designation.designation_title}`} */}\r\n                </option>\r\n              {/* ); */}\r\n            {/* })} */}\r\n  </datalist>\r\n      </div>\r\n    </>    \r\n      )\r\n}\r\n\r\n\r\n","//  This file contains all the root endpoint for Api in this application\r\n\r\n\r\n// Contact us \r\nexport const CONTACT_PACETEAM_API = 'https://pacetimesheet.herokuapp.com/api/contact-us/contact';\r\n\r\n// Handles Authentication, /signUp, /login\r\nexport const AUTH_API_URL = 'https://pacetimesheet.herokuapp.com/api/users/';\r\n\r\n// Update user personal profile (/:staffID)\r\nexport const USER_PROFILE_URL = 'https://pacetimesheet.herokuapp.com/api/users/companyName/userProfile/';\r\nexport const UPDATE_USER_PASSWORD = 'https://pacetimesheet.herokuapp.com/api/users/companyName/userProfile/changePassword/';\r\n\r\n/* TODO API */ \r\nexport const TODO_API_URL = 'https://pacetimesheet.herokuapp.com/api/todo/companyName/todolist/'\r\n\r\n\r\n// TASK API\r\nexport const ASSIGN_TASK_API_URL = 'https://pacetimesheet.herokuapp.com/api/tasks/companyName/newTask/';\r\nexport const TASK_API_URL = 'https://pacetimesheet.herokuapp.com/api/tasks/companyName/';\r\nexport const USERS_TASKS_BY_STATUS_API_URL = 'https://pacetimesheet.herokuapp.com/api/tasks/companyName/status/';\r\nexport const ASSIGNED_TASK_API_URL = 'https://pacetimesheet.herokuapp.com/api/tasks/companyName/assignedTasks/';\r\nexport const FETCH_COMPANY_TASK_SHEET_URL = 'https://pacetimesheet.herokuapp.com/api/taskSheet/companyName/departments/';\r\nexport const UPDATE_TASK_STATUS_API_URL = 'https://pacetimesheet.herokuapp.com/api/tasks/companyName/editTaskStatus/';\r\nexport const DELETE_ASSIGNED_TASK_API_URL = 'https://pacetimesheet.herokuapp.com/api/tasks/companyName/deleteTask/';\r\nexport const FETCH_TASK_DETAILS_API_URL = 'https://pacetimesheet.herokuapp.com/api/tasks/companyName/select/';\r\nexport const FETCH_TASKS_BY_STATUS_API_URL = 'https://pacetimesheet.herokuapp.com/api/tasks/companyName/allTasks/'\r\n\r\n\r\n\r\n// DEPARTMENT API\r\nexport const ADD_DEPARTMENT_API = 'https://pacetimesheet.herokuapp.com/api/users/companyName/companyProfile/addDepartment/';\r\nexport const FETCH_DEPARTMENT_API = 'https://pacetimesheet.herokuapp.com/api/users/companyName/companyProfile/department/';\r\n\r\n// EMPLOYEE API\r\nexport const ADD_NEW_EMPLOYEE_API = 'https://pacetimesheet.herokuapp.com/api/users/signUp/companyName/addUser/';\r\nexport const FETCH_EMPLOYEES_LIST_API = 'https://pacetimesheet.herokuapp.com/api/users/companyName/employee/'\r\n\r\n// COMPANY API\r\nexport const FETCH_COMPANY_PROFILE_API = 'https://pacetimesheet.herokuapp.com/api/users/companyName/companyProfile/';\r\nexport const UPDATE_COMPANY_PROFILE_API = 'https://pacetimesheet.herokuapp.com/api/users/companyName/companyProfile/updateProfile/';\r\nexport const UPDATE_EMPLOYEE_BILLING_AND_TIME_API = 'https://pacetimesheet.herokuapp.com/api/users/companyName/employee/timeAndBilling/'\r\n\r\n// CALENDAR\r\n// export const ADD_NEW_CALENDAR_EVENT = 'https://pacetimesheet.herokuapp.com/api/companyName/calendar/new/';\r\nexport const FETCH_CALENDAR_EVENT_API = 'https://pacetimesheet.herokuapp.com/api/calendar/companyName/';\r\nexport const NEW_CALENDAR_EVENT_API = 'https://pacetimesheet.herokuapp.com/api/calendar/companyName/new/';\r\nexport const EDIT_CALENDAR_EVENT_API = 'https://pacetimesheet.herokuapp.com/api/calendar/companyName/edit/';\r\nexport const DELETE_CALENDAR_EVENT_API = 'https://pacetimesheet.herokuapp.com/api/calendar/companyName/delete/';\r\n\r\n// TIMER\r\nexport const TIMER_INITIALIZER_API = 'https://pacetimesheet.herokuapp.com/api/timeSheet/companyName/newDay/';\r\nexport const START_TIMER_API = 'https://pacetimesheet.herokuapp.com/api/timeSheet/companyName/startTime/';\r\nexport const STOP_TIMER_API = 'https://pacetimesheet.herokuapp.com/api/timeSheet/companyName/stopTime/';\r\nexport const PERSONAL_TIME_SHEET_API = 'https://pacetimesheet.herokuapp.com/api/timeSheet/companyName/';\r\nexport const COMPANY_TIME_SHEET_API = 'https://pacetimesheet.herokuapp.com/api/timeSheet/companyName/company/:id';\r\nexport const DEPARTMENT_TIME_SHEET_API = 'https://pacetimesheet.herokuapp.com/api/timeSheetcompanyName/department/:id';","import { toast } from 'react-toastify'; \r\n\r\n\r\n// Common\r\nconst netWorkError  =  () => toast.warning('Network Error')\r\nconst sessionExpired = () =>  toast.warning('Session Expired')\r\nconst somethingWentWrongLogger = () =>  toast.warning('Something went wrong, Please try again')\r\n\r\n\r\n\r\n//  Login Toast\r\nconst invalidDetailsLogger = () => toast.warning('Invalid Login details');\r\nconst userIsAuthenticatedLogger = () => toast.info('Logging in');\r\nconst welcomeBackLogger = () => toast.info('Welcome Back');\r\n\r\n\r\n// Registration Toast\r\nconst registrationFailLogger = () => toast.warning('Registration Failed');\r\nconst registrationCompletedLogger = () => toast.info('Registration Successful');\r\nconst emailAlreadyExistLogger = () => toast.warning('Email Already Exist')\r\n\r\n\r\n// Manage Employee Toast\r\nconst emailAlreadyExist = () => toast.warning('Email Already Exist');\r\n\r\n\r\n// Logout Toast\r\nconst logOutSuccessLogger = () => toast.warning('Logout Successful');\r\n\r\n// Users Setting Toasts\r\nconst profileUpdateCompletedLogger = () => toast.info('Profile Update Successfully');\r\nconst profileUpdateFailLogger = () => toast.warning('Update Failed, Please try again');\r\n\r\n// Todo\r\nconst invalidTodoTitle  =  () => toast.warning('Todo title is required');\r\n\r\n\r\n// Tasks\r\nexport const taskNotSent = () => toast.warning('Task Not Sent Try again');\r\nexport const taskSent = () => toast.info('Task Sent Successfully');\r\nexport const taskStatusUpdated = () => toast.info('Task Status Updated')\r\n\r\n\r\n// Calendar\r\nexport const calendarEventNotSavedLogger = () => toast.warning('Event Not Set!!! Please Try again');\r\nexport const eventAddedSuccessfullyLogger = () => toast.info('Event added Successfully');\r\nexport const eventDeletedSuccessfullyLogger = () =>  toast.info('Event Deleted Successfully');\r\nexport const eventNotDeletedLogger = () => toast.warning('Event Not Deleted Please Try again');\r\nexport const eventUpdatedSuccessfullyLogger = () => toast.info('Event updated Successfully');\r\nexport const eventnNotUpdatedLogger= () => toast.info('Event not updated!! Please try again');\r\n\r\n\r\n\r\n\r\nexport{\r\n    invalidDetailsLogger,\r\n    userIsAuthenticatedLogger,\r\n    emailAlreadyExistLogger,\r\n    registrationFailLogger,\r\n    registrationCompletedLogger,\r\n    logOutSuccessLogger,\r\n    invalidTodoTitle,\r\n    netWorkError,\r\n    somethingWentWrongLogger,\r\n    sessionExpired,\r\n    profileUpdateCompletedLogger,\r\n    profileUpdateFailLogger,\r\n    emailAlreadyExist,\r\n    welcomeBackLogger,\r\n}","// React\r\nimport React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n// Formik\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport { contactUsSchema } from '../Validation/Schema';\r\n\r\n// Layouts \r\nimport Button from '../layouts/Button';\r\nimport { TextInput, TextArea } from '../layouts/FormInput';\r\nimport { CONTACT_PACETEAM_API } from '../../services/root-endpoints';\r\nimport axios from 'axios';\r\nimport { somethingWentWrongLogger } from '../../toaster';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nclass ContactUs extends Component {\r\n  redirectToThanks = () =>{\r\n    const { history } = this.props;\r\n    history.push('/thanks')\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = 'Contact us'\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <ToastContainer />\r\n        <main className=\"container d-flex justify-content-center align-items-center mt-5\">\r\n          <div className=\"row\">\r\n            <div className=\"form-con col-lg-12 mb-5\">\r\n              {/* link to go back to the home page */}\r\n              <Link to=\"/\">\r\n                <i className=\"fas fa-home\" />\r\n              </Link>\r\n              <div className=\"form-heading mt-2\">\r\n                <h1>Contact Us</h1>\r\n              </div>\r\n              <Formik  \r\n                initialValues={{\r\n                contactName: '',\r\n                contactEmail: '',\r\n                message: ''\r\n              }}\r\n                validationSchema = {contactUsSchema}\r\n                onSubmit={ (values, action) =>{\r\n                  axios.post(CONTACT_PACETEAM_API, values)\r\n                  .then((response)=>{\r\n                    console.log(response)\r\n                    this.redirectToThanks()\r\n                  })\r\n                  .catch((error)=>{\r\n                    console.log(error)\r\n                    action.setSubmitting(false)\r\n                    somethingWentWrongLogger()\r\n                  })\r\n                }}\r\n              > \r\n                {({touched, errors, values, handleSubmit, handleChange, isSubmitting}) => (\r\n                  <Form className=\"mt-5\"  onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <TextInput \r\n                        label = \"Name\"\r\n                        name = \"contactName\"\r\n                        id = \"contactName\"\r\n                        type = \"text\"\r\n                        value={values.contactName}\r\n                        className = {`form-control lead  ${\r\n                          touched.contactName && errors.contactName ? \"is-invalid\" : \"\"\r\n                          }`}\r\n                        labelClassName=\"lead\"\r\n                        placeholder = \"John Doe\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <ErrorMessage\r\n                        component=\"div\"\r\n                        name=\"name\"\r\n                        className=\"invalid-feedback p-0\"\r\n                     />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <TextInput \r\n                        label = \"Email\"\r\n                        name = \"contactEmail\"\r\n                        id = \"contactEmail\"\r\n                        type = \"email\"\r\n                        value = {values.contactEmail}\r\n                        className={`form-control lead  ${\r\n                          touched.contactEmail && errors.contactEmail ? \"is-invalid\" : \"\"\r\n                          }`}\r\n                        labelClassName=\"lead\"\r\n                        placeholder = \"johndoe@gmail.com\"\r\n                        onChange={handleChange} \r\n                      />\r\n                      <ErrorMessage\r\n                        component=\"div\"\r\n                        name=\"email\"\r\n                        className=\"invalid-feedback p-0\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <TextArea \r\n                        label = \"Message\"\r\n                        name = \"message\"\r\n                        id = \"message\"\r\n                        value = {values.message}\r\n                        className={`form-control lead  ${\r\n                          touched.message && errors.message ? \"is-invalid\" : \"\"\r\n                          }`}\r\n                        labelClassName=\"lead\"\r\n                        rows = \"8\"\r\n                        cols = \"57\"\r\n                        placeholder = \"please drop your message here\"\r\n                        onChange={handleChange} \r\n                      />\r\n                      <ErrorMessage\r\n                        component=\"div\"\r\n                        name=\"message\"\r\n                        className=\"invalid-feedback p-0\"\r\n                     />    \r\n                    </div>\r\n                   \r\n                    <Button \r\n                      type=\"submit\"\r\n                      className = \"btn btn-primary\"\r\n                      id = \"contact-us\"\r\n                      disabled={isSubmitting}\r\n                      label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Sending...</span>) : \"Contact Us\"}\r\n                    />\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n            {/* form container ends */}   \r\n          </div>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ContactUs);","export default __webpack_public_path__ + \"static/media/login-img.c20d8525.png\";","import { Link } from 'react-router-dom'\r\n\r\n\r\nexport function HomeButton({className, props}) {\r\n  return (\r\n    <>\r\n        <Link to=\"/\" className=\"home-icon\">\r\n            <i className={`fas fa-home ${className}`}></i>\r\n        </Link> \r\n    </>\r\n  )\r\n}\r\n","// Axios\r\nimport axios from \"axios\";\r\nimport { LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT, REGISTER_SUCCESS } from \"../actions/types\";\r\nimport { registrationFailLogger, registrationCompletedLogger, emailAlreadyExistLogger, invalidDetailsLogger, somethingWentWrongLogger, netWorkError } from \"../toaster\";\r\n\r\n// API\r\nimport { AUTH_API_URL } from \"./root-endpoints\";\r\n\r\n\r\n// Function handling the user-Company registration\r\nconst register = (companyName, email, password, action) => (dispatch) =>{\r\n\r\n  // Post user for validation and registration in the backend ( this method returns a response )\r\n    return axios.post( AUTH_API_URL + 'signUp', {  \r\n    companyName,\r\n    email,\r\n    password,\r\n  }).then((response)=>{\r\n    console.log(response)\r\n    if (response.data.code === 'ECONNREFUSED'){\r\n      netWorkError()\r\n    }\r\n    // Set Formik form to loading - for the spinnig icon\r\n    action.setSubmitting(true)\r\n\r\n    // Toast success if the since the registration is sucessful\r\n    registrationCompletedLogger()\r\n\r\n    // Throw an action to reducer\r\n    dispatch({ type: REGISTER_SUCCESS })\r\n\r\n    // Login the user\r\n    axios.post(AUTH_API_URL + 'login', { \r\n      email,\r\n      password,\r\n    })\r\n    .then((response)=>{\r\n      \r\n      // Destructure the response to get the email and password (the response 'data' has a 'data' and accessToken in it)\r\n      // const { data }  = response;\r\n      // console.log(response.data)\r\n      // console.log(response.data.data2[0])\r\n\r\n      // Store the response token to the localstorage\r\n      localStorage.setItem('token', JSON.stringify(response.data.data.accessToken));\r\n      localStorage.setItem('currentUser', JSON.stringify(response.data.data.response[0]));\r\n      \r\n      // Store the data(user's) to the store\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: response.data.data.response[0]\r\n      })\r\n    })\r\n    .catch((error)=>{ // CATCH LOGIN FAILURE\r\n      console.log('LOGIN CATCH', error)\r\n      \r\n      // Set Formik form submission state to false (stop the spinning icon)\r\n      action.setSubmitting(false)\r\n\r\n      // Show something went wrong logger\r\n      somethingWentWrongLogger()\r\n      \r\n      // Trigger lofin fail and store error in redux\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: error\r\n      })\r\n    }) \r\n  }) \r\n  .catch((error)=>{ // CATCH FOR REGISTRATION FAILURE\r\n    // If the error from the backend is not handled well\r\n    if(error === undefined || error.response === undefined){\r\n      \r\n      // Set Formik form submission state to false (stop the spinning icon)\r\n      action.setSubmitting(false)\r\n\r\n      // Show alert for something went wrong\r\n      somethingWentWrongLogger()\r\n      \r\n      // Error code 500 means email already exist  \r\n    }else if(error.response.status === 500 || error.response.data.message === 'This email already exists'){\r\n      \r\n      // taost a warning notification\r\n      emailAlreadyExistLogger()\r\n      \r\n      // Set Formik form submission state to false (stop the spinning icon)\r\n      action.setSubmitting(false)\r\n    \r\n    }else{\r\n      // Set Formik form submission to false (stop the spinning icon)\r\n      action.setSubmitting(false)\r\n\r\n      // If there's more error, toast a failure warning\r\n      registrationFailLogger()\r\n    }\r\n      \r\n  })\r\n}\r\n\r\n\r\n// Function handling logging into the application\r\nconst login = ( email, password, action ) => ( dispatch ) =>{\r\n\r\n  // Post user for validation in the backend\r\n  return axios.post(AUTH_API_URL + 'login', {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response)=>{\r\n      console.log(response)\r\n      // console.log(response.data.data.accessToken)\r\n      // don't forget to destructure later\r\n      localStorage.setItem('token', JSON.stringify(response.data.data.accessToken));\r\n      localStorage.setItem('currentUser', JSON.stringify(response.data.data.response[0]));\r\n      \r\n      // Store the data(user's) to the store\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: response.data.data.response[0]\r\n      })\r\n    })\r\n    .catch((error)=>{\r\n        // If user details returns invalid from backend, toast an invalidDetails notification\r\n        invalidDetailsLogger()\r\n\r\n        // Set form submission to false (spinning icon) after 2 seconds for the invalidDetails notification to show\r\n        setTimeout(() => {\r\n            action.setSubmitting(false)\r\n        }, 2000);\r\n      });\r\n};\r\n\r\n\r\nconst logout = () => (dispatch) =>{\r\n  setTimeout(() => {\r\n    // Clear the application localStorage\r\n    \r\n    dispatch({\r\n      type: LOGOUT\r\n    })\r\n    localStorage.clear()\r\n  \r\n  }, 1000);\r\n};\r\n\r\nconst AuthService = {\r\n  register,\r\n  login,\r\n  logout\r\n}\r\n\r\nexport default AuthService;\r\n","// >> Some actions are called in the auth.service helper file\r\n\r\n\r\n// Server functions\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\n// Toasters\r\nimport { logOutSuccessLogger } from \"../../toaster\";\r\n\r\n// Action Types\r\nimport { END_TOUR, LOGOUT } from \"../types\";\r\n\r\n\r\nexport const register = ({ companyName, email, password }, action) =>{\r\n    return AuthService.register(companyName, email, password, action)\r\n}\r\n\r\nexport const login = ({ email, password }, action) => {\r\n    return AuthService.login(email, password, action)\r\n};\r\n\r\nexport const endTour = () => dispatch =>{\r\n    dispatch({type: END_TOUR})\r\n}\r\n\r\nexport const logout = () => {\r\n    logOutSuccessLogger()\r\n    return AuthService.logout()\r\n};\r\n\r\n","// React\r\nimport { React, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport { Link, useHistory, withRouter } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify'; \r\n\r\n// Layouts\r\nimport Button from '../layouts/Button';\r\nimport loginImage from './pages-images/login-img.png';\r\nimport { TextInput } from '../layouts/FormInput';\r\nimport { loginSchema } from '../Validation/Schema';\r\nimport { HomeButton } from '../layouts/HomeButton';\r\n\r\n// Actions\r\nimport { login } from '../../actions/auth/authAction';\r\n\r\n/* Development fake user credentials */\r\n\r\n// this is should be used when the server is down and you need to login to the dashboard\r\n// const data = {\r\n//     firstName: 'Ayodele Samuel',\r\n//     lastName: 'Dummy',\r\n//     staffID: 123,\r\n//     companyID: 1928,\r\n//     roleID: 1\r\n// }\r\n\r\n// const token = 'wkknohsiosdoiwoihh.wohoifhfiohiohfiuhui.iuwiuhiuhfuhiuwhg'\r\n// localStorage.setItem('token', JSON.stringify(token))\r\n// localStorage.setItem('currentUser', JSON.stringify(data) )\r\n//\r\n\r\n\r\nconst Login = () =>{\r\n   \r\n    const currentUserFromLocalStorage = JSON.parse(localStorage.getItem('currentUser'));\r\n    const authenticationState = useSelector(state => state.authenticationState)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    \r\n    // Function to redirect user to the dashboard when there is a user in the local storage\r\n    useEffect(() => {\r\n        document.title = 'Login | Pace'\r\n        if(currentUserFromLocalStorage){\r\n            if(authenticationState.isLoggedIn){\r\n                history.push('./dashboard')\r\n            }\r\n        }\r\n    },[currentUserFromLocalStorage, authenticationState.isLoggedIn, history])\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <main className=\"container d-lg-flex justify-content-center align-items-center mt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"form-con col-lg-5 mb-5\">\r\n                        <ToastContainer />\r\n                        <style>\r\n                            {\r\n                                `\r\n                                    .Toastify__toast--warning{\r\n                                        background: rgb(255,112,150);\r\n                                        color: #FFFFFF;\r\n                                    }\r\n                                `\r\n                            }\r\n                        </style>\r\n                        <HomeButton />\r\n                        <div className=\"form-heading mt-5\">\r\n                            <h3 className=\"mb-3\">Login</h3>\r\n                            <h4 className=\"mb-5\">Welcome back!</h4>\r\n                        </div>\r\n                        {/* message can be placed here */}\r\n                        <div className=\"mt-5\" name=\"form\">\r\n                            <div className=\"form-group mt-b\">\r\n                                <Formik\r\n                                    initialValues={{\r\n                                        email: '',\r\n                                        password: ''\r\n                                    }}\r\n                                    validationSchema = {loginSchema}\r\n                                    onSubmit= {(values, action)=>{\r\n                                        dispatch(login(values, action))\r\n                                        // Reload to referesh the app (solve the fetch error from profile)\r\n                                        // .then((response)=>window.location.reload())\r\n                                    }}\r\n                                >{({touched, errors, isSubmitting, handleSubmit}) => (\r\n                                    <Form onSubmit={handleSubmit}>\r\n                                        <div className=\"email-wrapper pb-3\">\r\n                                            <TextInput \r\n                                                label=\"Enter your workspace address\"\r\n                                                name=\"email\"\r\n                                                type=\"email\"\r\n                                                className={`form-control p-2 ${\r\n                                                    touched.email && errors.email ? \"is-invalid\" : \"\"\r\n                                                }`}\r\n                                                id=\"email\"\r\n                                                placeholder=\"example@company.com\"\r\n                                            />\r\n                                            <ErrorMessage\r\n                                                component=\"div\"\r\n                                                name=\"email\"\r\n                                                className=\"invalid-feedback p-0\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"password-wrapper\">\r\n                                            <TextInput \r\n                                                name=\"password\"\r\n                                                type=\"password\"\r\n                                                label=\"Password\"\r\n                                                labelClassName=\"mt-3\"\r\n                                                className={`form-control p-2 ${\r\n                                                    touched.password && errors.password ? \"is-invalid\" : \"\"\r\n                                                }`}\r\n                                                id=\"passwords\"\r\n                                                placeholder=\"Password\"\r\n                                                autoComplete='on'\r\n                                            />\r\n                                            <ErrorMessage\r\n                                                component=\"div\"\r\n                                                name=\"password\"\r\n                                                className=\"invalid-feedback\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"mt-3\">\r\n                                            <Button \r\n                                                type=\"submit\"\r\n                                                className=\"btn btn-primary\"\r\n                                                disabled={isSubmitting}\r\n                                                label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Loading</span>) : \"Login\"}\r\n                                                />\r\n                                            <p>Create your workspace register <Link to=\"/signup\">Here</Link></p>\r\n                                            <span><Link to=\"/forgot\">Forgot Passwords</Link></span>\r\n                                        </div>\r\n                                    </Form>)}\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Login Image Section */}\r\n                    <div className=\"img-con col-lg-7 d-none d-lg-block\">\r\n                        <div className=\"login-intro-img mt-3\">\r\n                            <img src={loginImage} alt=\"office timing\" className=\"img-fluid\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Login);","// react \r\nimport { React, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\n\r\n\r\n// layouts\r\nimport Button from '../layouts/Button';\r\nimport loginImage from './pages-images/login-img.png';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport { signUpSchema } from '../Validation/Schema'\r\nimport { TextInput, CheckbBox } from '../layouts/FormInput';\r\nimport { HomeButton } from '../layouts/HomeButton'\r\n\r\n\r\n// Authentication\r\nimport { register } from '../../actions/auth/authAction';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n\r\nconst Signup = () =>{\r\n    \r\n    useEffect(() => {\r\n        document.title = \"Signup | Pace \"\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { isLoggedIn } = useSelector(state => state.authenticationState)\r\n\r\n    if(isLoggedIn){\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <ToastContainer />\r\n            <main className=\"container d-flex justify-content-center align-items-center mt-3 mt-md-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"form-con col-lg-5 mb-5\">\r\n                        <style>\r\n                            {\r\n                                `\r\n                                    .Toastify__toast--warning{\r\n                                        background: rgb(255,112,150);\r\n                                        color: #FFFFFF;\r\n                                    }\r\n                                `\r\n                            }\r\n                        </style>\r\n                        \r\n                        <HomeButton />\r\n                        <div className=\"form-heading mt-2\">\r\n                        <h3 className=\"mb-3\">Signup</h3>\r\n                        <h4 className=\"mb-4\">Track every second!</h4>\r\n                        </div>\r\n                        <Formik \r\n                        \r\n                            initialValues={{\r\n                                companyName : '',\r\n                                email : '',\r\n                                password: '',\r\n                                confirmPassword: '',\r\n                                termsOfService: false\r\n                            }}\r\n                            validationSchema = {signUpSchema}\r\n                            onSubmit={(values, action)=>{\r\n                                dispatch(register(values, action))\r\n                            }}\r\n                        >\r\n                            {\r\n                                ({ values, errors, touched, isSubmitting })=>(\r\n                                    <Form>\r\n                                        <div className=\"form-group signupForm\">\r\n                                            <div className=\"companyName-wrapper\">\r\n                                                {/* <label className=\"mt-3\">Workspace Name \"\"\"validate workspace name here onChange\"\"\"</label> */}\r\n                                                <TextInput \r\n                                                    name=\"companyName\"\r\n                                                    id=\"companyName\"\r\n                                                    type=\"text\"\r\n                                                    label=\"Workspace Name\"\r\n                                                    labelClassName=\"mt-md-3\"\r\n                                                    placeholder=\"Bascom Limited\"\r\n                                                    className={`form-control lead p-2 ${\r\n                                                        touched.companyName && errors.companyName ? \"is-invalid\" : \"\"\r\n                                                    }`}                                                        \r\n                                                    title = {touched.companyName && errors.companyName ? \"Tooltip Text\" : \"Tooltip Text\"}\r\n                                                    data-placement = \"bottom\"\r\n                                                />\r\n                                                <ErrorMessage\r\n                                                    component=\"span\"\r\n                                                    name=\"companyName\"\r\n                                                    className=\"invalid-feedback p-0\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"email-wrapper\">\r\n                                                <TextInput \r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    type=\"email\"\r\n                                                    label=\"Email\"\r\n                                                    labelClassName=\"mt-3\"\r\n                                                    className={`form-control lead p-2 \r\n                                                    ${\r\n                                                        touched.email && errors.email ? \"is-invalid\" : \"\"\r\n                                                    }`}\r\n                                                    placeholder=\"Email\" \r\n                                                />\r\n                                                <ErrorMessage\r\n                                                    component=\"div\"\r\n                                                    name=\"email\"\r\n                                                    className=\"invalid-feedback p-0\"\r\n                                                />\r\n                                            </div>\r\n                                        <div className=\"d-md-flex passwords\">\r\n                                            <style>\r\n                                                {\r\n                                                    `\r\n                                                        @media(max-width:800px){\r\n                                                            .passwords .password-wrapper,\r\n                                                            .passwords .confirmPassword-wrapper{\r\n                                                                width: 100% !important;\r\n                                                            }\r\n                                                    `\r\n                                                }\r\n                                            </style>\r\n                                            <div className=\"form-group password-wrapper mr-2\" style={{ width: '50%' }}>\r\n                                                <TextInput \r\n                                                    name=\"password\"\r\n                                                    id=\"password\"\r\n                                                    type=\"password\"\r\n                                                    label=\"Password\"\r\n                                                    labelClassName=\"mt-3\"\r\n                                                    className={`form-control lead p-2 col-12\r\n                                                    ${ \r\n                                                        touched.password && errors.password ? \"is-invalid\" : \"\"\r\n                                                     }\r\n                                                    `}\r\n                                                    placeholder=\"Password\"\r\n                                                    autoComplete='on'\r\n                                                />\r\n                                                <ErrorMessage\r\n                                                    component=\"div\"\r\n                                                    name=\"password\"\r\n                                                    className=\"invalid-feedback p-0\"\r\n                                                />\r\n                                            </div>\r\n                                            \r\n                                            {/* confirm password */}\r\n                                            <div className=\"form-group confirmPassword-wrapper\" style={{ width: '50%' }} >\r\n                                                <TextInput \r\n                                                    name=\"confirmPassword\"\r\n                                                    id=\"confirmPassword\"\r\n                                                    type=\"password\"\r\n                                                    label=\"Confirm Password\"\r\n                                                    labelClassName=\"mt-md-3\"\r\n                                                    className={`form-control lead p-2 ${\r\n                                                        touched.confirmPassword && errors.confirmPassword ? \"is-invalid\" : \"\"\r\n                                                    }`}\r\n                                                    placeholder=\"Confirm Password\" \r\n                                                    autoComplete='on'\r\n                                                />\r\n                                                <ErrorMessage\r\n                                                    component=\"div\"\r\n                                                    name=\"confirmPassword\"\r\n                                                    className=\"invalid-feedback p-0\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-check\">\r\n                                            <CheckbBox \r\n                                                name=\"termsOfService\"\r\n                                                id=\"termsOfService\"\r\n                                                title=\"Accept Terms and condition\"\r\n                                                titleclassname={values.termsOfService ? \"text-blue\" : \"pace-accent-color\"}\r\n                                                className={`form-check-input ${touched.termsOfService && errors.termsOfService ? \"is-invalid\" : \"\"}`}\r\n                                            />\r\n                                                <ErrorMessage\r\n                                                    name=\"termsOfService\"\r\n                                                    component=\"div\"\r\n                                                    className=\"invalid-feedback p-0\"\r\n                                            />\r\n                                        </div>\r\n                                            <Button \r\n                                                type=\"submit\"\r\n                                                className=\"btn btn-primary mt-3\"\r\n                                                id=\"signUp\"\r\n                                                disabled={!values.termsOfService}\r\n                                                label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Please wait...</span>) : \"Signup\"}\r\n\r\n                                            />\r\n                                            <p>Already have an account? <Link to=\"./login\">Login</Link></p>\r\n                                        </div>\r\n                                    </Form>\r\n                                )\r\n                            }\r\n                        </Formik>\r\n                    </div>\r\n                    <div className=\"img-con col-lg-7\">\r\n                        {/* <img src={images[index]} alt=\"office timing\" className=\"img-fluid\" /> */}\r\n                        <div className=\"login-intro-img mt-5 ml-5 d-none d-md-block\">\r\n                        <img src={loginImage} alt=\"office timing\" className=\"img-fluid\" />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n// Signup.propTypes = {\r\n//     companyName : PropTypes.string.isRequired(),\r\n//     email : PropTypes.string.isRequired(),\r\n//     password : PropTypes.string.isRequired(),\r\n//     confirmPassword : PropTypes.string.isRequired(),\r\n// }\r\n\r\nexport default Signup;","export default __webpack_public_path__ + \"static/media/forgotpassword.8e319c4c.svg\";","export default __webpack_public_path__ + \"static/media/mailsent.4a704ec7.svg\";","export default __webpack_public_path__ + \"static/media/mailAnimation.e97cfb52.gif\";","import { React, Fragment, useEffect } from 'react';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport {TextInput} from '../layouts/FormInput';\r\nimport Button from '../layouts/Button';\r\nimport { resetPasswordSchema } from '../Validation/Schema';\r\nimport { HomeButton } from '../layouts/HomeButton'\r\n\r\nconst ResetPassword = () =>{\r\n\r\n    useEffect(() => {\r\n        \r\n        return () => {\r\n            document.title = \"Reset Password\"\r\n        }\r\n    }, [])\r\n    return(\r\n        <>\r\n            <main className=\"container mt-5\">\r\n                <div className=\"row d-flex justify-content-center align-items-center\">\r\n                    <div className=\"form-con col-lg-5 mb-5\">\r\n                        <HomeButton />\r\n                        <div className=\"form-heading mt-5\">\r\n                        <h4 className=\"mb-5\">Reset Password</h4>\r\n                        </div>\r\n                        <div className=\"mt-5\" name=\"form\">\r\n                            <p id=\"errorMessage\" />\r\n                            <div className=\"form-group\">\r\n                                <Formik\r\n                                    initialValues={{\r\n                                        password: '',\r\n                                        confirmPassword: ''\r\n                                    }}\r\n                                    validationSchema = {resetPasswordSchema}\r\n                                >{({values, touched, errors, isSubmitting, handleSubmit, handleChange}) => (\r\n                                    <Form onSubmit={handleSubmit}>\r\n                                        <div className=\"password-wrapper pb-3\">\r\n                                            <TextInput \r\n                                                label=\"Enter New Password\"\r\n                                                name=\"password\"\r\n                                                type=\"password\"\r\n                                                className={`form-control p-2 ${\r\n                                                    touched.password && errors.password ? \"is-invalid\" : \"\"\r\n                                                }`}\r\n                                                id=\"password\"\r\n                                                placeholder=\"Create strong password\"\r\n                                            />\r\n                                            <ErrorMessage\r\n                                                component=\"div\"\r\n                                                name=\"password\"\r\n                                                className=\"invalid-feedback p-0\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"confirm-password-wrapper\">\r\n                                            <TextInput \r\n                                                name=\"confirmPassword\"\r\n                                                type=\"password\"\r\n                                                label=\"Confirm password\"\r\n                                                labelClassName=\"mt-3\"\r\n                                                className={`form-control p-2 ${\r\n                                                    touched.confirmPassword && errors.confirmPassword ? \"is-invalid\" : \"\"\r\n                                                }`}\r\n                                                id=\"passwords\"\r\n                                                placeholder=\"Password\"\r\n                                            />\r\n                                            <ErrorMessage\r\n                                                component=\"div\"\r\n                                                name=\"confirmPassword\"\r\n                                                className=\"invalid-feedback\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"mt-3\">\r\n                                        {/* <Link to=\"/dashboard\"> */}\r\n\r\n                                            <Button \r\n                                                type=\"submit\"\r\n                                                className=\"btn btn-primary\"\r\n                                                id=\"loginBtn\"\r\n                                                disabled={isSubmitting}\r\n                                                label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Resetting...</span>) : \"Login\"}\r\n                                                />\r\n                                        {/* </Link> */}\r\n                                        </div>\r\n                                    </Form>\r\n                                    \r\n                                )}\r\n                            </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ResetPassword;","export default __webpack_public_path__ + \"static/media/notify.adfbef5b.wav\";","// This file contains Authorization token and reusable properties of the currentUsers \r\n\r\n// Header for authentication\r\nlet accessToken = JSON.parse(localStorage.getItem('token'));\r\n\r\n// let accessToken = localStorage.getItem('token')\r\nlet getCurrentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n\r\n// if(getCurrentUser === null){\r\n//     getCurrentUser = null\r\n// }\r\n\r\n// CurrentUser in the localstorage\r\nconst currentUserFromLocalStorage = getCurrentUser;\r\n\r\n// Current user companyID\r\nconst currentUserCompanyID = getCurrentUser === null ? null : currentUserFromLocalStorage.companyID;\r\n\r\n// Current user staffID \r\nconst currentUserStaffID = getCurrentUser === null ? null : currentUserFromLocalStorage.staffID;\r\nconst currentUserRoleID = getCurrentUser === null ? null : currentUserFromLocalStorage.roleID;\r\n\r\n// Authorization token\r\nconst authHeader = {\r\n  'Content-Type': 'application/json',\r\n  'Accept': 'application/json',\r\n  'Access-Control-Allow-Origin': '*',\r\n  'mode': 'no-cors',\r\n  'Authorization': `Basic ${accessToken}`\r\n}\r\n\r\n\r\n\r\n\r\nexport {\r\n  authHeader,\r\n  getCurrentUser,\r\n  accessToken,\r\n  currentUserFromLocalStorage,\r\n  currentUserCompanyID,\r\n  currentUserStaffID,\r\n  currentUserRoleID\r\n}","import axios from 'axios';\r\nimport { authHeader, currentUserStaffID } from '../auth-header';\r\nimport { TIMER_INITIALIZER_API, START_TIMER_API, STOP_TIMER_API, PERSONAL_TIME_SHEET_API } from '../root-endpoints';\r\n\r\nconst initializeTimerRecord = () =>{\r\n    console.log('timer service');\r\n    return axios.post(TIMER_INITIALIZER_API, { headers: authHeader })\r\n}\r\n\r\nconst startTimer = () =>{\r\n    // return axios.put(START_TIMER_API + currentUserStaffID, { headers: authHeader });\r\n    return axios.put(START_TIMER_API + currentUserStaffID, { headers: authHeader });\r\n}\r\n\r\nconst stopTimer = () =>{\r\n    return axios.put(STOP_TIMER_API + currentUserStaffID, { headers: authHeader });\r\n}\r\n\r\nconst getPersonalTimeSheet = () =>{\r\n    return axios.get(PERSONAL_TIME_SHEET_API + currentUserStaffID, { headers: authHeader })\r\n}\r\n\r\nconst TimerService = {\r\n    startTimer,\r\n    stopTimer,\r\n    getPersonalTimeSheet,\r\n    initializeTimerRecord\r\n}\r\n\r\n\r\nexport default TimerService;","// React \r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Timer from 'react-compound-timer';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport useSound from 'use-sound';\r\n\r\n// Actions\r\nimport { TIMER_OFF, SET_WORKED_MILLISECOND } from '../../../../actions/types';\r\nimport notify from './notify.wav'\r\nimport { initializeNewDayTimer, startTimer, stopTimer } from \"../../../../actions/timer/timerAction\";\r\n\r\nconst timerReminder = withReactContent(Swal)\r\n\r\nconst TimerContainer=()=>{\r\n    const { timerIsOff } = useSelector(state => state.timerStatus)\r\n    const [ isTimerOff, setisTimerOff ] = useState(timerIsOff)\r\n    const [ shouldRemindUser ] = useState(isTimerOff)\r\n    const [ isTimerSessionExist, setTimerSessionExist ] = useState(null)\r\n    const dispatch = useDispatch()\r\n    const [ playSound ] = useSound(\r\n        notify, { volume: 0.25 }\r\n    )\r\n\r\n\r\n    useEffect(() => {\r\n        const reminder = () => {\r\n            if(shouldRemindUser){\r\n                timerReminder.fire({\r\n                    showCloseButton: true,\r\n                    showCancelButton: true,\r\n                    cancelButtonColor: '#FF6584',\r\n                    confirmButtonText: 'Yes, thanks',\r\n                    cancelButtonText: 'Snooze for 5 minutes',\r\n                    icon: 'question',\r\n                    title: 'Reminder!',\r\n                    text: 'Did you forget to start your time?.',\r\n                    footer: '<a href=\"\">Why am I seeing this?</a>',\r\n                })\r\n                playSound()\r\n            }\r\n        }\r\n        const reminderTracker = setTimeout(reminder, 300000);\r\n        \r\n        // setTimeout(() => {\r\n        //     reminder()\r\n        // }, 3000000)\r\n\r\n        return(()=>{\r\n            clearTimeout(reminderTracker)\r\n        })\r\n\r\n    }, [shouldRemindUser, playSound])\r\n    \r\n    \r\n\r\n    \r\n    const onStop = (stopMillsecond, resume, reset)=>{\r\n        dispatch(stopTimer())\r\n        const convertedStopHour = Math.floor(stopMillsecond / 3600000)\r\n        timerReminder.fire({\r\n            showCloseButton: true,\r\n            showCancelButton: true,\r\n            cancelButtonColor: '#FF6584',\r\n            confirmButtonText: 'Yes, thanks',\r\n            cancelButtonText: 'Resume',\r\n            icon: 'warning',\r\n            title: 'Stop Timer?',\r\n            text: `you worked ${(convertedStopHour <= 1 ? (`${convertedStopHour} hour`) : (`${convertedStopHour} hours`))} are you through?.`,\r\n            footer: '<a href=\"\">Why am I seeing this?</a>'\r\n        }).then((inputValue)=>{\r\n            if(inputValue.isConfirmed === true){\r\n                setisTimerOff(true)\r\n                dispatch({type: TIMER_OFF, hour: convertedStopHour})\r\n                reset()\r\n            }else{\r\n                console.log('resumeeeeeeee');\r\n                resume()\r\n            }\r\n        })\r\n    }\r\n    const onStart = (start, getTime) =>{\r\n        start()\r\n        dispatch(startTimer())\r\n        setInterval(() => {\r\n            const currentMilliSecond = getTime();\r\n            localStorage.setItem('currentMilliSecond', JSON.stringify(currentMilliSecond))\r\n            setisTimerOff(false)\r\n            dispatch({ type: SET_WORKED_MILLISECOND, payload: currentMilliSecond})\r\n            \r\n        }, 1000);\r\n    }\r\n\r\n    // useEffect(() => {\r\n        // const isTimerSessionExist = localStorage.getItem('currentMilliSecond')\r\n        // if(isTimerSessionExist){\r\n        //     console.log('session', Number(isTimerSessionExist) )\r\n        //     dispatch({ type: TIMER_ON })\r\n        //     setInterval(() => {\r\n        //         const currentMilliSecond = Number(isTimerSessionExist);\r\n        //         localStorage.setItem('currentMilliSecond', JSON.stringify(currentMilliSecond))\r\n        //         setisTimerOff(false)\r\n        //         setTimerSessionExist(isTimerSessionExist)\r\n        //         dispatch({ type: SET_WORKED_MILLISECOND, payload: currentMilliSecond})\r\n                \r\n        //     }, 1000);\r\n        // }\r\n    // })\r\n\r\n    \r\n    return(\r\n        <>\r\n            <li className=\"nav-item\" h='4' data-tut='reactour__timer'>\r\n                <div id=\"searchForm\" className=\"ml-auto d-non d-lg-block\">\r\n                    <div className=\"position-relative mb-0\">\r\n                        <div id=\"right-i\">\r\n                            {/* <button onClick={()=>dispatch(initializeNewDayTimer())}>initialize timer</button> */}\r\n                            <Timer\r\n                                initialTime={ isTimerSessionExist ? Number(isTimerSessionExist) : 0 }\r\n                                startImmediately={ isTimerSessionExist ? true : false}\r\n                                >\r\n                                {({ resume, start, stop, getTime, reset }) => (\r\n                                    <>\r\n                                        <div id=\"right-i\">\r\n                                            {/* {console.log(Hours())} */}\r\n                                            {\r\n\r\n                                                isTimerOff ?\r\n                                                \r\n                                                (\r\n                                                    \r\n                                                    <button onClick={()=>{\r\n\r\n                                                        \r\n                                                        onStart(start, getTime)\r\n                                                    }\r\n                                                        \r\n                                                    }\r\n                                                    id=\"start-time\">\r\n                                                    \r\n                                                        Start Time\r\n                                                    \r\n                                                    </button>\r\n\r\n                                                )\r\n                                                :\r\n                                                (\r\n\r\n                                                    <button \r\n                                                        onClick={()=>{\r\n                                                            const stopTime = getTime();\r\n                                                            onStop(stopTime, resume, reset)\r\n                                                            stop()\r\n                                                            // reset()\r\n                                                        }} \r\n                                                        id=\"start-time\"\r\n                                                        className=\"bg-red\"\r\n                                                    >\r\n\r\n                                                        Stop Time\r\n                                                    \r\n                                                    </button>\r\n\r\n                                                )\r\n                                            \r\n                                            }\r\n                                            <div id=\"time\">\r\n                                                <span id=\"hours\">\r\n                                                    <Timer.Hours formatValue={((hour)=> `${(hour < 10 ? `0${hour}` : `${hour}`)}`)} />\r\n                                                </span> \r\n                                                : \r\n                                                <span id=\"mins\">\r\n                                                    <Timer.Minutes formatValue={((minute)=> `${(minute < 10 ? `0${minute}` : `${minute}`)}`)}/>\r\n                                                </span> \r\n                                                : \r\n                                                <span id=\"seconds\">\r\n                                                    <Timer.Seconds formatValue={((second)=> `${(second < 10 ? `0${second}` : `${second}`)}`)}/>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            </Timer>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default TimerContainer;","import TimerService from \"../../services/timer/timer.Service\";\r\n\r\nconst initializeNewDayTimer = () => (dispatch) =>{\r\n    console.log('from initial act');\r\n    return TimerService.initializeTimerRecord()\r\n    .then((response) => {\r\n        console.log('from initial action', response);\r\n    })\r\n    .catch((err) =>{\r\n        console.log('timer initial err ', err)\r\n    })\r\n}\r\n\r\n\r\nconst startTimer = () => (dispatch) =>{\r\n    return TimerService.startTimer()\r\n    .then((response) => {\r\n        console.log('timer action', response);\r\n    })\r\n    .catch((err) =>{\r\n        console.log('timer err ', err)\r\n    })\r\n}\r\n\r\n\r\nconst stopTimer = () => (dispatch) =>{\r\n    return TimerService.stopTimer()\r\n    .then((response) =>{\r\n        console.log('stop timer action', response)\r\n    })\r\n    .catch((err)=>{\r\n        console.log('stopTimer error in action', err)\r\n    })\r\n}\r\n\r\n\r\nconst fetchPersonalTimeSheet = () => (dispatch) =>{\r\n    return TimerService.getPersonalTimeSheet()\r\n    .then((response) =>{\r\n        console.log('personal time sheet action', response)\r\n    })\r\n    .catch((err)=>{\r\n        console.log('personal time sheet error in action', err)\r\n    })\r\n\r\n}\r\n\r\nexport {\r\n    startTimer,\r\n    stopTimer,\r\n    fetchPersonalTimeSheet,\r\n    initializeNewDayTimer,\r\n}","import axios from \"axios\";\r\nimport { SYNC_CURRENT_USER } from \"../actions/types\";\r\nimport { authHeader,currentUserFromLocalStorage, currentUserStaffID } from \"./auth-header\";\r\nimport { UPDATE_USER_PASSWORD } from \"./root-endpoints\";\r\n\r\n\r\n// This function keeps the user logged in by fetching the current user details and dispatching it into the store\r\nconst fetchUserProfile = (staffID) => dispatch =>{\r\n  // console.log('SERVICE', staffID);\r\n\r\n  dispatch({\r\n    type: SYNC_CURRENT_USER,\r\n    payload: currentUserFromLocalStorage\r\n  })\r\n  return axios.get(`https://pacetimesheet.herokuapp.com/api/users/companyName/userProfile/${staffID === '' ? currentUserStaffID : staffID}`, { headers: authHeader })\r\n  .then((response)=>{\r\n    // console.log(response)\r\n    // Extract updated user profile from the server response\r\n    const currentUserProfile = response.data.data[0];\r\n\r\n    // Update the userProfile from the server with the local storage\r\n    localStorage.setItem('currentUser', JSON.stringify(currentUserProfile));\r\n\r\n    dispatch({\r\n      type: SYNC_CURRENT_USER,\r\n      payload: currentUserProfile\r\n    })\r\n  })\r\n  .catch((error)=>{\r\n    console.log(error)\r\n    //\r\n    // sessionExpired()\r\n    // logout()\r\n  })\r\n\r\n}\r\n\r\nconst updateUserProfile = (newProfile, staffID) =>{\r\n  return axios.put(`https://pacetimesheet.herokuapp.com/api/users/companyName/userProfile/updateProfile/${staffID}`, newProfile, { headers: authHeader })\r\n\r\n}\r\n\r\nconst updateUserPassword = ({password}) =>{\r\n  const data = {\r\n    password\r\n  }\r\n  return axios.put(UPDATE_USER_PASSWORD + currentUserStaffID, data, { headers: authHeader })\r\n}\r\n\r\n// Requires to be stored in an object before using\r\nconst UserService = {\r\n  fetchUserProfile,\r\n  updateUserProfile,\r\n  updateUserPassword\r\n\r\n}\r\n\r\n\r\nexport default UserService;","import axios from \"axios\";\r\nimport { authHeader, currentUserStaffID } from \"../../services/auth-header\";\r\nimport { options } from \"../../services/root-endpoints\";\r\nimport UserService from \"../../services/user.service\";\r\nimport { profileUpdateCompletedLogger, profileUpdateFailLogger } from '../../toaster';\r\nimport { UPDATE_USER_PROFILE } from \"../types\";\r\n\r\n\r\n//  This action get the current user details from the server and stores it inside the store for update\r\nconst syncCurrentUser = (staffID) =>{\r\n    console.log('ACTION', staffID === '');\r\n    return UserService.fetchUserProfile(staffID)\r\n}\r\n\r\n// Function to update user personal record\r\nconst updateUserProfile = ( newProfile, staffID, action ) => ((dispatch) =>{\r\n    return UserService.updateUserProfile(newProfile, staffID)\r\n    .then((response)=>{\r\n        // Set formik submittion state to false (the loader)\r\n        console.log(response.data.data);\r\n        action.setSubmitting(false)\r\n        UserService.fetchUserProfile(currentUserStaffID)\r\n        dispatch({\r\n            type: UPDATE_USER_PROFILE,\r\n            payload: response.data.data\r\n\r\n        })\r\n        profileUpdateCompletedLogger()\r\n        return response \r\n    }).catch((error)=>{\r\n        action.setSubmitting(false)\r\n        profileUpdateFailLogger()\r\n        return error\r\n    })\r\n})\r\n\r\n// Function that update the user password\r\nconst updatePassword = (newPassword, action) => (dispatch) =>{\r\n    return UserService.updateUserPassword(newPassword)\r\n    .then((response)=>{\r\n        action.setSubmitting(false)\r\n        action.resetForm()\r\n        console.log(response)\r\n    })\r\n    .catch((error)=>{\r\n        action.resetForm()\r\n        action.setSubmitting(false)\r\n        console.log(error)\r\n    })\r\n}\r\n\r\nexport {\r\n    syncCurrentUser,\r\n    updateUserProfile,\r\n    updatePassword,\r\n}","\r\n// React\r\nimport { React, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n// Component\r\nimport TimerContainer from '../dashboard/timer/Timer';\r\n\r\n// End session\r\nimport { logout } from '../../../actions/auth/authAction'\r\n\r\n// Toast\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { accessToken, currentUserFromLocalStorage, currentUserStaffID } from '../../../services/auth-header';\r\nimport { syncCurrentUser } from '../../../actions/user/userAction';\r\n\r\n\r\nconst Navbar = () =>{\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { currentUser, isLoggedIn } = useSelector(state => state.authenticationState)\r\n    const [fullName, setFullName] = useState('') // the fullName is empty before the data are fetch, to prevent seeing undefined\r\n    const [staffID, setStaffID] = useState('')\r\n    const [roleID, setRoleID] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(currentUser){\r\n            const { firstName, lastName, staffID, roleID } = currentUser || '';\r\n            setFullName(` ${ firstName === undefined ? '' : firstName } ${ lastName === undefined ? '' : lastName} `)\r\n            setStaffID(staffID)\r\n            setRoleID(roleID)\r\n            \r\n        }\r\n    },[currentUser])\r\n    \r\n    useEffect(() => {\r\n        dispatch(syncCurrentUser(staffID))    \r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        // console.log('here')\r\n        // // Check if there is a user in the local storage, don't use redux state , it get cleared before synchronizing\r\n        // if(currentUserFromLocalStorage.length > 0){\r\n        //     console.log('here2')\r\n        //     // sync the current user with the server, redux, and localstorage\r\n        //     console.log('local', currentUserFromLocalStorage)\r\n        // }else{\r\n        //     // alert('me')\r\n        // }\r\n    }, [dispatch])\r\n        \r\n\r\n    return(\r\n        <>\r\n            <ToastContainer />\r\n            <style>\r\n                {\r\n                    `\r\n                        .Toastify__toast--warning{\r\n                            background: rgb(255,112,150);\r\n                            color: #FFFFFF;\r\n                        }\r\n                    `\r\n                }\r\n            </style>\r\n            <header className=\"header\">\r\n                <nav className=\"navbar navbar-expand-lg px-4 py-2 bg-white shadow\">\r\n                    <i className=\"sidebar-toggler text-gray-500 mr-4 mr-lg-5 lead\">\r\n                        <i className=\"fas fa-align-left\"></i>\r\n                    </i>\r\n                    <Link to={`/dashboard/profile/${staffID}`} className=\"navbar-brand font-weight-bold text-uppercase text-base pace-primary-color dashboard-lead companyDisplay\">\r\n                        { fullName }\r\n                    </Link>\r\n                    <ul className=\"ml-auto d-flex align-items-center list-unstyled mb-0\">\r\n                        <TimerContainer />\r\n                        <li className=\"nav-item dropdown mr-3 ml-4\">\r\n                            <a id=\"notifications\" href=\".\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" className=\"nav-link dropdown-toggle text-gray-400 px-1\">\r\n                                <i className=\"fa fa-bell pace-primary-color\"></i>\r\n                                <span className=\"notification-icon pace-bg-accent\"></span>\r\n                            </a>\r\n                            <div aria-labelledby=\"notifications\" className=\"dropdown-menu\">\r\n                                <a href=\"/\" className=\"dropdown-item\">\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <div className=\"icon icon-sm pace-bg-accent text-white\">\r\n                                            <i className=\"fab fa-twitter\"></i>\r\n                                        </div>\r\n                                        <div className=\"text ml-2\">\r\n                                            <p className=\"mb-0\">Lunch by 2pm</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a href=\"/\" className=\"dropdown-item\">\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <div className=\"icon icon-sm bg-green text-white\">\r\n                                            <i className=\"fas fa-envelope\"></i>\r\n                                        </div>\r\n                                        <div className=\"text ml-2\">\r\n                                            <p className=\"mb-0\">Delivery in 2 days</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a href=\"/\" className=\"dropdown-item\">\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <div className=\"icon icon-sm bg-blue text-white\">\r\n                                            <i className=\"fas fa-upload\"></i>\r\n                                        </div>\r\n                                        <div className=\"text ml-2\">\r\n                                            <p className=\"mb-0\">1 new event</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <a href=\"/\" className=\"dropdown-item\">\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <div className=\"icon icon-sm pace-bg-accent text-white\">\r\n                                            <i className=\"fab fa-twitter\"></i>\r\n                                        </div>\r\n                                        <div className=\"text ml-2\">\r\n                                            <p className=\"mb-0\">2 new tasks</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <a href=\"/\" className=\"dropdown-item text-center\">\r\n                                    <small className=\"font-weight-bold headings-font-family text-uppercase\">\r\n                                        View all notifications\r\n                                    </small>\r\n                                </a>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown ml-auto\" h='7' data-tut='reactour__profileImage'>\r\n                            <a id=\"userInfo\" href=\".\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" className=\"nav-link dropdown-toggle\">\r\n                                {/* <img src={user_Image} alt={user_first_name} style={{maxWidth:\"2.5rem\"}} className=\"img-fluid rounded-circle shadow\" /> */}\r\n                                <img src='https://github.com/unclebay143.png' alt='unclebay' style={{maxWidth:\"2.5rem\"}} className=\"img-fluid rounded-circle shadow\" />\r\n                            </a>\r\n                            <div aria-labelledby=\"userInfo\" className=\"dropdown-menu\">\r\n                                <a href=\"/\" className=\"dropdown-item\">\r\n                                    <strong className=\"d-block text-uppercase headings-font-family companyDisplay\">\r\n                                        { fullName }\r\n                                    </strong>\r\n                                    <small id=\"role_display\">Web Developer</small>\r\n                                </a>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <Link to={`/dashboard/profile/${staffID}`} className=\"dropdown-item\">Profile</Link>\r\n                                {\r\n                                    roleID !== 5 ? '' : (\r\n                                        <a href=\"/\" className=\"dropdown-item\">Settings</a>\r\n                                    )\r\n                                }\r\n                                <div className=\"dropdown-divider\"></div><span className=\"dropdown-item\" style={{cursor: 'pointer'}} onClick={(()=>dispatch(logout()))}>Logout</span>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { logout } from '../../../actions/auth/authAction';\r\nimport { logOutSuccessLogger } from '../../../toaster';\r\n\r\nconst Sidebar = () => {\r\n    const dispatch = useDispatch();\r\n    const [currentUserRoleID, setCurrentUserRoleID] = useState('')\r\n    const [currentUserRoleName, setCurrentUserRoleName] = useState('')\r\n    \r\n    useEffect(() => {\r\n        const getCurrentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        if(getCurrentUser){\r\n            setCurrentUserRoleID(getCurrentUser.roleID)\r\n            switch (getCurrentUser.roleID) {\r\n                case 1:\r\n                    return setCurrentUserRoleName('Super Admin')\r\n                case 3:\r\n                    return setCurrentUserRoleName('Co Admin')\r\n                case 4:\r\n                    return setCurrentUserRoleName('Internal Admin')\r\n                case 5:\r\n                    return setCurrentUserRoleName('Staff')\r\n                default:\r\n                    setCurrentUserRoleName('Welcome')\r\n                    break;\r\n            }\r\n        }\r\n    }, [])\r\n    \r\n    const logOut = () =>{\r\n        \r\n        // logout notification\r\n        logOutSuccessLogger()\r\n\r\n        // process the logout dispatch\r\n        const processLogOut = () =>{\r\n            dispatch(logout());\r\n        }\r\n\r\n        //callback to allow the notification to complete\r\n        const waitForLogger = setTimeout(processLogOut, 2000)\r\n\r\n        // unsubscribe the callback\r\n        return(()=> clearTimeout(waitForLogger))\r\n        // setTimeout(() => {\r\n        //     dispatch(logout());\r\n        // }, 2000);\r\n    }\r\n    return(\r\n        <>\r\n        <style>\r\n            {\r\n                `\r\n                    .Toastify__toast--warning{\r\n                        background: rgb(255,112,150);\r\n                        color: #FFFFFF;\r\n                    }\r\n                `\r\n            }\r\n        </style>\r\n            <div id=\"sidebar\" className=\"sidebar py-3\" h='6' data-tut='reactour__sidebar'>\r\n                    <div className=\"text-gray-400 text-uppercase px-3 px-lg-4 py-4 font-weight-bold small headings-font-family\" id=\"role_display\">{ currentUserRoleName }</div>\r\n                        <ul className=\"sidebar-menu list-unstyled\">\r\n                            <li className=\"sidebar-list-item\"><NavLink exact to=\"/dashboard\" className=\"sidebar-link text-muted\" activeclassname=\"active\"><i className=\"o-home-1 mr-3 text-gray\"></i><span>Dashboard</span></NavLink></li>\r\n                           {\r\n                               currentUserRoleID === 5 ? '' : (\r\n\r\n                                   <li className=\"sidebar-list-item\"><a href=\".\" data-toggle=\"collapse\" data-target=\"#manage-employee\" aria-expanded=\"false\" aria-controls=\"manage-employee\" className=\"sidebar-link text-muted\" ><i className=\"o-user-details-1 mr-3 text-gray\"></i><span>Employee</span></a>\r\n                                        <div id=\"manage-employee\" className=\"collapse\">\r\n                                            <ul className=\"sidebar-menu list-unstyled border-left border-primary border-thick\">\r\n                                                <li className=\"sidebar-list-item\"><NavLink to=\"/dashboard/employ\" className=\"sidebar-link text-muted pl-lg-5\">Add Employee</NavLink></li>\r\n                                                <li className=\"sidebar-list-item\"><NavLink to=\"/dashboard/employee-list\" className=\"sidebar-link text-muted pl-lg-5\">View Employee</NavLink></li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                           }\r\n                            <li className=\"sidebar-list-item\"><NavLink exact to=\"/dashboard/task/all-tasks\" className=\"sidebar-link text-muted\" activeclassname=\"active\"><i className=\"fas fa-tasks mr-3 text-gray\"></i><span>Task</span></NavLink></li>\r\n                            <li className=\"sidebar-list-item\"><NavLink exact to=\"/dashboard/e-schedule\" className=\"sidebar-link text-muted\" activeclassname=\"active\"><i className=\"o-timing-1 mr-3 text-gray\"></i><span>e-schedule</span></NavLink></li>\r\n                            <li className=\"sidebar-list-item\"><NavLink exact to=\"/dashboard/todos\" className=\"sidebar-link text-muted\" activeclassname=\"active\"><i className=\"o-paper-stack-1 mr-3 text-gray\"></i><span>Todo</span></NavLink></li>\r\n                            <li className=\"sidebar-list-item\"><NavLink exact to=\"/dashboard/calendar\" className=\"sidebar-link text-muted\" activeclassname=\"active\"><i className=\"o-table-content-1 mr-3 text-gray\"></i><span>Calendar</span></NavLink></li>\r\n                            <li className=\"sidebar-list-item\"><NavLink exact to=\"/dashboard/timesheet\" className=\"sidebar-link text-muted\" activeclassname=\"active\"><i className=\"o-table-content-1 mr-3 text-gray\"></i><span>Time Sheet</span></NavLink></li>\r\n                           {\r\n                               currentUserRoleID === 5 ? '' : (\r\n                                   <li className=\"sidebar-list-item\"><a href=\".\" data-toggle=\"collapse\" data-target=\"#report\" aria-expanded=\"false\" aria-controls=\"pages\" className=\"sidebar-link text-muted\" activeclassname=\"active\"><i className=\"o-wireframe-1 mr-3 text-gray\"></i><span>Report</span></a>\r\n                                        <div id=\"report\" className=\"collapse\">\r\n                                            <ul className=\"sidebar-menu list-unstyled border-left border-primary border-thick\">\r\n                                                <li className=\"sidebar-list-item\"><NavLink to=\"/dashboard/task-report\" className=\"sidebar-link text-muted pl-lg-5\">Task</NavLink></li>\r\n                                                <li className=\"sidebar-list-item\"><NavLink to=\"/dashboard/timer-report\" className=\"sidebar-link text-muted pl-lg-5\">Timer</NavLink></li>\r\n                                                <li className=\"sidebar-list-item\"><NavLink to=\"/dashboard/billing-report\" className=\"sidebar-link text-muted pl-lg-5\">Billing</NavLink></li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </li>\r\n                               )\r\n                           }\r\n                        </ul>\r\n                    <div className=\"text-gray-400 text-uppercase px-3 px-lg-4 py-4 font-weight-bold small headings-font-family\">EXTRAS</div>\r\n                    <ul className=\"sidebar-menu list-unstyled\">\r\n                        {\r\n                            currentUserRoleID === 5 ? '' : (\r\n                                <>\r\n                                    {/* <li className=\"sidebar-list-item\"><NavLink to=\"/dashboard/company/settings\" className=\"sidebar-link text-muted\" activeclassname=\"active\"><i className=\"o-settings-window-1 mr-3 text-gray\"></i><span>Settings</span></NavLink></li> */}\r\n                                    <li className=\"sidebar-list-item\"><a href=\".\" data-toggle=\"collapse\" data-target=\"#settings\" aria-expanded=\"false\" aria-controls=\"pages\" className=\"sidebar-link text-muted\" activeclassname=\"active\"><i className=\"o-wireframe-1 mr-3 text-gray\"></i><span>settings</span></a>\r\n                                        <div id=\"settings\" className=\"collapse\">\r\n                                            <ul className=\"sidebar-menu list-unstyled border-left border-primary border-thick\">\r\n                                                <li className=\"sidebar-list-item\"><NavLink to=\"/dashboard/company/profile/1\" className=\"sidebar-link text-muted pl-lg-5\">Company Profile</NavLink></li>\r\n                                                <li className=\"sidebar-list-item\"><NavLink to=\"/dashboard/company/settings/departments\" className=\"sidebar-link text-muted pl-lg-5\">Manage Team</NavLink></li>\r\n                                                <li className=\"sidebar-list-item\"><NavLink to=\"/dashboard/company/profile/update/1\" className=\"sidebar-link text-muted pl-lg-5\">Update Profile</NavLink></li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </li>\r\n                                </>\r\n                            )\r\n                        }\r\n                        <li className=\"sidebar-list-item\"><span onClick={logOut} className=\"sidebar-link text-muted cursor\" activeclassname=\"active\"><i className=\"o-exit-1 mr-3 text-gray\"></i><span>Logout</span></span></li>\r\n                    </ul>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","const Footer = () => {\r\n    return(\r\n        <>\r\n            <footer className=\"footer bg-white shadow align-self-end py-3 px-xl-5 w-100\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 text-center text-md-left text-primary\">\r\n                            <p className=\"mb-2 mb-md-0 pace-accent-color\">Pace Timesheet &copy; 2018-2020</p>\r\n                        </div>\r\n                        <div className=\"col-md-6 text-center text-md-right text-gray-400\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer;","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst Card = (props) => {\r\n    const { title, count, url, style, cardColor, icon } = props\r\n    // const cardColor = [\"pace-bg-accent\", \"bg-green\", \"bg-red\", \"bg-blue\"]\r\n    return(\r\n        <>\r\n            <div className={`col-xl-3 col-lg-6 mb-4 mb-xl-0 ${style}`}>\r\n                <div className=\"bg-white shadow pace-roundy p-4 h-100 d-flex align-items-center justify-content-between\">\r\n                    <div className=\"flex-grow-1 d-flex align-items-center dashcard\">\r\n                        <div className={`dot mr-3 ${cardColor}`}></div>\r\n                        <div className=\"text\">\r\n                            <h6 className=\"mb-0\">{title}</h6><span className=\"text-gray\">{count}</span>\r\n                        </div>\r\n                    </div>\r\n                    <Link to={url}>\r\n                        <div className={`icon text-white ${cardColor}`}><i className={`fas ${icon}`}></i></div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Card;","import axios from 'axios';\r\nimport { React, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { authHeader, currentUserCompanyID, currentUserRoleID, currentUserStaffID } from '../../../../services/auth-header';\r\nimport { FETCH_TASKS_BY_STATUS_API_URL } from '../../../../services/root-endpoints';\r\nimport Card from './Card';\r\n\r\nconst Cards = () =>{\r\n    const [pendingTasksCounter, setPendingTasksCounter] = useState(\"0\");\r\n    const [completedTasksCounter, setCompletedTasksCounter] = useState(\"0\");\r\n    const [overDureTasksCounter, setOverDueTasksCounter] = useState(\"0\");\r\n    const state = useSelector(state => state.pending)\r\n    useEffect(() => {\r\n\r\n        if(currentUserRoleID !== 5){\r\n            // Function that fetch the over pending tasks and set the length\r\n            const fetchPendingTasks = async()=>{\r\n                const response = await axios.get(FETCH_TASKS_BY_STATUS_API_URL + '1/' + currentUserCompanyID, { headers: authHeader }) \r\n                setPendingTasksCounter(response.data.data.length)\r\n            }\r\n    \r\n            // Function that fetch the over completed tasks and set the length\r\n            const fetchCompletedTasks = async()=>{\r\n                const response = await axios.get(FETCH_TASKS_BY_STATUS_API_URL + '3/' + currentUserCompanyID, { headers: authHeader }) \r\n                setCompletedTasksCounter(response.data.data.length)\r\n            }\r\n    \r\n            // Function that fetch the over due tasks and set the length\r\n            const fetchOverDueTasks = async()=>{\r\n                const response = await axios.get(FETCH_TASKS_BY_STATUS_API_URL + '4/' + currentUserCompanyID, { headers: authHeader }) \r\n                setOverDueTasksCounter(response.data.data.length)\r\n            }\r\n            fetchPendingTasks()\r\n            fetchCompletedTasks()\r\n            fetchOverDueTasks()\r\n        }\r\n\r\n    }, [])\r\n    return(\r\n        <>\r\n            <section className=\"py-5\" h='2' data-tut='reactour__taskCards'>\r\n                <div className=\"row\">\r\n                    \r\n                    <Card\r\n                        \r\n                        title=\"Completed Tasks\"\r\n                        type=\"\"\r\n                        count={completedTasksCounter}\r\n                        icon=\"fa-server\"\r\n                        cardColor=\"pace-bg-accent\"\r\n                        style= {{ }}\r\n                        url=\"/dashboard/task/accepted-tasks\"\r\n                            \r\n                    />\r\n                    <Card\r\n                        \r\n                        title=\"Pending Tasks\"\r\n                        type=\"\"\r\n                        count={pendingTasksCounter}\r\n                        icon=\"fa-server\"\r\n                        cardColor=\"bg-green\"\r\n                        style= {{ }}\r\n                        url=\"/dashboard/task/pending-tasks\"\r\n                    \r\n                    />\r\n                    <Card\r\n                        \r\n                        title=\"Overdue Tasks\"\r\n                        type=\"\"\r\n                        count={overDureTasksCounter}\r\n                        icon=\"fa-server\"\r\n                        cardColor=\"bg-red\"\r\n                        style= {{ }}\r\n                        url=\"/dashboard/task-report\"\r\n                    \r\n                    />\r\n                    <Card\r\n                        \r\n                        title=\"Task Manager\"\r\n                        type=\"\"\r\n                        count=\"Click here\"\r\n                        icon=\"fa-server\"\r\n                        cardColor=\"pace-bg-primary\"\r\n                        style= {{ }}\r\n                        url=\"/dashboard/task-report\"\r\n                            \r\n                    />\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cards;","// React\r\nimport { React, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nconst CardTemplate = ({title, dueDate}) =>{\r\n\r\n    return(\r\n        <div className=\"bg-white shadow pace-roundy px-4 py-3 d-flex align-items-center justify-content-between mb-4\">\r\n            <div className=\"flex-grow-1 d-flex align-items-center\">\r\n                <div className=\"pace-bg-accent dot mr-3\"></div>\r\n                <div className=\"text\">\r\n                    <h6 className=\"mb-0\">{ title }</h6><span className=\"text-gray\">{ dueDate }</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TodoCard = () =>{\r\n  \r\n    const { todos } = useSelector((state)=>state.todos);\r\n    const { title, dueDate } = todos[0];\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    \r\n    // Convert the DueDate to Day, Month date, year format\r\n    const formatedDueDate = new Date(dueDate).toLocaleDateString(\"en-US\", options);\r\n        \r\n    return(\r\n        <CardTemplate title={title} dueDate={formatedDueDate} />\r\n    )\r\n};\r\n\r\n\r\nexport default TodoCard;","import axios from 'axios';\r\nimport { EDIT_CALENDAR_EVENT } from '../../../actions/types';\r\nimport { authHeader, currentUserCompanyID, currentUserStaffID } from '../../auth-header';\r\nimport { FETCH_CALENDAR_EVENT_API, NEW_CALENDAR_EVENT_API, DELETE_CALENDAR_EVENT_API, EDIT_CALENDAR_EVENT_API } from '../../root-endpoints';\r\n\r\n\r\n\r\nconst fetchCalendarEvent = async() =>{\r\n    return await axios.get(FETCH_CALENDAR_EVENT_API + currentUserCompanyID, { headers: authHeader })\r\n}\r\n\r\n\r\nconst postNewCalendarEvent = (newEvent) =>{\r\n    return axios.post(NEW_CALENDAR_EVENT_API, newEvent, { headers: authHeader })\r\n}\r\n\r\nconst deleteCalendarEvent = (eventID) =>{\r\n    return axios.delete(DELETE_CALENDAR_EVENT_API + currentUserStaffID + \"/\" + eventID, { headers: authHeader } )\r\n}\r\n\r\nconst updateCalendarEvent = (updatedEvent) =>{\r\n    return axios.put(EDIT_CALENDAR_EVENT_API + currentUserStaffID + \"/\" + updatedEvent.eventID, updatedEvent, { headers: authHeader } )\r\n}\r\n\r\n\r\nconst CalendarService = {\r\n    fetchCalendarEvent,\r\n    postNewCalendarEvent,\r\n    deleteCalendarEvent,\r\n    updateCalendarEvent,\r\n}\r\n\r\nexport default CalendarService;","import CalendarService from \"../../../services/company/calendar/calendarService\";\r\nimport { FETCH_CALENDAR_EVENT_SUCCESSFUL, ADD_NEW_CALENDAR_EVENT, DELETE_EVENT_SUCCESSFUL, EDIT_CALENDAR_EVENT } from \"../../types\";\r\nimport { calendarEventNotSavedLogger, eventAddedSuccessfullyLogger } from '../../../toaster/index';\r\nimport { EDIT_CALENDAR_EVENT_API } from \"../../../services/root-endpoints\";\r\n\r\nconst getCalendarEvent = () => ( dispatch ) =>{\r\n    return CalendarService.fetchCalendarEvent()\r\n    .then((response) => {\r\n        console.log(response.data)\r\n        console.log(response.data.data)\r\n        dispatch({\r\n            type: FETCH_CALENDAR_EVENT_SUCCESSFUL,\r\n            payload: response.data.data\r\n        })\r\n    })\r\n}\r\n\r\nconst addNewCalendarEvent = (newEvent, action) => ( dispatch ) =>{\r\n    return CalendarService.postNewCalendarEvent(newEvent)\r\n    .then((response)=>{\r\n        eventAddedSuccessfullyLogger()\r\n        action.setSubmitting(false)\r\n        dispatch({\r\n            type: ADD_NEW_CALENDAR_EVENT,\r\n            payload: response.data.data\r\n        })\r\n    })\r\n    .catch((error)=>{\r\n        calendarEventNotSavedLogger()\r\n        action.setSubmitting(false)\r\n    })\r\n}\r\n\r\nconst deleteCalendarEvent = (eventID) => (dispatch) =>{\r\n    console.log(eventID)\r\n    dispatch({\r\n        type: DELETE_EVENT_SUCCESSFUL,\r\n        payload: eventID\r\n    })\r\n    return CalendarService.deleteCalendarEvent(eventID)\r\n    .then((response)=>{\r\n        console.log('respons', response)\r\n    })\r\n}\r\n\r\nconst editCalendarEvent = (updatedEvent) => (dispatch) =>{\r\n    dispatch({\r\n        type: EDIT_CALENDAR_EVENT,\r\n        payload: updatedEvent\r\n    })\r\n    return CalendarService.updateCalendarEvent(updatedEvent)\r\n}\r\n\r\n\r\n\r\nexport {\r\n    getCalendarEvent,\r\n    addNewCalendarEvent,\r\n    deleteCalendarEvent,\r\n    editCalendarEvent,\r\n}","const formatDate = ( date )=>{\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    // Convert Current Day to Day, Month date, year format\r\n    const dueDate = new Date(date).toLocaleDateString(\"en-US\", options);\r\n    // Return formated date\r\n    return dueDate;\r\n}\r\n\r\nexport {\r\n    formatDate\r\n}","//  React\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Actions\r\nimport { getCalendarEvent } from \"../../../../actions/company/calendar/calendarAction\";\r\n\r\n// Date Formatter Helper\r\nimport { formatDate } from \"../../../../_helper/dateFormatter\";\r\n\r\nconst eventHolder = \r\n    {\r\n        title: 'Event Card',\r\n        end: Date.now()\r\n    }\r\n    \r\nconst EventCard = () =>{\r\n    const {events} = useSelector(state => state.calendar);\r\n    const [eventState, setEventState] = useState(eventHolder);\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n\r\n        dispatch(getCalendarEvent())\r\n\r\n    }, [dispatch]);\r\n    \r\n    useEffect(() => {\r\n\r\n        // If the length of the calendar events is equals to 0\r\n        if(events.length === 0){\r\n\r\n            // Set the dummy event \r\n            setEventState(eventHolder)\r\n        }else{\r\n            // Set the eventState with event in redux\r\n            setEventState(events[0])\r\n        }\r\n            \r\n    }, [events]);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"bg-white shadow pace-roundy px-4 py-3 d-flex align-items-center justify-content-between mb-4\">\r\n                <div className=\"flex-grow-1 d-flex align-items-center\">\r\n                    <div className=\"dot mr-3 bg-green\"></div>\r\n                    <div className=\"text\">\r\n                        <h6 className=\"mb-0\">{eventState.title}</h6><span className=\"text-gray\">{formatDate(eventState.end)} - Calendar</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default EventCard;","import { Component } from \"react\";\r\n\r\nclass EscheduleCard extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            scheduleTitle: \"Holiday by air\",\r\n            scheduleTime: Date.now()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { scheduleTitle, scheduleTime } = this.state;\r\n        return(\r\n            <>\r\n                 <div className=\"bg-white shadow pace-roundy px-4 py-3 d-flex align-items-center justify-content-between mb-4\">\r\n                    <div className=\"flex-grow-1 d-flex align-items-center\">\r\n                        <div className=\"dot mr-3 pace-bg-primary\"></div>\r\n                        <div className=\"text\">\r\n                            <h6 className=\"mb-0\">{scheduleTitle}</h6><span className=\"text-gray\">{scheduleTime}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    };\r\n};\r\n\r\n\r\nexport default EscheduleCard;","// React\r\nimport { React } from 'react';\r\n\r\n// Card Components\r\nimport TodoCard from './TodoCard';\r\nimport EventCard from './EventCard';\r\nimport EscheduleCard from './EscheduleCard';\r\n\r\n\r\nconst NotificationCards = ()=>{\r\n    return(\r\n        <>\r\n            <div h='3' data-tut='reactour__notification'>\r\n                <TodoCard />\r\n                <EventCard />\r\n                <EscheduleCard />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotificationCards;","import { React, Component } from 'react';\r\nimport { currentUserStaffID } from '../../../../services/auth-header';\r\n\r\n\r\nclass MostActiveEmployee extends Component{\r\n    constructor(props){\r\n        super()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {\r\n                    currentUserStaffID === 5 ? (\r\n\r\n                        <div className=\"col-lg-7 mb-4 mb-lg-0\">\r\n                            <div className=\"card pace-roundy\">\r\n                                <div className=\"card-header\">\r\n                                    <h2 className=\"h6 mb-0 text-uppercase\">Your Progress Graph</h2>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <p className=\"mb-5 text-gray\">Your task progress is less than 10%</p>\r\n                                    <div className=\"chart-holder mt-5 mb-5\">\r\n                                        <canvas id=\"barChartExample1\"></canvas>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n\r\n                        <div className=\"col-lg-7 mb-4 mb-lg-0\">\r\n                            <div className=\"card pace-roundy\">\r\n                                <div className=\"card-header\">\r\n                                    <h2 className=\"h6 mb-0 text-uppercase\">Most Active Employee</h2>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <p className=\"mb-5 text-gray\">Hover over the bar chart</p>\r\n                                    <div className=\"chart-holder mt-5 mb-5\">\r\n                                        <canvas id=\"barChartExample1\"></canvas>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MostActiveEmployee;","import React from 'react';\r\nimport { useSelector }  from 'react-redux';\r\nconst HourTimerScreen = () =>{\r\n    const { workedMilliSecond, timerIsOff } = useSelector(state => state.timerStatus)\r\n    console.log(workedMilliSecond);\r\n    const getWorkedHour = Math.round(workedMilliSecond / 3600000)\r\n    return (\r\n        <>\r\n                <div h='5' data-tut='reactour__hourscreen'>\r\n                    <h2 className=\"mb-0 d-flex align-items-center\" h='5' data-tut='reactour__hourscreen'>\r\n                        <span>{getWorkedHour} {getWorkedHour > 1 ? 'hours' : 'hour' }</span>\r\n                        <span className={`dot pace-bg-accent d-inline-block ml-3 ${timerIsOff ? null : 'timer-blink'} `}></span>\r\n                    </h2>\r\n                    <span className=\"text-muted\">Worked {getWorkedHour > 1 ? 'Hours' : 'Hour' }</span>\r\n                </div>\r\n                <div className=\"chart-holder\">\r\n                    <canvas id=\"lineChart3\" style={{maxHeight: \"7rem !important\"}} className=\"w-100\"></canvas>\r\n                </div>  \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default HourTimerScreen;\r\n","import { useEffect } from 'react';\r\nimport Cards from './cards/Cards';\r\nimport NotificationCards from './cards/NotificationCards';\r\nimport MostActiveEmployee from './cards/MostActiveEmployee';\r\nimport HourTimerScreen from './timer/HourTimerScreen';\r\n\r\nconst Index = ({openTour}) => {\r\n    useEffect(()=>{\r\n        document.title = 'Company name | dashboard'\r\n    })\r\n\r\n    return(\r\n        <>\r\n            <section>\r\n            {/* >>>>>>>>>>>>>>> CARDS COMPONENT SECTION <<<<<<<<<<<<<< */}\r\n                {/* <EmpCards /> */}\r\n                <Cards />\r\n                <div className=\"row mb-4\">\r\n                    {/* <<<<<<<<<<<<< MOST-ACTIVE COMPONENT SECTION >>>>>>>>>>> */}\r\n                    <MostActiveEmployee />\r\n                    <div className=\"col-lg-5 mb-4 mb-lg-0 pl-lg-0\">\r\n                    {/* <<<<<<<<<<<<< NOTIFICATION COMPONENT SECTION >>>>>>>>>>> */}\r\n                        <NotificationCards />\r\n                        <div className=\"card px-5 py-4\">\r\n                            {/* HOUR-TIMER-SCREEN COMPONENT SECTION */}\r\n                            <HourTimerScreen />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Index;","import axios from 'axios';\r\nimport { ADD_NEW_EMPLOYEE_API, FETCH_EMPLOYEES_LIST_API, UPDATE_EMPLOYEE_BILLING_AND_TIME_API } from '../root-endpoints';\r\nimport { authHeader, currentUserCompanyID } from '../auth-header';\r\n\r\n\r\n// Function to add new employee to the server\r\nconst addNewEmployeeToServer = ( newEmployee ) =>{\r\n    // Spread the newEmployee properties and add the companyID to it\r\n    console.log('sent service')\r\n\r\n    return axios.post(ADD_NEW_EMPLOYEE_API, {...newEmployee, companyID : currentUserCompanyID.toString()}, { headers: authHeader })\r\n}\r\n\r\n\r\n// Function to get all employee from the server\r\nconst fetchCompanyEmployees = () =>{\r\n    return  axios.get(FETCH_EMPLOYEES_LIST_API + currentUserCompanyID, { headers: authHeader })\r\n}\r\n\r\n// Function that allow admin to update the employee profile\r\nconst putEmployeeBillingAndWorkHour = (values, action, staffID) =>{\r\n    const { billRateCharge, expectedWorkHours } = values;\r\n    const data = {\r\n        billRateCharge,\r\n        expectedWorkHours\r\n    }\r\n    console.log('values from put', values)\r\n    console.log('staffID from put', staffID)\r\n    console.log('action from put', action)\r\n    // console.log('billing from put', billRateCharge)\r\n    return axios.put(UPDATE_EMPLOYEE_BILLING_AND_TIME_API + staffID , data, {headers: authHeader})\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst EmployeeService = {\r\n    addNewEmployeeToServer,\r\n    fetchCompanyEmployees,\r\n    putEmployeeBillingAndWorkHour\r\n}\r\n\r\n\r\nexport default EmployeeService;","import { FETCH_COMPANY_EMPLOYEES } from '../types';\r\nimport EmployeeService from '../../services/employee/employee.service';\r\nimport { profileUpdateCompletedLogger, profileUpdateFailLogger, somethingWentWrongLogger } from '../../toaster';\r\n\r\nconst addNewEmployee = (newEmployee) => ( dispatch ) =>{\r\n    return EmployeeService.addNewEmployeeToServer(newEmployee)\r\n}\r\n\r\n\r\n// Function to get the company employee list\r\nconst getCompanyEmployees = () => (dispatch) =>{\r\n    return EmployeeService.fetchCompanyEmployees()\r\n    .then((response)=>{\r\n        \r\n        // Get company Employees\r\n        const companyEmployees = response.data.data\r\n        dispatch({\r\n            type: FETCH_COMPANY_EMPLOYEES,\r\n            payload: companyEmployees\r\n        })\r\n    })\r\n    .catch((response)=>{\r\n        // Alert user about network failure\r\n        // somethingWentWrongLogger()\r\n    })\r\n}\r\n\r\nconst updateEmployeeBillingAndWorkHour = (values, action, staffID,) => ( dispatch ) =>{\r\n    return EmployeeService.putEmployeeBillingAndWorkHour(values, action, staffID)\r\n    .then((response)=>{\r\n        console.log(response)\r\n        profileUpdateCompletedLogger()\r\n        action.setSubmitting(false)\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n        profileUpdateFailLogger()\r\n        action.setSubmitting(false)\r\n    })\r\n}\r\n\r\nexport {\r\n    addNewEmployee,\r\n    getCompanyEmployees,\r\n    updateEmployeeBillingAndWorkHour\r\n}","import React from 'react'\r\n\r\nconst Loader = () =>{\r\n    return (\r\n        <>\r\n            <div className=\"loader-wrapper\">\r\n                <div className=\"pace-loader\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Loader;","//  Axios\r\nimport axios from 'axios';\r\n\r\n//\r\nimport { \r\n    authHeader, \r\n    currentUserCompanyID,\r\n} from '../auth-header';\r\n\r\n// Api endpoint\r\nimport { ADD_DEPARTMENT_API, FETCH_DEPARTMENT_API } from '../root-endpoints';\r\n\r\n\r\nconst fetchDepartment = async() => {\r\n    console.log(currentUserCompanyID);\r\n    return await axios.get(FETCH_DEPARTMENT_API + currentUserCompanyID, {headers: authHeader} )\r\n}\r\n\r\nconst postNewDepartment = (values, companyID) =>{\r\n    const newDepartment = {\r\n        departmentName: values.departmentName,\r\n        id: companyID\r\n    }\r\n\r\n    // return axios.options(ADD_DEPARTMENT_API)\r\n    return axios.post(ADD_DEPARTMENT_API + companyID, newDepartment, {headers: authHeader})\r\n}\r\n\r\n\r\nconst DepartmentService = {\r\n    postNewDepartment,\r\n    fetchDepartment\r\n};\r\n\r\nexport default DepartmentService;\r\n","import { \r\n    OPEN_NEW_FORM, \r\n    CLOSE_NEW_FORM, \r\n    ADD_DEPARTMENT, \r\n    ERROR_DEPARTMENT, \r\n    DEPARTMENT_ERROR,\r\n    DELETE_DEPARTMENT,\r\n    FETCH_COMPANY_DEPARTMENT\r\n} from \"../../types\";\r\n\r\nimport DepartmentService from '../../../services/company/department-service'\r\n\r\n// Open new employee form\r\nconst openForm = () => (dispatch) =>{\r\n    dispatch({\r\n        type: OPEN_NEW_FORM\r\n    })\r\n}\r\n\r\n// Close new department form\r\nconst closeForm = () => (dispatch) =>{\r\n    dispatch({\r\n        type: CLOSE_NEW_FORM\r\n    })\r\n}\r\n\r\nconst getDepartment = () => (dispatch) =>{\r\n    return DepartmentService.fetchDepartment()\r\n    .then((response)=>{\r\n        const companyDepartment = response.data.data;\r\n        dispatch({type: FETCH_COMPANY_DEPARTMENT, payload: companyDepartment})\r\n    })\r\n    .catch((error)=>console.log(error))\r\n}\r\n\r\n// Add new department\r\nconst addDepartment = (values , companyID) => (dispatch) =>{\r\n    return DepartmentService.postNewDepartment(values, companyID)\r\n    .then((response)=>{\r\n        dispatch({\r\n            type: ADD_DEPARTMENT,\r\n            payload: response.data.data\r\n        })\r\n        // dispatch(getDepartment())\r\n    })\r\n    .catch((error)=>{\r\n        dispatch({\r\n            type: DEPARTMENT_ERROR,\r\n            payload: error\r\n        })\r\n    });\r\n};\r\n\r\n// Edit department\r\nconst editDepartment = (departmentID) => (dispatch) =>{\r\n    return DepartmentService.editDepartment(departmentID);\r\n};\r\n\r\n// Delete department\r\nconst deleteDepartment = (departmentID) => (dispatch) =>{\r\n    // Delete Department Record from the UI\r\n    dispatch({\r\n        type: DELETE_DEPARTMENT,\r\n        payload: departmentID\r\n    })\r\n    // Then delete from the server\r\n    // return DepartmentService.deleteDepartment(departmentID);\r\n}\r\n\r\n\r\nexport {\r\n    openForm,\r\n    closeForm,\r\n    addDepartment,\r\n    editDepartment,\r\n    deleteDepartment,\r\n    getDepartment\r\n}","// React\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewEmployee } from '../../../actions/employee/employeeAction';\r\nimport Button from '../../layouts/Button';\r\nimport { TextInput } from '../../layouts/FormInput';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport { AddEmployeeSchema } from '../../Validation/Schema';\r\nimport { emailAlreadyExist } from '../../../toaster';\r\nimport Loader from '../../loader/Loader';\r\nimport { getDepartment } from '../../../actions/company/department/departmentAction';\r\n\r\nconst employeeDetailsDropDown = {\r\n    employeeRole: [\r\n        {\r\n            roleName: 'Super-Admin',\r\n            roleID: 1\r\n        },\r\n        {\r\n            roleName: 'Co-Admin',\r\n            roleID: 3\r\n        },\r\n        {\r\n            roleName: 'Internal-Admin',\r\n            roleID: 4\r\n        },\r\n        {\r\n            roleName: 'Employee',\r\n            roleID: 5\r\n        }\r\n\r\n    ],\r\n}\r\n// const existingDepartment = employeeDetailsDropDown.departments.map(({departmentName, departmentID}, index)=><option value={departmentID} key={index}>{departmentName}</option>)\r\n// const availableStaffRole = employeeDetailsDropDown.staffRole.map((role, index)=><option value={role} key={index}>{role}</option>)\r\nconst availableRole = employeeDetailsDropDown.employeeRole.map(({roleName, roleID}, index)=><option value={roleID} key={index}>{roleName}</option>)\r\n\r\nconst successEmployedAlert = withReactContent(Swal)\r\n\r\nconst employeeAddedSuccessfully = () =>{\r\n    successEmployedAlert.fire({\r\n        showCloseButton: true,\r\n        confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n        icon: 'success',\r\n        title: 'Success',\r\n        text: 'A link has been sent to your new staff',\r\n    })\r\n}\r\n\r\nconst AddEmployee = () =>{\r\n    const dispatch = useDispatch();\r\n    // Department has department inside its state, destructuring departments array\r\n    const { departments } = useSelector(state => state.departments)\r\n\r\n    useEffect(() => {\r\n        // Fetch company department\r\n        console.log('here')\r\n        dispatch(getDepartment())\r\n    }, [dispatch])\r\n    // Generate the dropdown of company departments\r\n    const companyDepartmentDropDown = departments.map(({departmentName, departmentID}, index)=><option value={departmentID} key={index}>{departmentName}</option>)\r\n    if(!departments || departments === undefined){\r\n        return <Loader />\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container py-5\">\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"main-body\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                                <Formik\r\n                                    initialValues={\r\n                                        {\r\n                                            email: '',\r\n                                            roleID: '',\r\n                                            staffRole: '',\r\n                                            billRateCharge: '',\r\n                                            expectedWorkHours: '',\r\n                                            departmentID: '',\r\n                                        }\r\n                                    }\r\n\r\n                                    validationSchema={AddEmployeeSchema}\r\n                                    onSubmit={(values, action)=>{\r\n                                        dispatch(addNewEmployee(values))\r\n                                        .then((response)=>{\r\n                                            console.log('adddd', response)\r\n                                            action.setSubmitting(true)\r\n                                            employeeAddedSuccessfully()\r\n                                            action.setSubmitting(false)\r\n                                            action.resetForm()\r\n                                        })\r\n                                        .catch((error)=>{\r\n                                            action.setSubmitting(false)\r\n                                            emailAlreadyExist()\r\n                                        })\r\n                                    }}\r\n                                >\r\n                                    { (({ values, touched, errors, handleSubmit, isSubmitting, resetForm })=>{\r\n                                        return <Form onSubmit={handleSubmit}>\r\n                                            <div className=\"mb-5 text-gray\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n                                                <h5>ADD EMPLOYEE</h5>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* EMAIL ADDRESS */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Email Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"email\"\r\n                                                        placeholder=\"Enter Valid Email Address\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.email && errors.email ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"email\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"email\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                        \r\n                                             {/* EMPLOYEE POSITION */}\r\n                                             <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Position</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"staffRole\"\r\n                                                        placeholder=\"Enter Position\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.staffRole && errors.staffRole ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"staffRole\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"staffRole\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                             {/*  DEPARTMENT */}\r\n                                             <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3 mb-sm-3\">\r\n                                                    <h6 className=\"mb-0\">Department</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\">\r\n                                                    <Field component=\"select\" name=\"departmentID\" className=\"form-control\">\r\n                                                        <option defaultValue>Choose...</option>\r\n                                                        { companyDepartmentDropDown }\r\n                                                    </Field>\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"departmentID\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* ROLE */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3 mb-sm-3\">\r\n                                                    <h6 className=\"mb-0\">Role</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <Field component=\"select\" name=\"roleID\" className=\"form-control\">\r\n                                                        <option defaultValue>Choose...</option>\r\n                                                        {availableRole}\r\n                                                    </Field>\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"roleID\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* EXPECTED WORK HOUR */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Expected Work Hours</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"expectedWorkHours\"\r\n                                                        placeholder=\"Enter Expected Worked Hours\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.expectedWorkHours && errors.expectedWorkHours ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"expectedWorkHours\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"expectedWorkHours\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* Billing Rate Charge */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Billing Rate Charge</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"billRateCharge\"\r\n                                                        id=\"billRateCharge\"\r\n                                                        type=\"text\" \r\n                                                        placeholder=\"billRateCharge\"\r\n                                                        className={`form-control ${touched.billRateCharge && errors.billRateCharge ? \"is-invalid\" : \"\"}`}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"billRateCharge\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* Buttons */}\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    className=\"btn pace-btn-primary\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Please wait...</span>) : \"Employee\"}\r\n                                                />\r\n                                                <Button \r\n                                                    type=\"button\" \r\n                                                    label=\"Reset\" \r\n                                                    className=\"btn pace-btn-accent\" \r\n                                                    onClick={(()=>resetForm())} \r\n                                                />\r\n                                            </div>\r\n                                        </Form>\r\n                                    })\r\n                                }\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddEmployee;\r\n","import React, { Component } from 'react';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { TextInput } from '../../layouts/FormInput';\r\nimport { Form, Formik } from 'formik';\r\nimport Button from '../../layouts/Button';\r\n\r\n\r\nexport default class Table extends Component {\r\n\r\n  render() {\r\n    const { \r\n      keyField, data, columns, bordered, enableSearch, \r\n      selectRow, pagination, customInput, customInputName, \r\n      customInputPlaceHolder, customButtonType, customButtonLabel, \r\n      customButtonFunction, controlHeader, rowEvents, enableClearSearchButton,\r\n      noDataIndication, filter, rowStyle }= this.props;\r\n    const { SearchBar, ClearSearchButton } = Search;\r\n    const {title} = this.props;\r\n   \r\n    return (\r\n      <>\r\n        <ToolkitProvider\r\n          keyField={keyField}\r\n          data={ data }\r\n          columns={ columns }\r\n          search\r\n        >\r\n          {\r\n            props =>(\r\n              <>\r\n                 \r\n              {/* i had to comment this out, so when you need to use the table pls add a section tag with the classname of py3 */}\r\n                {/* <section className=\"py-5\"> */}\r\n                  <div className=\"row mb-4\">\r\n                    <div className=\"col-lg-12 mb-1\">\r\n                      <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-12 d-flex justify-content-between\">\r\n                              <h6 className=\"text-uppercase mb-0 pace-accent-color\">{title}</h6>\r\n                              <div className=\"d-flex align-items-center justify-content-center\">\r\n                                {\r\n                                  enableSearch ?\r\n                                   (\r\n                                    <>\r\n                                      <SearchBar { ...props.searchProps } className=\"search-box form-control mt-0\"/>\r\n                                     {\r\n                                       enableClearSearchButton ? \r\n                                          <ClearSearchButton { ...props.searchProps } className=\"btn form-control pace-btn-accent my-0 ml-5\"/>\r\n                                        :\r\n                                       null\r\n                                      }\r\n                                    </>\r\n                                  )\r\n                                  : \"\"\r\n                                }\r\n\r\n                                {\r\n\r\n                                  customInput ? (\r\n                                    <>\r\n                                      <Formik initialValues={{}}>\r\n                                        {(()=>(\r\n                                          <Form className=\"d-flex\">\r\n                                            <TextInput id={customInputName} name={customInputName} placeholder = {customInputPlaceHolder} className=\"form-control text-sm custom-box\" />\r\n                                            <Button type={customButtonType} label={customButtonLabel} onClick={customButtonFunction} className=\"btn form-contro pace-btn-accent btn-sm\" />\r\n\r\n                                          </Form>))}\r\n                                      </Formik></>) : \"\"\r\n                                }\r\n                              </div>\r\n                              <style>\r\n                                {\r\n                                  `\r\n                                    .search-box{\r\n                                      font-size: 18px !important;\r\n                                      width: 202px !important;\r\n                                      height: 35px;\r\n                                      margin-top: 8px;\r\n                                      margin-right: 4px;\r\n                                    }\r\n\r\n                                    .custom-box{\r\n                                      font-size: 18px !important;\r\n                                      width: 202px !important;\r\n                                      height: 35px;\r\n                                      margin-right: 4px;\r\n                                    }\r\n\r\n                                    .btn{\r\n                                      outline:none;\r\n                                      border:none;\r\n                                    }\r\n                                    \r\n                                    .page-item.active .page-link {\r\n                                      border-radius: 2px;\r\n                                      margin-right: auto;\r\n                                    }\r\n\r\n                                    .react-bootstrap-table-pagination-list{\r\n                                      display: flex;\r\n                                      justify-content: flex-end;\r\n                                    }\r\n                                    \r\n                                    #pageDropDown{\r\n                                      background: #335eea;\r\n                                      border: none;\r\n                                    }\r\n\r\n                                    .fa-eye{\r\n                                      color: #335eea !important;\r\n                                      cursor: pointer;\r\n                                    }\r\n\r\n                                  `\r\n                                }\r\n                              </style>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card-body py-1\">\r\n                          <div>\r\n                            <div className=\"col-12 d-flex\">\r\n                              {controlHeader}\r\n                            </div>\r\n                          </div>\r\n                          {/* <hr /> */}\r\n                          <BootstrapTable\r\n                            { ...props.baseProps }\r\n                            bordered={ bordered }\r\n                            pagination={ pagination }\r\n                            selectRow = { selectRow }\r\n                            rowEvents={ rowEvents }\r\n                            noDataIndication={  noDataIndication }\r\n                            filter={ filter }\r\n                            hover\r\n                            rowStyle = { rowStyle }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                {/* </section> */}\r\n              </>\r\n            )\r\n          }\r\n        </ToolkitProvider>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","// React\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\n// Components\r\nimport Table from '../../workspace/layouts/Table';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Loader\r\nimport Loader from '../../loader/Loader';\r\nimport { getCompanyEmployees } from '../../../actions/employee/employeeAction';\r\n\r\n\r\n\r\nexport default  function EmployeeList(){\r\n  // set usestate for isFetching too\r\n  const { employees, isFetching } = useSelector(state => state.employees)\r\n  const [ employeesList, setEmployeesList ] = useState([])\r\n  const [ isFetchingState, setIsFetchingState ] = useState(isFetching)\r\n  const dispatch = useDispatch()\r\n  \r\n  useEffect(() => {\r\n    // Fetch Company Employess\r\n    if(employees.length === 0){\r\n      dispatch(getCompanyEmployees())\r\n    }\r\n    setEmployeesList(employees)\r\n    setIsFetchingState(false)\r\n  }, [dispatch, employees])\r\n\r\n\r\n  // Set the bootrap details\r\n  const Header = [\r\n    {\r\n      dataField: 'staffID',\r\n        text: 'S/N'\r\n      },\r\n      {\r\n        dataField: 'firstName',\r\n        text: 'First',\r\n      },\r\n      {\r\n        dataField: 'lastName',\r\n        text: 'Lastname',\r\n      },\r\n      {\r\n        dataField: 'email',\r\n        text: 'Email',\r\n      },\r\n      {\r\n        \r\n        formatter: (cellContent, row) => {\r\n          return (\r\n            <>\r\n              <Link \r\n                to={`/dashboard/employee/profile/${row.staffID}`}\r\n                >\r\n                View\r\n                \r\n              </Link>\r\n            </>\r\n          );\r\n        },\r\n      },\r\n    \r\n    ];\r\n\r\n    // styles each row\r\n\r\n\r\n  const rowStyles = {\r\n    cursor: 'pointer'\r\n  }\r\n\r\n\r\n  // If the employee list is been fetched from the server or not mounted on the ui, show the loader \r\n  \r\n  const employeesLists = [\r\n    {\r\n      firstName: 'Adebayo',\r\n      staffID: '123',\r\n      lastName: 'samuel',\r\n      email: 'samuel'\r\n    }\r\n  ]\r\n\r\n  if(isFetchingState){\r\n    return(\r\n        <>\r\n            <Loader />\r\n        </>\r\n    )\r\n  }\r\n  return(\r\n    <>\r\n      <div  className=\"py-5\">\r\n\r\n        <Table\r\n          keyField='id'\r\n          title=\"Employee List\"\r\n          data={employeesList}\r\n          columns={Header}\r\n          bordered= { false }\r\n          pagination = { paginationFactory() }\r\n          enableSearch = { true }\r\n          rowStyle = {rowStyles}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","// React\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { getCompanyEmployees } from '../../../actions/employee/employeeAction';\r\nimport Button from '../../layouts/Button';\r\nimport Loader from '../../loader/Loader';\r\nimport unclebay from '../../pages/pages-images/ayodele_samuel_adebayo.jpg';\r\n\r\n\r\n\r\nconst ProfileRow = (props) => {\r\n    const { title, label } = props\r\n    return(\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-3\">\r\n                <h6 className=\"mb-0\">{title}</h6>\r\n                </div>\r\n                <div className=\"col-sm-9 text-secondary\">\r\n                    {label}\r\n                </div>\r\n            </div>\r\n            <hr />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst EmployeeProfile = () =>{\r\n    const params = useParams()\r\n    const { employees, isFetching } = useSelector(state => state.employees)\r\n    const [ employeeProfile, setEmployeeProfile ] = useState([{}])\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        // fetch the company's employees from the server\r\n        dispatch(getCompanyEmployees())\r\n    },[dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        const getEmployeeProfile = employees.filter((employee)=>employee.staffID === parseInt(params.id))\r\n        setEmployeeProfile(getEmployeeProfile[0])\r\n    }, [employees, params.id, setEmployeeProfile])\r\n\r\n    if(employeeProfile === undefined){\r\n        return(\r\n            <>\r\n                <Loader />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const fullName = employeeProfile.firstName + ' ' + employeeProfile.lastName\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"main-body\">\r\n                    {/* Breadcrumb */}\r\n                    <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb mt-2\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to='/dashboard/employee-list' className=\"text-grey\">\r\n                                        Employee List\r\n                                </Link>\r\n                            </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Profile</li>\r\n                        </ol>\r\n                    </nav>\r\n                    \r\n                    {/* /Breadcrumb */}\r\n                    <div className=\"row gutters-sm mt-3\">\r\n                        <div className=\"col-md-4 mb-3\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                        {/* <img src=\"https://bootdey.com/img/Content/avatar/avatar7.png\" alt=\"Admin\" className=\"rounded-circle\" width={150} /> */}\r\n                                        <img src={unclebay} alt=\"Admin\" className=\"rounded-circle\" width={150} />\r\n                                        <div className=\"mt-3\">\r\n                                            <h4 className=\"text-capitalize\">{employeeProfile.firstName === undefined ? '' : employeeProfile.firstName} {employeeProfile.lastName === undefined ? '' : employeeProfile.lastName}</h4>\r\n                                            {/* <h4>{employeeProfile.id} </h4> */}\r\n                                            {/* <h4>{params.id} </h4> */}\r\n                                            <p className=\"text-secondary mb-1\">Frontend Engineer</p>\r\n                                            {/* <p className=\"text-muted font-size-sm\">{employeeProfile.address.street}</p> */}\r\n                                            <Link to={`/dashboard/employee/profile/update/${params.id}`}>\r\n                                                <Button className=\"btn btn-primary m-2 mr-2\" label=\"Update  \"/>\r\n                                            </Link>\r\n                                            <Button className=\"btn btn-danger m-2\" label=\"Disable\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    {/* <ProfileRow title=\"Full Name\" label={ ` ${employeeProfile.firstName} ${employeeProfile.LastName}` } /> */}\r\n                                    <ProfileRow title=\"Full Name\" label={ ` ${fullName === undefined ? ' smam ' : fullName}` } />\r\n                                    <ProfileRow title=\"Email\" label={employeeProfile.email} />\r\n                                    <ProfileRow title=\"Department\" label=\"Web development\" />\r\n                                    <ProfileRow title=\"Role\" label=\"Frontend Engineer\" />\r\n                                    <ProfileRow title=\"Salary\" label={ `# ${employeeProfile.billRateCharge === null ? '' : employeeProfile.billRateCharge}` } />\r\n                                    <ProfileRow title=\"Phone\" label={employeeProfile.phone} />\r\n                                    {/* <ProfileRow title=\"Address\" label={employeeProfile.address.city} /> */}\r\n                                    <ProfileRow title=\"Work Hours\" label={employeeProfile.expectedWorkHours} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmployeeProfile;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextInput } from '../../layouts/FormInput';\r\nimport Button from '../../layouts/Button';\r\nimport { Formik, Form } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addDepartment, closeForm } from '../../../actions/company/department/departmentAction';\r\n\r\nexport const NewDepartmentForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [companyID, setCompanyID] = useState('');\r\n\r\n    // get current user from localStorage, getting it from the redux state makes the code break(takes a while to sycCurrent user)\r\n    const currentUser = JSON.parse(localStorage.getItem('currentUser')) || []\r\n    \r\n    useEffect(() => {\r\n        setCompanyID(currentUser.companyID)\r\n    }, [currentUser.companyID])\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"card\" style={{width: '18rem'}}>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item  pace-bg-accent\"> \r\n                    <span className=\"d-flex justify-content-between align-items-center\">\r\n                        New department \r\n                        <Button \r\n                            className=\"btn btn-sm\"\r\n                            onClick={(()=>dispatch(closeForm()))}\r\n                            icon=\"fa fa-times text-white\"\r\n                        />\r\n                    </span>\r\n                    \r\n                    </li>\r\n                    \r\n                        <Formik \r\n                            const initialValues = {\r\n                                {\r\n                                    departmentName: ''\r\n                                }\r\n\r\n                            }    \r\n                            onSubmit={(values)=>{\r\n                                console.log(companyID);\r\n                                dispatch(addDepartment(values, companyID))\r\n                            }}              \r\n                        >\r\n                            {({handleSubmit})=>{\r\n                                return(\r\n                            <li className=\"list-group-item\" style={{border: 'none'}}>\r\n                                <span>Department Name</span>\r\n                                    <Form onSubmit={handleSubmit}>\r\n                                        <TextInput\r\n                                            type=\"text\"\r\n                                            id=\"departmentName\"\r\n                                            label=\"\"\r\n                                            name=\"departmentName\"\r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    \r\n                                    <li className=\"list-group-item d-flex justify-content-center\">\r\n                                        <Button \r\n                                            type=\"submit\"\r\n                                            label=\"Create\"\r\n                                            className=\"btn pace-btn-accent\"\r\n                                        />\r\n                                    </li>\r\n                                    </Form>\r\n                            </li>\r\n                                )\r\n                            }}\r\n                        </Formik>\r\n                    {/* <li className=\"list-group-item\">\r\n                        <button></button>\r\n                        <Button \r\n                            type=\"submit\"\r\n                            label=\"Creates\"\r\n                            className=\"btn btn-success btn-sm\"\r\n                        />\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// React\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editDepartment, deleteDepartment, openForm, getDepartment } from '../../../actions/company/department/departmentAction';\r\n\r\n// Components\r\nimport { NewDepartmentForm } from './NewDepartmentForm';\r\n\r\n// Layout\r\nimport Button from '../../layouts/Button';\r\n\r\n\r\nconst ManageDepartment = () => {\r\n  const dispatch = useDispatch();\r\n  const [shouldFormOpen, setShouldFormOpen] = useState();\r\n  const { isFormOpen, departments } = useSelector(state => state.departments)\r\n  \r\n  useEffect(() => {\r\n     // Fetch company department\r\n     dispatch(getDepartment())\r\n    document.title = 'Manage Department'\r\n    setShouldFormOpen(isFormOpen)\r\n  }, [isFormOpen])\r\n    if(!departments){\r\n      return(\r\n          <div className=\"d-flex justify-content-center align-items-center mt-2\" style={{height:'100vh', background: '#cccccc'}}>\r\n              <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\" style={{fontSize: \"23px\"}}></i>\r\n              <span>Loading... Please wait</span>\r\n          </div>\r\n      )\r\n  }\r\n\r\n    return (\r\n      <>\r\n      <div className=\"todo-container container\">\r\n            <div className=\"new-department-form\">\r\n              <style>\r\n                {\r\n                  `\r\n\r\n                    .new-department-form{\r\n                      position: fixed;\r\n                      z-index: 1;\r\n                      width: 100%;\r\n                      height: 100%;\r\n                      overflow: hidden;\r\n                      top: 0;\r\n                      left: 0;\r\n                      justify-content: center;\r\n                      align-items: center;\r\n                      background-color: rgba(0, 0, 0, 0.5);\r\n                      display: ${shouldFormOpen ? 'flex' : 'none'};\r\n                    }\r\n\r\n                  `\r\n                }\r\n              </style>\r\n              <NewDepartmentForm />\r\n            </div>\r\n            <div className=\"col-12\">\r\n                <div className=\"card-hover-shadow-2x mb-3 card\">\r\n                    <div className=\"card-header-tab card-header\">\r\n                        <div className=\"card-header-title font-size-lg text-capitalize font-weight-normal\">\r\n                          <Button\r\n                            label=\" Add Department\"\r\n                            icon=\"fa fa-plus \"\r\n                            type=\"button\"\r\n                            className=\"btn pace-btn-primary btn-sm text-white\"\r\n                            onClick={(()=>dispatch(openForm()))}\r\n                          />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"scroll-area-sm -shiftToDisabled\">\r\n                        <perfect-scrollbar className=\"ps-show-limits\">\r\n                        <div style={{position: 'static'}} className=\"ps ps--active-y\">\r\n                            <div className=\"ps-content\">\r\n                              <ul className=\" list-group list-group-flush\">\r\n                                <table className=\"table\">\r\n                                  <thead className=\"thead-primary\">\r\n                                    <tr>\r\n                                      <th scope=\"col\">#</th>\r\n                                      <th scope=\"col\">Department name</th>\r\n                                      <th scope=\"col\">Total Staffs</th>\r\n                                      <th scope=\"col\"></th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    {\r\n                                      // Sort the department from bottom to head (reversing)- response from the server is using push\r\n                                      [...departments].reverse().map((info,index)=>{\r\n                                        return(\r\n                                          <DepartmentRowLayout \r\n                                            serialNumber={index + 1}\r\n                                            name={info.departmentName}\r\n                                            // size={info.staffSize}\r\n                                            key={index}\r\n                                          />\r\n                                        )\r\n                                      \r\n                                      })\r\n                                    }\r\n                                  </tbody>\r\n                                </table>\r\n                              </ul>\r\n                            </div>\r\n                        </div>\r\n                        </perfect-scrollbar>\r\n                    </div>\r\n                    <div className=\"d-block text-right card-footer\">\r\n                        {/* <button className=\"mr-2 btn btn-link btn-sm\">Cancel</button> */}\r\n                        {/* <TodoForm /> */}\r\n                      {/* <button className=\"btn btn-primary\" onClick={(()=>dispatch(openTodoForm()))}>Add Todo</button> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst DepartmentRowLayout =({serialNumber, name, size})=>{\r\n  const dispatch = useDispatch();\r\n  return(\r\n      <tr key={serialNumber}>\r\n        <th scope=\"row\" className='text-dark' style={{background: 'white', color:'blck'}}>{serialNumber}</th>\r\n        <td>{name}</td>\r\n        <td>{size}</td>\r\n        <td className=\"d-flex justify-content-end\">\r\n            <Button \r\n              className=\"btn btn-info btn-sm mr-2\"\r\n              // label=\" Edit \"\r\n              icon=\"fa fa-edit\"\r\n              type=\"button\"\r\n              onClick={(()=> dispatch(editDepartment()))}\r\n            />\r\n            <Button \r\n              className=\"btn btn-danger btn-sm\"\r\n              // label=\" Delete\"\r\n              icon=\"fa fa-trash\"\r\n              type=\"button\"\r\n              onClick={(()=> dispatch(deleteDepartment(serialNumber)))}\r\n            />\r\n        </td>\r\n      </tr>\r\n  )\r\n}\r\n\r\n\r\nexport default ManageDepartment;","// React\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n//Layout\r\nimport Button from '../layouts/Button';\r\nimport unclebay from '../pages/pages-images/ayodele_samuel_adebayo.jpg';\r\n\r\n// Toaster\r\nimport Loader from '../loader/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { currentUserFromLocalStorage } from '../../services/auth-header';\r\n\r\n\r\nconst ProfileRow = (props) => {\r\n    const { title, label } = props\r\n    return(\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-3\">\r\n                    <h6 className=\"mb-0\">{title}</h6>\r\n                </div>\r\n                <div className=\"col-sm-9 text-secondary\">\r\n                    {label}\r\n                </div>\r\n            </div>\r\n            <hr />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Profile = () =>{\r\n    const { currentUser } = useSelector(state => state.authenticationState)\r\n    const params = useParams();\r\n    const [ userProfile, setUserProfile ] = useState('');\r\n    const [ staffID, setStaffID ] = useState('');\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n\r\n        // Get staffID from the urls \r\n        const staffID = params.id;\r\n\r\n        // Set the staffID state to be reusable in the edit profile button path\r\n        setStaffID(staffID);\r\n        if(currentUser){\r\n\r\n            // Destructure the user information from the response.data.data[0] -response structure\r\n            const {\r\n                firstName,\r\n                lastName,\r\n                phoneNumber,\r\n                email,\r\n                address,\r\n                userName,\r\n                \r\n            } = currentUser;\r\n            \r\n            // Set the destructure user information into the profile state (ES6 syntax)\r\n            setUserProfile({\r\n                firstName,\r\n                    lastName,\r\n                    phoneNumber,\r\n                    email,\r\n                    address,\r\n                    userName,\r\n                })\r\n            }   \r\n            \r\n        }, [currentUser, params.id])\r\n\r\n    // if(userProfile.firstName === undefined){\r\n    //     return(\r\n    //         <>\r\n    //          {/* <div className=\"d-flex justify-content-center align-items-center mt-2\" style={{height:'100vh', background: '#cccccc'}}>\r\n    //                <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\" style={{fontSize: \"23px\"}}></i> \r\n    //                <span>Loading... Please wait</span> \r\n    //          </div> */}\r\n    //             <Loader />\r\n    //         </>\r\n    //     )\r\n    // }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"main-body\">\r\n                    {/* Breadcrumb */}\r\n                    <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            <Link to='/dashboard'>\r\n                                Dashboard\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            Profile\r\n                        </li>\r\n                        </ol>\r\n                    </nav>\r\n                    \r\n                    {/* /Breadcrumb */}\r\n                    <div className=\"row gutters-sm mt-4\">\r\n                        <div className=\"col-md-4 mb-3\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                        {/* <img src=\"https://bootdey.com/img/Content/avatar/avatar7.png\" alt=\"Admin\" className=\"rounded-circle\" width={150} /> */}\r\n                                        <img src={unclebay} alt=\"Admin\" className=\"rounded-circle\" width={150} />\r\n                                        <div className=\"mt-3\">\r\n                                            <h4 className=\"text-capitalize\">{userProfile.firstName} {userProfile.lastName}</h4>\r\n                                            <h4>{userProfile.id} </h4>\r\n                                            <p className=\"text-secondary mb-1\">{ userProfile.staffRole === undefined || null ? userProfile.userName : userProfile.staffRole }</p>\r\n                                            <p className=\"text-muted font-size-sm\">{userProfile.address}</p>\r\n                                            <Link to={`/dashboard/profile/update/${staffID}`}>\r\n                                                <Button className=\"btn btn-primary mr-2 m-2 btn-sm\" label=\"Edit Profile\"/>\r\n                                            </Link>\r\n                                            <Link to={`/dashboard/profile/changepassword/${staffID}`}>\r\n                                                <Button className=\"btn btn-warning text-white m-2  mt-2 btn-sm\" label=\"Change Password\"/>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <ProfileRow title=\"Full Name\" label={ ` ${userProfile.firstName === undefined ? '' : userProfile.firstName} ${userProfile.lastName === undefined ? '' : userProfile.lastName}` } />\r\n                                    <ProfileRow title=\"Email\" label={userProfile.email} />\r\n                                    <ProfileRow title=\"Department\" label=\"Web development\" />\r\n                                    <ProfileRow title=\"Role\" label={ userProfile.staffRole === undefined ? currentUserFromLocalStorage.staffRole : userProfile.staffRole} />\r\n                                    <ProfileRow title=\"Salary\" label={`# ${userProfile.billRateCharge === undefined || null ? '' : userProfile.billRateCharge}`} />\r\n                                    <ProfileRow title=\"Phone\" label={userProfile.phoneNumber} />\r\n                                    <ProfileRow title=\"Work Hours\" label={ userProfile.expectedWorkHours === undefined ? currentUserFromLocalStorage.expectedWorkHours : userProfile.expectedWorkHours} />\r\n                                    <ProfileRow title=\"Address\" label={userProfile.address} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import { ErrorMessage, Form, Formik } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { TextInput } from '../layouts/FormInput'\r\nimport Button from '../layouts/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updatePassword } from '../../actions/user/userAction';\r\nimport { changePasswordSchema } from '../Validation/Schema';\r\n\r\nexport default function ChangePassword() {\r\n    const [staffID, setStaffID] = useState();\r\n    const params = useParams();\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        const staffID = params.id; // get id from urls(path)\r\n        setStaffID(staffID);\r\n\r\n    }, []);\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                {/* Breadcrumb */}\r\n                <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb pt-3\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            <Link to='/dashboard'>\r\n                                Dashboard\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            <Link to={`/dashboard/profile/${params.id}`}>\r\n                                Profile\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            Change Password\r\n                        </li>\r\n                    </ol>\r\n                </nav>\r\n                {/* /Breadcrumb */}\r\n                <div className=\"main-body\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                                <Formik\r\n                                    initialValues = {{\r\n                                        password: '',\r\n                                        confirmPassword: '',\r\n                                    }}\r\n                                    enableReinitialize\r\n                                    validationSchema={changePasswordSchema}\r\n                                    onSubmit={(values, action)=>{\r\n                                        dispatch(updatePassword(values, action))\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    { (({ values, touched, errors, handleSubmit, isSubmitting, resetForm })=>{\r\n                                        return <Form onSubmit={handleSubmit}>\r\n                                            <div className=\"mb-5 text-gray\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre>  */}\r\n                                                <h5>CHANGE PASSWORD</h5>\r\n                                            </div>\r\n                                            <hr />\r\n                                        {/* CREATE PASSWORD */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">New Password</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"password\"\r\n                                                        placeholder=\"Create Password\"\r\n                                                        type=\"password\" \r\n                                                        className={`form-control ${ touched.password && errors.password ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"password\"\r\n                                                        autoComplete='on'\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"password\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* CONFIRM PASSWORD */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Confirm Password</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"password2\"\r\n                                                        placeholder=\"Confirm Password\"\r\n                                                        type=\"password\" \r\n                                                        className={`form-control ${ touched.password2 && errors.password2 ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"password2\"\r\n                                                        autoComplete='on'\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"password2\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Updating</span>) : \"Update\"}\r\n                                                    className=\"btn pace-btn-primary\" \r\n                                                />\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    className=\"btn pace-btn-accent d-none\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Please wait...</span>) : \"Reset\"}\r\n                                                    onClick={(()=>resetForm())} \r\n                                                />\r\n                                            </div>\r\n                                        </Form>\r\n                                        })\r\n                                    }\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// React\r\nimport { Link } from 'react-router-dom';\r\nimport { ErrorMessage, Form, Formik } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Layouts\r\nimport Button from '../layouts/Button';\r\nimport { TextInput } from '../layouts/FormInput';\r\n\r\n//  Actions\r\nimport { syncCurrentUser, updateUserProfile } from '../../actions/user/userAction';\r\n\r\n// Services helper\r\nimport Loader from '../loader/Loader';\r\nimport ChangePassword from './ChangePassword';\r\n\r\nconst UpdateProfile = () =>{\r\n    const { currentUser } = useSelector(state => state.authenticationState)\r\n    const params = useParams(); \r\n    const dispatch = useDispatch();\r\n    const [ staffID, setStaffID ] = useState('');\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    // User credentials\r\n    const [profile, setProfile] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        address: '',\r\n        userName: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        const staffID = params.id; // get id from urls(path)\r\n        setStaffID(staffID);\r\n\r\n        // Destructure the user information from the redux\r\n        if(currentUser){\r\n            const {\r\n                firstName,\r\n                lastName,\r\n                userName,\r\n                phoneNumber,\r\n                email,\r\n                address,\r\n                \r\n            } = currentUser\r\n        \r\n            // Set the destructure user information into the profile state (ES6 syntax)\r\n            setProfile({\r\n                firstName : typeof firstName !== 'string' ? '' : firstName,\r\n                lastName : typeof lastName !== 'string' ? '' : lastName,\r\n                userName,\r\n                phoneNumber: typeof phoneNumber === null || undefined ? '' : phoneNumber,\r\n                email,\r\n                address : typeof address !== 'string' ? '' : address,\r\n                // userName : typeof userName !== 'string' ? '' : userName,\r\n            })\r\n\r\n            setIsLoading(false)\r\n        }\r\n    }, [params.id, currentUser])\r\n    \r\n    if(isLoading){\r\n        return(\r\n            <>\r\n                <Loader />\r\n            </>\r\n        )\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <div className=\"container\">\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                {/* Breadcrumb */}\r\n                <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb pt-3\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            <Link to='/dashboard'>\r\n                                Dashboard\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            <Link to={`/dashboard/profile/${params.id}`}>\r\n                                Profile\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            Edit Profile\r\n                        </li>\r\n                    </ol>\r\n                </nav>\r\n                {/* /Breadcrumb */}\r\n                <div className=\"main-body\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                                <Formik\r\n                                    initialValues = {profile}\r\n                                    enableReinitialize\r\n                                    // validationSchema={UpdateProfileSchema}\r\n                                    onSubmit={(values, action)=>{\r\n                                        dispatch(updateUserProfile(values, staffID, action))\r\n                                        .then((response)=>{\r\n                                            dispatch(syncCurrentUser(staffID))\r\n                                            history.push(`/dashboard/profile/${params.id}`)\r\n                                        })\r\n                                        .catch((error)=>{\r\n                                            console.log(error)\r\n                                        })\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    { (({ values, touched, errors, handleSubmit, isSubmitting, resetForm })=>{\r\n                                        return <Form onSubmit={handleSubmit}>\r\n                                            <div className=\"mb-5 text-gray\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre>  */}\r\n                                                <h5>EDIT PROFILE</h5>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* FIRST NAME */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">First Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        placeholder=\"Enter Firstname\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.firstName && errors.firstName ? \"is-invalid\" : \"\"}`} \r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"firstName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* LAST NAME */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Last Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"lastName\"\r\n                                                        placeholder=\"Enter last Name\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.lastName && errors.lastName ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"lastName\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"lastName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* USERNAME */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Username</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"userName\"\r\n                                                        placeholder=\"Enter username\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.userName && errors.userName ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"userName\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"userName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* PHONE NUMBER */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Phone Number</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                <TextInput\r\n                                                            name=\"phoneNumber\"\r\n                                                            placeholder=\"Enter Phone Number\"\r\n                                                            type=\"tel\" \r\n                                                            className={`form-control ${touched.phoneNumber && errors.phoneNumber ? \"is-invalid\" : \"\"}`} \r\n                                                            id=\"phoneNumber\"\r\n                                                        />\r\n                                                        <ErrorMessage\r\n                                                            component=\"div\"\r\n                                                            name=\"phoneNumber\"\r\n                                                            className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* EMAIL ADDRESS */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Email Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"email\"\r\n                                                        placeholder=\"Enter Valid Email Address\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.email && errors.email ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"email\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"email\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* ADDRESS */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"address\"\r\n                                                        id=\"address\"\r\n                                                        type=\"text\" \r\n                                                        placeholder=\"143 work and connect\"\r\n                                                        className={`form-control ${touched.address && errors.address ? \"is-invalid\" : \"\"}`}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"address\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Updating</span>) : \"Update\"}\r\n                                                    className=\"btn pace-btn-primary\" \r\n                                                />\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    className=\"btn pace-btn-accent d-none\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Please wait...</span>) : \"Reset\"}\r\n                                                    onClick={(()=>resetForm())} \r\n                                                />\r\n                                            </div>\r\n                                        </Form>\r\n                                    })\r\n                                }\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport Button from '../../layouts/Button';\r\nconst TaskSidebar =() => {\r\n\r\n  const [currentUserRoleID, setCurrentUserRoleID] = useState('')\r\n  \r\n  useEffect(() => {\r\n      const getCurrentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n      if(getCurrentUser){\r\n        setCurrentUserRoleID(getCurrentUser.roleID)\r\n      }\r\n  }, [])\r\n  return (\r\n\r\n    <>\r\n       {/* <div className=\"col-lg-3 mb-4\"> */}\r\n\r\n        <section className=\"task-sidebar card py-3\">\r\n            {\r\n              currentUserRoleID === 5 ? (\r\n                <>\r\n\r\n                    <Button\r\n                      type=\"button\"\r\n                      label=\" Task Menu \"\r\n                      className=\"btn pace-btn-primary mx-3 btn-sm p-1\"  \r\n                    />\r\n\r\n                </>\r\n              ) : \r\n              (\r\n                <NavLink exact to=\"/dashboard/task/draft-task\" className=\"btn pace-btn-primary mx-3 btn-sm p-1\">\r\n                  <i className=\"fa fa-pen\"></i>\r\n                   &nbsp; Draft Task\r\n                </NavLink> \r\n              )\r\n            }\r\n          <hr/>\r\n          <ul className=\"sidebar-menu list-unstyled\">\r\n            <li className=\"\">\r\n              <NavLink exact to=\"/dashboard/task/all-tasks\" className=\"sidebar-link text-muted\" activeClassName=\"active\">\r\n                <i className=\"fa fa-download mr-3 text-gray\"/><span> Tasks Inbox</span>\r\n              </NavLink>\r\n            </li>\r\n            {\r\n              // NO DISPLAY IN EMPLOYEE SIDEBAR\r\n               currentUserRoleID === 5 ? \"\" : (\r\n                <li className=\"\">\r\n                  <NavLink exact to=\"/dashboard/task/assigned-tasks\" className=\"sidebar-link text-muted\" activeClassName=\"active\">\r\n                    <i className=\"fa fa-location-arrow mr-3 text-gray\"/><span>Assigned</span>\r\n                  </NavLink>\r\n                </li>\r\n               )\r\n            }\r\n            <li className=\"\">\r\n              <NavLink exact to=\"/dashboard/task/accepted-tasks\" className=\"sidebar-link text-muted\" activeClassName=\"active\">\r\n                <i className=\"fa fa-tasks mr-3 text-gray\"/><span>Accepted</span>\r\n              </NavLink>\r\n            </li>\r\n\r\n            {\r\n\r\n              currentUserRoleID === 5 ? (\r\n\r\n                // EMPLOYEE SIDEBAR\r\n                <>\r\n                  <li className=\"sidebar-list-item\">\r\n                    <NavLink exact to=\"/dashboard/task/pending-tasks\" className=\"sidebar-link text-muted\" activeClassName=\"active\">\r\n                      <i className=\"fa fa-reply-all mr-3 text-gray\"/><span>Pending</span>\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"sidebar-list-item\">\r\n                    <NavLink exact to=\"/dashboard/task/completed-tasks\" className=\"sidebar-link text-muted\" activeClassName=\"active\">\r\n                      <i className=\"fa fa-check mr-3 text-gray\"/><span>Completed</span>\r\n                    </NavLink>\r\n                  </li>\r\n                </>\r\n            ) : (\r\n                // ADMINS SIDEBAR\r\n                <>\r\n                    \r\n                    <li className=\"sidebar-list-item\">\r\n                      <NavLink exact to=\"/dashboard/task/pending-tasks\" className=\"sidebar-link text-muted\" activeClassName=\"active\">\r\n                        <i className=\"fa fa-reply-all mr-3 text-gray\"/><span>Pending</span>\r\n                      </NavLink>\r\n                    </li>\r\n                    {/* <li className=\"sidebar-list-item\">\r\n                      <NavLink exact to=\"/dashboard/task/\" className=\"sidebar-link text-muted\" activeClassName=\"active\">\r\n                        <i className=\"fa fa-inbox mr-3 text-gray\"/><span>Drafted</span>\r\n                      </NavLink>\r\n                    </li> */}\r\n                </>\r\n              )\r\n        \r\n              \r\n        \r\n            }\r\n          </ul>\r\n        </section>\r\n        {/* </div> */}\r\n\r\n      </>\r\n     \r\n  )\r\n}\r\n\r\nexport default TaskSidebar;","// This file only communicate to the backend \r\n\r\n// Axios\r\nimport axios from \"axios\";\r\nimport { authHeader, currentUserStaffID } from './auth-header';\r\n\r\n// API\r\n\r\nimport { ASSIGN_TASK_API_URL, TASK_API_URL, USERS_TASKS_BY_STATUS_API_URL, ASSIGNED_TASK_API_URL,  UPDATE_TASK_STATUS_API_URL, DELETE_ASSIGNED_TASK_API_URL } from \"./root-endpoints\";\r\n\r\nconst assignTask = async(newTask) => {\r\n    return await axios.post(ASSIGN_TASK_API_URL + currentUserStaffID, {...newTask, staffID : currentUserStaffID }, { headers: authHeader } );\r\n}\r\n\r\nconst fetchTasks = () =>{\r\n    return axios.get( TASK_API_URL + currentUserStaffID, { headers: authHeader } )\r\n}\r\n\r\nconst deleteTask = (id) =>{\r\n     return axios.delete(TASK_API_URL + `${id}`)\r\n}\r\n\r\nconst updateTaskStatus = (taskStatus) =>{\r\n     return axios.put( UPDATE_TASK_STATUS_API_URL + currentUserStaffID, {...taskStatus, staffID : currentUserStaffID }, { headers: authHeader } )\r\n}\r\n\r\n\r\nconst editTask = (id) =>{\r\n    return axios.put(`${ TASK_API_URL }/${id}`)\r\n}\r\n\r\nconst fetchUsersTasksByStatus = (taskStatus) =>{\r\n    return axios.get( USERS_TASKS_BY_STATUS_API_URL + currentUserStaffID + '/' + taskStatus, { headers: authHeader } )\r\n}\r\n\r\nconst fetchAssignedTasks = (newTask) =>{\r\n    return axios.get( ASSIGNED_TASK_API_URL + currentUserStaffID, { headers: authHeader })\r\n}\r\n\r\nconst deleteAssignedTask = (id) =>{\r\n     axios.delete( DELETE_ASSIGNED_TASK_API_URL + currentUserStaffID, {...id, staffID : currentUserStaffID }, { headers: authHeader }  )\r\n}\r\n\r\n\r\nconst TaskService = {\r\n    assignTask,\r\n    fetchTasks,\r\n    fetchUsersTasksByStatus,\r\n    fetchAssignedTasks,\r\n    editTask,\r\n    deleteTask,\r\n    updateTaskStatus,\r\n    deleteAssignedTask,\r\n}\r\n\r\n\r\nexport default TaskService;","// React\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Formik, Form} from 'formik';\r\n\r\n// Layouts\r\nimport { TextInput, TextArea } from '../../layouts/FormInput';\r\nimport Button from '../../layouts/Button';\r\n\r\n// Toast\r\nimport { taskNotSent, taskSent } from '../../../toaster';\r\n\r\n// Actions\r\nimport { assignTask } from '../../../actions/task/taskAction';\r\nimport { getCompanyEmployees } from \"../../../actions/employee/employeeAction\";\r\n\r\nconst DraftTask = () => {\r\n  const dispatch = useDispatch();\r\n  const { employees } = useSelector(state => state.employees)\r\n  const employeesDropDown = employees.map(({staffID, email}, index)=><option className=\"text-red\" value={staffID} key={index}>{email}</option>)\r\n\r\n  useEffect(() => {\r\n    dispatch(getCompanyEmployees()) \r\n  },[dispatch])\r\n\r\n    return (\r\n      <div>\r\n        <section className=\"\">\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col task-util compose-task\">\r\n              <div className=\"card\">\r\n              <header className=\"card-header wht-bg\">\r\n                <h4 className=\"gen-case\">\r\n                    Assign Task\r\n                </h4>\r\n              </header>\r\n                <div className=\"card-body\">\r\n                  <div className=\"card-text\">\r\n                    <Formik\r\n                      initialValues={{\r\n                        assignedID: '',\r\n                        taskName: '',\r\n                        taskDescription: '',\r\n                        documentsAttached: '',\r\n                        endDate: ''\r\n                      }}\r\n                        // validationSchema = {}\r\n                        onSubmit={( values, action) =>{\r\n                          dispatch(assignTask(values))\r\n                          .then((response)=>{\r\n                            taskSent()\r\n                            action.resetForm()\r\n                          })\r\n                          .catch((error)=>{\r\n                            taskNotSent()\r\n                            action.setSubmitting(false)\r\n                          })\r\n                        }\r\n                      }\r\n                    >\r\n                      {({touched, errors, values, handleSubmit, handleChange, isSubmitting, resetForm}) => (\r\n                        <Form className=\"mt-0\"  onSubmit={handleSubmit}>\r\n                          {/* <pre>{ JSON.stringify(values, null, 2) }</pre> */}\r\n                          <div className=\"compose-btn-wrapper\">\r\n                            <Button \r\n                              type=\"submit\"\r\n                              className=\"btn btn-theme btn-sm\"\r\n                              disabled={isSubmitting}\r\n                              label=\" Assign\"\r\n                              icon={`${isSubmitting ? \"fa fa-spinner fa-spin\" : \"fa fa-check\" }`}\r\n                            />                                   \r\n                            <Button \r\n                              type=\"submit\"\r\n                              label=\" Draft\"\r\n                              icon=\"fa fa-edit\"\r\n                              className=\"btn btn-sm ml-2 mr-2 special pace-bg-primary\"\r\n                            />     \r\n                            <Button \r\n                              type=\"submit\"\r\n                              label=\" Discard\"\r\n                              icon=\"fa fa-times\"\r\n                              className=\"btn btn-sm pace-bg-accent\"\r\n                              onClick={(()=>resetForm())} \r\n                            />       \r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <TextInput \r\n                                label = \"To:\"\r\n                                name = \"assignedID\"\r\n                                id = \"assignedId\" // id must not share same name with list\r\n                                list = \"assignedID\"\r\n                                type = \"text\"\r\n                                // placeholder=\"Start Typing\"\r\n                                value={values.assignedID}\r\n                                className = \"form-control lead\"                                \r\n                                onChange={handleChange}\r\n                                autocomplete=\"off\"\r\n                            />\r\n                            <datalist id=\"assignedID\" >\r\n                              {/* only way to make the dropdown larger, the with is not accepted in the dropdown tag */}\r\n                              <option>\r\n                                Employees Suggestion:\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                \r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                \r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n                                &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp;\r\n\r\n                              </option>\r\n                                { employeesDropDown }\r\n                            </datalist>\r\n                          </div>                            \r\n                          <div className=\"form-group\">\r\n                            <TextInput \r\n                                label = \"Subject:\"\r\n                                name = \"taskName\"\r\n                                id = \"taskName\"\r\n                                type = \"text\"\r\n                                value={values.taskName}\r\n                                className = \"form-control lead\"                                \r\n                                onChange={handleChange}\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                              <TextArea \r\n                                label = \"Task description\"\r\n                                name = \"taskDescription\"\r\n                                id = \"task-description\"\r\n                                value = {values.taskDescription}\r\n                                className= \"form-control lead\"                               \r\n                                rows = \"4\"\r\n                                // cols = \"57\"\r\n                                resize = \"none\"\r\n                                onChange={handleChange} \r\n                              />\r\n                          </div>\r\n                          <div className=\"form-group row\">\r\n                            <div className=\"col-sm-6\">\r\n                              <TextInput \r\n                                  label = \"Attachment\"\r\n                                  name = \"documentsAttached\"\r\n                                  id = \"documentsAttached\"\r\n                                  type = \"file\"\r\n                                  value={values.documentsAttached}\r\n                                  className = \"lead\"\r\n                                  onChange={handleChange}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                              <TextInput \r\n                                  label = \"Due Date\"\r\n                                  name = \"endDate\"\r\n                                  id = \"due-date\"\r\n                                  type=\"date\"\r\n                                  value={values.endDate}\r\n                                  className = \"form-control lead\"     \r\n                                  onChange={handleChange}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"d-none compose-btn mt-4\">\r\n                            <Button \r\n                              type=\"submit\"\r\n                              className=\"btn btn-theme btn-sm\"\r\n                              disabled={isSubmitting}\r\n                              label={isSubmitting ? \r\n                                (\r\n                                  <span><i className=\"fa fa-spinner fa-spin\"></i> Sending</span>\r\n                                ) : (\r\n                                  <span><i className=\"fa fa-check\"></i> Assign</span>\r\n                              )}\r\n                            />         \r\n                            <Button \r\n                              type=\"submit\"\r\n                              label=\" Draft\"\r\n                              icon=\"fa fa-edit\"\r\n                              className=\"btn btn-sm ml-2 mr-2 special\"\r\n                            />                           \r\n                            <Button \r\n                              type=\"submit\"\r\n                              label=\" Discard\"\r\n                              icon=\"fa fa-times\"\r\n                              className=\"btn btn-sm pace-bg-accent\"\r\n                              onClick={(()=>resetForm())} \r\n                            />   \r\n                          </div>\r\n                        </Form>\r\n                      )}\r\n\r\n                    </Formik>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>    \r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default DraftTask;\r\n","import TaskService from \"../../services/task.service\";\r\nimport { \r\n  FETCH_TASKS_PENDING,\r\n  FETCH_TASKS_SUCCESS,\r\n  FETCH_TASKS_ERROR,\r\n  UPDATE_TASK_STATUS,\r\n  ASSIGN_TASK,\r\n  TASKS_ERROR,\r\n  DELETE_TASK,\r\n  EDIT_TASK,\r\n  TOGGLE_TODO_COMPLETE,\r\n  TOGGLE_TASK_COMPLETE\r\n} from '../types';\r\n\r\n// don't forget to change this to async::Sam\r\n\r\n// Fetch Task action\r\nconst getTasks = () => ( dispatch ) =>{\r\n  dispatch({ type: FETCH_TASKS_PENDING });\r\n  return TaskService.fetchTasks()\r\n  .then((response)=> {\r\n    dispatch({ type: FETCH_TASKS_SUCCESS, payload: response.data.data });\r\n  })\r\n  .catch((error) =>{\r\n    console.log(error)\r\n    dispatch({ type: FETCH_TASKS_ERROR, payload: error })\r\n  })\r\n};\r\n\r\n// Add new Task \r\nconst assignTask  = (newTask) => (dispatch) =>{\r\n  return TaskService.assignTask(newTask)\r\n}\r\n\r\n// Update task status\r\nconst updateTaskStatus = (taskStatus) => ( dispatch ) => {\r\n  return TaskService.updateTaskStatus(taskStatus);\r\n}\r\n\r\n\r\n// Delete Task \r\nconst deleteTask  = (id) => (dispatch) =>{\r\n  dispatch({ type: DELETE_TASK, payload: id }) // Update the UI even when error occurs, since server will retain the undeleted item\r\n  return TaskService.deleteTask(id)\r\n}\r\n\r\n// Edit Task \r\nconst editTask  = (id) => (dispatch) =>{\r\n  dispatch({ type:EDIT_TASK, payload: id })\r\n}\r\n\r\n// Toggle todo completion\r\nconst toggleTaskCompletion = (id) =>{\r\n  return{\r\n      type: TOGGLE_TASK_COMPLETE,\r\n      payload: id\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  assignTask,\r\n  getTasks,\r\n  editTask,\r\n  updateTaskStatus,\r\n  deleteTask,\r\n  toggleTaskCompletion\r\n}","import TaskService from \"../../services/task.service\";\r\n\r\nimport {\r\n  FETCH_TASKS_BY_STATUS_PENDING,\r\n  FETCH_TASKS_BY_STATUS_SUCCESS,\r\n  FETCH_TASKS_BY_STATUS_ERROR,\r\n  DELETE_TASKS_BY_STATUS\r\n} from '../types';\r\n\r\n// FETCH TASK BY STATUS\r\n export const getTaskByStatus = (taskStatus) => ( dispatch ) =>{\r\n  dispatch({ type: FETCH_TASKS_BY_STATUS_PENDING });\r\n  return TaskService.fetchUsersTasksByStatus(taskStatus)\r\n  .then((response)=> {\r\n    console.log(response)\r\n    dispatch({ type:FETCH_TASKS_BY_STATUS_SUCCESS, payload: response.data.data });\r\n    return response.data.data;\r\n  })\r\n  .catch((error) =>{\r\n    dispatch({ type:FETCH_TASKS_BY_STATUS_ERROR, payload: error })\r\n  })\r\n};\r\n\r\n\r\nexport const deleteUsersTasksByStatus  = (id) => (dispatch) =>{\r\n  dispatch({ type: DELETE_TASKS_BY_STATUS, payload: id }) // Update the UI even when error occurs, since server will retain the undeleted item\r\n  return TaskService.deleteUsersTasksByStatus(id)\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { getTaskByStatus } from '../../../../actions/task/usersTasksByStatus';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../../../loader/Loader';\r\n\r\nconst AcceptedTasks = () => {\r\n const dispatch = useDispatch();\r\n  const { usersTasksByStatus, isFetching } = useSelector(state => state.usersTasksByStatus)\r\n  const history = useHistory();\r\n  \r\n  useEffect(() => {\r\n    dispatch(getTaskByStatus(2));\r\n  }, [])\r\n\r\n  console.log(getTaskByStatus, 'GETaccept')\r\n    console.log(usersTasksByStatus, 'accept')\r\n\r\n  // adds checkbox to each row\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    headerColumnStyle: { backgroundColor: 'transparent' }\r\n  };\r\n  // styles each row\r\n  const rowStyle = {\r\n    cursor: 'pointer'\r\n  }\r\n  // routes to full task details page on double click\r\n  const taskDetails =  {\r\n    onClick: (e, row, rowIndex) => \r\n    { \r\n      history.push(`/dashboard/task/view-task/`+ row.taskID)\r\n    }\r\n  };\r\n\r\n  // If the task list is been fetched from the server or not mounted on the ui, show the loader \r\n  if(isFetching){\r\n    return(\r\n        <>\r\n            <Loader />\r\n        </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      \r\n      <Table\r\n        keyField='id'\r\n        title=\"Accepted Task\"\r\n        data={ usersTasksByStatus }\r\n        columns={taskHeader}\r\n        bordered= { false }\r\n        selectRow = { selectRow }\r\n        enableSearch = { true }\r\n        pagination = { paginationFactory() }\r\n        // controlHeader = { navigate }\r\n        rowEvents = { taskDetails }\r\n        noDataIndication={'No available task'}\r\n        filter={ filterFactory() }\r\n        rowStyle={ rowStyle }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst taskHeader = [\r\n\r\n  {\r\n    dataField: 'taskName',\r\n    text: 'Title',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'endDate',\r\n    text: 'Due Date',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'documentsAttached',\r\n    text: 'Attachment',\r\n    formatter: (cell, row) => {\r\n      if(!cell){\r\n      return(\r\n        <i class=\"fa fa-paperclip\" />\r\n      )}\r\n    },\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n];\r\n\r\nexport default AcceptedTasks;","import TaskService from \"../../services/task.service\";\r\n\r\nimport {\r\n  FETCH_ASSIGNED_TASKS_PENDING,\r\n  FETCH_ASSIGNED_TASKS_SUCCESS,\r\n  FETCH_ASSIGNED_TASKS_ERROR,\r\n  DELETE_ASSIGNED_TASK\r\n} from '../types';\r\n\r\n// Fetch assigned Task action\r\n export const getAssignedTasks = () => ( dispatch ) =>{\r\n  dispatch({ type: FETCH_ASSIGNED_TASKS_PENDING });\r\n  return TaskService.fetchAssignedTasks()\r\n  .then((response)=> {\r\n    console.log(response)\r\n    dispatch({ type: FETCH_ASSIGNED_TASKS_SUCCESS, payload: response.data.data });\r\n    return response.data.data;\r\n  })\r\n  .catch((error) =>{\r\n    dispatch({ type: FETCH_ASSIGNED_TASKS_ERROR, payload: error })\r\n  })\r\n};\r\n\r\nexport const deleteAssignedTask  = (id) => (dispatch) =>{\r\n  dispatch({ type: DELETE_ASSIGNED_TASK, payload: id }) // Update the UI even when error occurs, since server will retain the undeleted item\r\n  return TaskService.deleteAssignedTask(id)\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { getAssignedTasks } from '../../../../actions/task/assignedTaskAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Loader\r\nimport Loader from '../../../loader/Loader';\r\nimport { formatDate } from '../../../../_helper/dateFormatter';\r\n\r\n\r\nconst handleFormatDate = (selectedDepartmentTaskSheet) =>{\r\n  const formatedTaskSheet = selectedDepartmentTaskSheet.map((taskRecord)=> {\r\n    taskRecord.endDate = formatDate(taskRecord.endDate) \r\n    // taskRecord.dateCreated = formatDate(taskRecord.dateCreated) \r\n    return taskRecord\r\n  })\r\n  return formatedTaskSheet\r\n}\r\n\r\nconst AssignedTasks = () => {\r\n  const {assignedTasks, isFetching } = useSelector(state => state.assignedTasks)\r\n  const [assignedTaskState, setAssignedTaskState] = useState([])\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n// console.log(assignedTasks)\r\n\r\n  useEffect(() => {\r\n    dispatch(getAssignedTasks())\r\n    // console.log(assignedTasks.taskStatus)\r\n  }, [assignedTasks.taskStatus, dispatch])\r\n\r\n  useEffect(() => {\r\n    setAssignedTaskState(handleFormatDate(assignedTasks))\r\n  }, [assignedTasks])\r\n\r\n  \r\n\r\n  // styles each row\r\n  const rowStyle = {\r\n    cursor: 'pointer'\r\n  }\r\n\r\n  // routes to full task details page on double click\r\n  const taskDetails =  {\r\n    onClick: (e, row, rowIndex) =>\r\n    {\r\n        history.push(`/dashboard/task/view-task/`+ row.taskID)\r\n    }\r\n  };\r\n\r\n  // If the task list is been fetched from the server or not mounted on the ui, show the loader\r\n  if(isFetching){\r\n    return(\r\n        <>\r\n            <Loader />\r\n        </>\r\n    )\r\n  }\r\n  return (\r\n    <div >\r\n\r\n      <Table\r\n        keyField='id'\r\n        title = \"Assigned Tasks\"\r\n        data={assignedTaskState}\r\n        columns={taskHeader}\r\n        bordered= { false }\r\n        // selectRow = {selectRow}\r\n        enableSearch = { true }\r\n        pagination = { paginationFactory() }\r\n        // controlHeader = { navigate }\r\n        rowEvents = { taskDetails }\r\n        noDataIndication={'No available task'}\r\n        filter={ filterFactory() }\r\n        rowStyle={ rowStyle }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst taskHeader = [\r\n\r\n  {\r\n    dataField: 'taskName',\r\n    text: 'Title',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'endDate',\r\n    text: 'Due Date',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'documentsAttached',\r\n    text: 'Attachment',\r\n    formatter: (cell, row) => {\r\n      if(!cell){\r\n      return(\r\n        <i class=\"fa fa-paperclip\" />\r\n      )}\r\n    },\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'taskStatus',\r\n    text: 'Status',\r\n    headerAttrs: {\r\n      hidden:true\r\n    },\r\n    formatter: (cell, row) => {\r\n      if(cell){\r\n      // return(\r\n        switch (cell) {\r\n          case 1:\r\n              return 'pending'\r\n          case 2:\r\n              return 'accepted'\r\n          case 3:\r\n              return 'completed'\r\n          case 4:\r\n              return 'overdue'\r\n          default: \r\n              break;\r\n      }\r\n      // )\r\n    }\r\n    }\r\n  },\r\n];\r\n\r\nexport default AssignedTasks;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { getTaskByStatus } from '../../../../actions/task/usersTasksByStatus';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../../../loader/Loader';\r\n\r\nconst PendingTasks = () => {\r\n\r\n  const { usersTasksByStatus, isFetching } = useSelector(state => state.usersTasksByStatus)\r\n  const history = useHistory();\r\n  const dispatch = useDispatch()\r\n  \r\n  useEffect(() => {\r\n    dispatch(getTaskByStatus(1));\r\n  }, [])\r\n\r\n  console.log(getTaskByStatus, 'GETaccept')\r\n    console.log( usersTasksByStatus, 'accept')\r\n\r\n  // adds checkbox to each row\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    headerColumnStyle: { backgroundColor: 'transparent' }\r\n  };\r\n  // styles each row\r\n  const rowStyle = {\r\n    cursor: 'pointer'\r\n  }\r\n  // routes to full task details page on double click\r\n  const taskDetails =  {\r\n    onClick: (e, row, rowIndex) => \r\n    { \r\n      history.push(`/dashboard/task/view-task/`+ row.taskID)\r\n    }\r\n  };\r\n\r\n  // If the task list is been fetched from the server or not mounted on the ui, show the loader \r\n  if(isFetching){\r\n    return(\r\n        <>\r\n            <Loader />\r\n        </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      \r\n      <Table\r\n        keyField='id'\r\n        title=\"Pending Tasks\"\r\n        data={ usersTasksByStatus }\r\n        columns={taskHeader}\r\n        bordered= { false }\r\n        selectRow = { selectRow }\r\n        enableSearch = { true }\r\n        pagination = { paginationFactory() }\r\n        // controlHeader = { navigate }\r\n        rowEvents = { taskDetails }\r\n        noDataIndication={'No available task'}\r\n        filter={ filterFactory() }\r\n        rowStyle={ rowStyle }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst taskHeader = [\r\n  {\r\n    dataField: 'taskName',\r\n    text: 'Title',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'endDate',\r\n    text: 'Due Date',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'documentsAttached',\r\n    text: 'Attachment',\r\n    formatter: (cell, row) => {\r\n      if(!cell){\r\n      return(\r\n        <i class=\"fa fa-paperclip\" />\r\n      )}\r\n    },\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n];\r\n\r\nexport default PendingTasks;","import React, { useEffect, useState } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { getTasks } from '../../../../actions/task/taskAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Loader\r\nimport Loader from '../../../loader/Loader';\r\nimport { formatDate } from '../../../../_helper/dateFormatter';\r\n\r\n\r\n// Set the departments component state\r\nconst handleFormatDate = (selectedDepartmentTaskSheet) =>{\r\n  const formatedTaskSheet = selectedDepartmentTaskSheet.map((taskRecord)=> {\r\n    taskRecord.endDate = formatDate(taskRecord.endDate) \r\n    return taskRecord\r\n  })\r\n  return formatedTaskSheet\r\n}\r\n\r\nconst AllTasks = () => {\r\n\r\n  const { tasks, isFetching } = useSelector(state => state.tasks)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(getTasks())\r\n    console.log(tasks.taskStatus)\r\n  }, [tasks.taskStatus, dispatch])\r\n\r\n  // adds checkbox to each row\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    headerColumnStyle: { backgroundColor: 'transparent' }\r\n  };\r\n  // styles each row\r\n  const rowStyle = {\r\n    cursor: 'pointer'\r\n  }\r\n\r\n  // routes to full task details page on double click\r\n  const taskDetails =  {\r\n    onClick: (e, row, rowIndex) =>\r\n    {\r\n        history.push(`/dashboard/task/view-task/`+ row.taskID)\r\n    }\r\n  };\r\n\r\n  \r\n  // If the task list is been fetched from the server or not mounted on the ui, show the loader \r\n  if(isFetching){\r\n    return(\r\n        <>\r\n            <Loader />\r\n        </>\r\n    )\r\n  }\r\n\r\n  const taskss = [\r\n    {\r\n      taskName: 'sss'\r\n    }\r\n  ]\r\n  return (\r\n    <div >\r\n      \r\n      <Table\r\n        keyField='id'\r\n        title=\"Task Inbox\"\r\n        data={ handleFormatDate(tasks) }\r\n        columns={taskHeader}\r\n        bordered= { false }\r\n        selectRow = {selectRow}\r\n        enableSearch = { true }\r\n        pagination = { paginationFactory() }\r\n        // controlHeader = { navigate }\r\n        rowEvents = { taskDetails }\r\n        noDataIndication={'No available task'}\r\n        filter={ filterFactory() }\r\n        rowStyle={ rowStyle }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst taskHeader = [\r\n\r\n  {\r\n    dataField: 'taskName',\r\n    text: 'Title',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'endDate',\r\n    text: 'Due Date',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'documentsAttached',\r\n    text: 'Attachment',\r\n    formatter: (cell, row) => {\r\n      if(!cell){\r\n      return(\r\n        <i class=\"fa fa-paperclip\" />\r\n      )}\r\n    },\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'taskStatus',\r\n    text: 'Status',\r\n    headerAttrs: {\r\n      hidden:true\r\n    },\r\n    formatter: (cell, row) => {\r\n      if(cell){\r\n      // return(\r\n        switch (cell) {\r\n          case 1:\r\n              return (\r\n               <>\r\n                <i> pending </i>\r\n               </>\r\n              ) \r\n          case 2:\r\n              return (\r\n              <i> accepted </i>\r\n             )\r\n          case 3:\r\n              return ( \r\n                <i> completed </i>\r\n                )\r\n          case 4:\r\n              return ( \r\n                <i> overdue </i>\r\n                )\r\n          default: \r\n              break;\r\n      }\r\n      // )\r\n    }\r\n    }\r\n  },\r\n];\r\n\r\n\r\nconst navigate = <>\r\n<div className=\"btn-group\">\r\n<a data-toggle=\"dropdown\" href=\"/\" className=\"btn mini all\">\r\nAll\r\n  <i className=\"fa fa-angle-down ml-1\" />\r\n</a>\r\n<ul className=\"dropdown-menu\">\r\n  <li className=\"\">\r\n    <NavLink exact to=\"/dashboard/task/accepted-tasks\" className=\"sidebar-link text-muted\" activeClassName=\"active\">\r\n      <i className=\"mr-3 text-gray\"/><span>Accepted</span>\r\n    </NavLink>\r\n  </li>\r\n  <li className=\"\">\r\n    <NavLink exact to=\"/dashboard/task/assigned-tasks\" className=\"sidebar-link text-muted\" activeClassName=\"active\">\r\n      <i className=\"mr-3 text-gray\"/><span>Assigned</span>\r\n    </NavLink>\r\n  </li>\r\n  <li className=\"\">\r\n    <NavLink exact to=\"/dashboard/task/pending-tasks\" className=\"sidebar-link text-muted\" activeClassName=\"active\">\r\n      <i className=\"mr-3 text-gray\"/><span>Pending</span>\r\n    </NavLink>\r\n  </li>\r\n</ul>\r\n</div>\r\n<div className=\"btn-group\">\r\n<a data-toggle=\"dropdown\" href=\"#\" className=\"btn mini blue\">\r\nMore\r\n  <i className=\"fa fa-angle-down ml-1\" />\r\n</a>\r\n<ul className=\"dropdown-menu\">\r\n  <li><a href=\"#\"><i className=\"fa fa-pencil\" /> Mark as Read</a></li>\r\n  <li><a href=\"#\"><i className=\"fa fa-ban\" /> Spam</a></li>\r\n  <li className=\"divider\" />\r\n  <li><a href=\"#\"><i className=\"fa fa-trash-o\" /> Delete</a></li>\r\n</ul>                           \r\n</div>\r\n</>\r\n\r\n\r\n\r\nexport default AllTasks;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { updateTaskStatus } from '../../../actions/task/taskAction';\r\nimport { deleteAssignedTask } from '../../../actions/task/assignedTaskAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCompanyEmployees } from '../../../actions/employee/employeeAction';\r\n\r\n// import { connect } from 'react-redux';\r\n\r\nimport Button from '../../layouts/Button';\r\n\r\nimport unclebay from '../../pages/pages-images/ayodele_samuel_adebayo.jpg';\r\nimport attachment from '../../pages/pages-images/v.jpg';\r\nimport { FETCH_TASK_DETAILS_API_URL } from '../../../services/root-endpoints';\r\nimport { authHeader, currentUserFromLocalStorage } from '../../../services/auth-header';\r\nimport axios from 'axios';\r\nimport { formatDate } from '../../../_helper/dateFormatter';\r\nimport Loader from '../../loader/Loader';\r\nimport { currentUserRoleID } from \"../../../services/auth-header\";\r\nimport { taskStatusUpdated } from '../../../toaster';\r\n\r\n\r\nconst TaskDetails = () => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const [taskDetails, setTaskDetails] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { employees } = useSelector(state => state.employees)\r\n  const [assignedUser, setAssignedUser] = useState({});\r\n  const [taskStatusName, setTaskStatusName] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch company employees\r\n      dispatch(getCompanyEmployees())               \r\n  },[dispatch]);\r\n    \r\n  useEffect(() => {\r\n      // Fetch the task details from the server\r\n      const fetchTaskDetails = async() =>{\r\n        const response = await axios.get(FETCH_TASK_DETAILS_API_URL + params.id, { headers: authHeader })\r\n        setTaskDetails(response.data.data[0])\r\n        setIsLoading(false)\r\n        if(currentUserRoleID !== 5 ){\r\n          const findAssignedEmployee = employees.filter((employee)=>employee.staffID === response.data.data[0].assignedID)\r\n          setAssignedUser(findAssignedEmployee[0])\r\n          setIsLoading(false)\r\n        }            \r\n      }\r\n      // Function call\r\n      fetchTaskDetails()\r\n  },[params.id, employees]);\r\n\r\n  useEffect(() => {\r\n    switch (taskDetails.taskStatus) {\r\n      case 1:\r\n        setTaskStatusName(' Accept')\r\n        break;\r\n      case 2:\r\n        setTaskStatusName(' Submit')\r\n        break;\r\n      case 3:\r\n        setTaskStatusName(' Completed')\r\n        break;\r\n      case 4:\r\n        setTaskStatusName(' Overdue')\r\n        break;\r\n      default:\r\n        setTaskStatusName('Error');\r\n        break;\r\n    }\r\n  }, [taskDetails.taskStatus])\r\n\r\n  const handleTaskStatus = () =>{\r\n    dispatch(updateTaskStatus(updateTaskDetails))\r\n    .then((response)=>{\r\n      taskStatusUpdated()\r\n      window.location.reload()\r\n\r\n      console.log(response)\r\n    })\r\n\r\n  }\r\n  \r\n  const updateTaskDetails = {\r\n    assignedID: taskDetails.assignedID,\r\n    staffID: taskDetails.staffID,\r\n    taskID: taskDetails.taskID,\r\n    // check if the status is already upto 5\r\n    taskStatus: taskDetails.taskStatus <= 2 ? taskDetails.taskStatus + 1 : taskDetails.taskStatus\r\n  }\r\n\r\n\r\n  // if(assignedUser === undefined){ // If the assignedUser details is not fetched keep loading\r\n    if(isLoading){ // If the assignedUser details is not fetched keep loading\r\n    return(\r\n        <>\r\n          <Loader />\r\n        </>\r\n      )\r\n  }\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <section className=\"py-0\">\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col-lg-12 mb-1 compose-task task-util\">\r\n                <div className=\"card\">\r\n                  <div className=\"py-3\">\r\n                  <header className=\"card-header wht-bg\">\r\n                    <h4 className=\"d-flex justify-content-between task-page-lead\">\r\n                      {/* { taskDetails.taskName } */}\r\n                      {/* View Task */}\r\n                      \r\n                    </h4>\r\n                  </header>\r\n                  </div>\r\n                  <div className=\"card-body py-1\">\r\n                    <div className= \"pt-3\">\r\n                      <div className=\"mail-header row\">\r\n                        <div className=\"col-md-8\">\r\n                          <h4 className=\"float-left task-title\">{taskDetails.taskName}</h4>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <div className=\"compose-btn-wrapper\">\r\n                            {\r\n                              currentUserRoleID === 5 ? (\r\n                                <>\r\n                                  <Button \r\n                                    type=\"submit\"\r\n                                    label={taskStatusName}\r\n                                    icon=\"fa fa-check\"\r\n                                    className=\"btn btn-theme btn-sm\"\r\n                                    onClick={(()=>handleTaskStatus(updateTaskDetails))}\r\n                                    />\r\n                                  {/* <Button \r\n                                    type=\"submit\"\r\n                                    label=\" Request\"\r\n                                    className=\"btn btn-sm mx-2 special\"\r\n                                    />                                      */}\r\n                                  <Button \r\n                                    type=\"submit\"\r\n                                    label=\" Delete\"\r\n                                    icon=\"fa fa-trash-alt\"\r\n                                    className=\"btn btn-sm special pace-bg-accent mx-2\"\r\n                                    onClick={(()=>dispatch(deleteAssignedTask(taskDetails.staffID)))}\r\n                                    // onClick={(()=>dispatch(deleteTask(taskDetails.taskID)))}\r\n                                  />          \r\n                                </>\r\n                              )\r\n                              :\r\n                              (\r\n                                <>\r\n                                  <Button \r\n                                    type=\"submit\"\r\n                                    label=\" Delete\"\r\n                                    icon=\"fa fa-trash-alt\"\r\n                                    className=\"btn btn-sm special pace-bg-accent\"\r\n                                    onClick={(()=>dispatch(deleteAssignedTask(taskDetails.staffID)))}\r\n                                    // onClick={(()=>dispatch(deleteTask(taskDetails.taskID)))}\r\n                                  />          \r\n                                </>\r\n                              )\r\n                            }\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <hr />\r\n                        <div className=\"mail-sender\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                              {\r\n                                currentUserRoleID === 5 ? (\r\n                                  <>\r\n                                    <img src={unclebay} alt=\"sender profile\" className=\"sender-image mr-2\"/>\r\n                                    <strong>Admin</strong>\r\n                                    <span className=\"\"> </span> to\r\n                                    <strong> {currentUserFromLocalStorage.email} </strong>\r\n\r\n                                  </>\r\n                                )\r\n                                :\r\n                                (\r\n                                  <>\r\n                                    <img src={unclebay} alt=\"sender profile\" className=\"sender-image mr-2\"/>\r\n                                    <strong>Me</strong>\r\n                                    <span className=\"\"> </span> to\r\n                                    <strong> {assignedUser.email} </strong>\r\n                                  </>\r\n                                )\r\n                              }\r\n                              \r\n                            </div>\r\n                            {/* due date */}\r\n                            <div className=\"col-md-4\">\r\n                              <p className=\"date float-right mr-2\"> {formatDate(taskDetails.dateCreated)} </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      <hr />\r\n                      {/* TASK DESCRIPTION */}\r\n                      <div className=\"view-mail\">\r\n                       <p> {taskDetails.taskDescription} </p>\r\n                      </div>\r\n                      <div className=\"attachment-mail d-none\">\r\n                        <p>\r\n                          <span><i className=\"fa fa-paperclip\" /> 2 attachments — </span>\r\n                          <NavLink exact to=\"/dashboard/task/\">\r\n                            Download all attachments\r\n                          </NavLink> \r\n                          <span className=\"mx-1\"> | </span> \r\n                          <NavLink exact to=\"/dashboard/task/\">\r\n                            View all images\r\n                          </NavLink>\r\n                          {/* <a href=\"#\">Download all attachments</a> |\r\n                          <a href=\"#\">View all images</a> */}\r\n                        </p>\r\n                        <ul className=\"attachment-wrapper d-flex\">\r\n                          <li>\r\n                            <NavLink exact to=\"/dashboard/task/\" className=\"attachment-thumb mr-5\">\r\n                              <img src={attachment} alt=\"attachment\"/>\r\n                            </NavLink>\r\n                            <div className=\"links\">\r\n                              <NavLink exact to=\"/dashboard/task/\">\r\n                                View\r\n                              </NavLink>\r\n                              <span> - </span> \r\n                              <NavLink exact to=\"/dashboard/task/\">\r\n                                Download\r\n                              </NavLink>\r\n                            </div>\r\n                          </li>\r\n                          <li>\r\n                            <NavLink exact to=\"/dashboard/task/\" className=\"attachment-thumb\">\r\n                              <img src={attachment} alt=\"attachment\"/>\r\n                            </NavLink>\r\n                            <div className=\"links\">\r\n                              <NavLink exact to=\"/dashboard/task/\">\r\n                                View\r\n                              </NavLink>\r\n                              <span> - </span> \r\n                              <NavLink exact to=\"/dashboard/task/\">\r\n                                Download\r\n                              </NavLink>\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      {/* <div className=\"form-group d-flex justify-content-start\"> */}\r\n                        {/* <div className=\"compose-btn float-left my-4\">\r\n                          {\r\n                            taskDetails.taskStatus === 2 ? (\r\n                              <>\r\n\r\n                                <Button \r\n                                  type=\"button\"\r\n                                  icon=\"fa fa-check\"\r\n                                  label=\"Completed\"\r\n                                  className=\"btn btn-theme btn-sm\"\r\n                                  onClick={(()=>dispatch(updateTaskStatus(updateTaskDetails)))}\r\n                                />                                   \r\n\r\n                              </>\r\n                            )\r\n                            :\r\n                            \"\"\r\n                          } */}\r\n                          {/* <Button \r\n                            type=\"submit\"\r\n                            label=\" Request\"\r\n                            className=\"btn btn-sm special mx-2\"\r\n                          />    \r\n                          <Button \r\n                            type=\"submit\"\r\n                            label=\" Delete\"\r\n                            icon=\"fa fa-trash-alt\"\r\n                            className=\"btn btn-sm special pace-bg-accent\"\r\n                            onClick={(()=>(deleteAssignedTask(taskDetails.staffID)))}\r\n                            onClick={(()=>(deleteTask(taskDetails.staffID)))}\r\n                          /> */}\r\n                        {/* </div> */}\r\n                      {/* </div>   */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </section>           \r\n      </>\r\n    )\r\n  }\r\n\r\nexport default TaskDetails;","import React, { Component } from 'react';\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\n\r\n\r\nconst taskHeader = [\r\n  {\r\n    dataField: 'id',\r\n    text: 'S/N'\r\n  },\r\n  {\r\n    dataField: 'task',\r\n    text: 'Task',\r\n  },\r\n  {\r\n    dataField: 'dueDate',\r\n    text: 'Due Date',\r\n  },\r\n  {\r\n    dataField: 'status',\r\n    text: 'status',\r\n  },\r\n  {\r\n    dataField: 'requests',\r\n    text: 'Requests',\r\n  },\r\n    \r\n  {\r\n  \r\n    formatter: (cellContent, row) => {\r\n      return (\r\n        <>\r\n        <button\r\n          className=\"btn btn-danger btn-xs mr-3\"\r\n          onClick={(e) => handleDelete(row)} \r\n        >\r\n          Delete\r\n        </button>\r\n        <button\r\n          className=\"btn btn-danger btn-xs\"\r\n          onClick={(e) => handleDelete(row)} \r\n        >\r\n          Delete\r\n        </button>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n\r\n];\r\n\r\n\r\nconst acceptedTasks = [\r\n    {\r\n      id: '1',\r\n      task: 'testing',\r\n      dueDate: '12/06/21',\r\n      status: 'accept',\r\n      requests: 'requested'\r\n    },\r\n    {\r\n      id: '2',\r\n      task: 'testing2',\r\n      dueDate: '14/06/21',\r\n      status: 'accept',\r\n      requests: 'requested'\r\n    },\r\n    {\r\n      id: '3',\r\n      task: 'testing3',\r\n      dueDate: '16/06/21',\r\n      status: 'accept',\r\n      requests: 'requested'\r\n    },\r\n    {\r\n      id: '4',\r\n      task: 'testing3',\r\n      dueDate: '16/06/21',\r\n      status: 'accept',\r\n      requests: 'requested'\r\n    },\r\n    {\r\n      id: '5',\r\n      task: 'testing3',\r\n      dueDate: '16/06/21',\r\n      status: 'accept',\r\n      requests: 'requested'\r\n    },\r\n    {\r\n      id: '6',\r\n      task: 'testing3',\r\n      dueDate: '16/06/21',\r\n      status: 'accept',\r\n      requests: 'requested'\r\n    },\r\n    {\r\n      id: '7',\r\n      task: 'testing3',\r\n      dueDate: '16/06/21',\r\n      status: 'accept',\r\n      requests: 'requested'\r\n    },\r\n    {\r\n      id: '8',\r\n      task: 'testing3',\r\n      dueDate: '16/06/21',\r\n      status: 'accept',\r\n      requests: 'requested'\r\n    },\r\n    {\r\n      id: '9',\r\n      task: 'testing3',\r\n      dueDate: '16/06/21',\r\n      status: 'accept',\r\n      requests: 'requested'\r\n    },\r\n    {\r\n      id: '10',\r\n      task: 'testing3',\r\n      dueDate: '16/06/21',\r\n      status: 'accept',\r\n      requests: 'requested'\r\n    },\r\n    {\r\n      id: '11',\r\n      task: 'testing111',\r\n      dueDate: '16/06/21',\r\n      status: 'accept',\r\n      requests: 'requested'\r\n    },\r\n  ]\r\n\r\n\r\nfunction handleDelete(rowId){\r\n  console.log(rowId);\r\n};\r\n\r\n\r\nclass EmployeeTasks extends Component {\r\n  render() {\r\n    return (\r\n        // <div className=\"container-fluid px-xl-5\">\r\n          <Table\r\n            keyField='id'\r\n            title=\"Assigned Task\"\r\n            data={acceptedTasks}\r\n            columns={taskHeader}\r\n            bordered= { false }\r\n            pagination = { paginationFactory() }\r\n          />\r\n        // </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EmployeeTasks;","import React from 'react';\r\nimport unclebay from '../../../pages/pages-images/ayodele_samuel_adebayo.jpg';\r\nimport attachment from '../../../pages/pages-images/v.jpg';\r\n\r\nexport default function Sample() {\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"col task-util\">\r\n        <section className=\"card\">\r\n          <header className=\"card-header wht-bg\">\r\n            <h4 className=\"d-flex justify-content-between task-page-lead\">\r\n              View Task\r\n              <form action=\"#\" className=\"float-right mail-src-position\">\r\n                <div className=\"input-append\">\r\n                  <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search Mail\" />\r\n                </div>\r\n              </form>\r\n            </h4>\r\n          </header>\r\n          <div className=\"card-body\">\r\n            <div className=\"mail-header row\">\r\n              <div className=\"col-md-8\">\r\n                <h4 className=\"float-left task-title\">Build a new landing page</h4>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"compose-btn float-right\">\r\n                  <a href=\"mail_compose.html\" className=\"btn btn-sm btn-theme\"><i className=\"fa fa-reply\" /> Reply</a>\r\n                  <button className=\"btn  btn-sm tooltips\" data-original-title=\"Print\" type=\"button\" data-toggle=\"tooltip\" data-placement=\"top\" title><i className=\"fa fa-print\" /> </button>\r\n                  <button className=\"btn btn-sm tooltips\" data-original-title=\"Trash\" data-toggle=\"tooltip\" data-placement=\"top\" title><i className=\"fa fa-trash\" /></button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mail-sender\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                  <img src={unclebay} alt=\"sender\" className=\"sender-image mr-2\"/>\r\n                  <strong>Zac Doe</strong>\r\n                  <span>[zac@youremail.com]</span> to\r\n                  <strong>me</strong>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <p className=\"date float-right mr-2\"> 10:15AM 02 FEB 2014</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n              <hr />\r\n            <div className=\"view-mail\">\r\n              <p>As he bent his head in his most courtly manner, there was a secrecy in his smiling face, and he conveyed an air of mystery to those words, which struck the eyes and ears of his nephew forcibly. At the same time, the thin straight lines\r\n                of the setting of the eyes, and the thin straight lips, and the markings in the nose, curved with a sarcasm that looked handsomely diabolic. </p>\r\n              <p>\"Yes,\" repeated the Marquis. \"A Doctor with a daughter. Yes. So commences the new philosophy! You are fatigued. Good night!\"</p>\r\n              <p>It would have been of as much avail to interrogate any stone face outside the chateau as to interrogate that face of his. The nephew looked at him, in vain, in passing on to the door. </p>\r\n              <p>\"Good night!\" said the uncle. \"I look to the pleasure of seeing you again in the morning. Good repose! Light Monsieur my nephew to his chamber there!--And burn Monsieur my nephew in his bed, if you will,\" he added to himself, before\r\n                he rang his little bell again, and summoned his valet to his own bedroom.</p>\r\n            </div>\r\n            <div className=\"attachment-mail \">\r\n              <p>\r\n                <span><i className=\"fa fa-paperclip\" /> 2 attachments — </span>\r\n                <a href=\"#\">Download all attachments</a> |\r\n                <a href=\"#\">View all images</a>\r\n              </p>\r\n              <ul className=\"attachment-wrapper d-flex\">\r\n                <li>\r\n                  <a className=\"attachment-thumb mr-3\" href=\"#\">\r\n                    <img src={attachment} />\r\n                  </a>\r\n                  {/* <a className=\"name\" href=\"#\">\r\n                    IMG_001.jpg\r\n                    <span>20KB</span>\r\n                  </a> */}\r\n                  <div className=\"links\">\r\n                    <a href=\"#\">View</a> -\r\n                    <a href=\"#\">Download</a>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <a className=\"attachment-thumb\" href=\"#\">\r\n                    <img src={attachment} />\r\n                  </a>\r\n                  {/* <a className=\"name\" href=\"#\">\r\n                    IMG_001.jpg\r\n                    <span>20KB</span>\r\n                  </a> */}\r\n                  <div className=\"links\">\r\n                    <a href=\"#\">View</a> -\r\n                    <a href=\"#\">Download</a>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"compose-btn float-left\">\r\n              <a href=\"mail_compose.html\" className=\"btn btn-sm btn-theme\"><i className=\"fa fa-reply\"/> Reply</a>\r\n              <button className=\"btn btn-sm \"><i className=\"fa fa-arrow-right\" /> Forward</button>\r\n              <button className=\"btn  btn-sm tooltips\" data-original-title=\"Print\" type=\"button\" data-toggle=\"tooltip\" data-placement=\"top\" title><i className=\"fa fa-print\" /> </button>\r\n              <button className=\"btn btn-sm tooltips\" data-original-title=\"Trash\" data-toggle=\"tooltip\" data-placement=\"top\" title><i className=\"fa fa-trash-o\" /></button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SampleCompose() {\r\n    return (\r\n        <div>\r\n            <div className=\"\">\r\n                <div className=\"col task-util compose-task\">\r\n                    <section className=\"card\">\r\n                        <header className=\"card-header wht-bg\">\r\n                            <h4 className=\"gen-case\">\r\n                                Assign Task\r\n                            </h4>\r\n                        </header>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"compose-btn-wrapper\">\r\n                                <button className=\"btn btn-theme btn-sm\"><i className=\"fa fa-check\" /> Send</button>\r\n                                <button className=\"btn btn-sm special ml-2 mr-2\"><i className=\"fa fa-times\" /> Discard</button>\r\n                                <button className=\"btn btn-sm special\">Draft</button>\r\n                            </div>\r\n                            <div >\r\n                            <form role=\"form-horizontal\" method=\"post\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"to\" className=\"\">To:</label>\r\n                                    <input type=\"text\" id=\"to\" className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"subject\">Subject:</label>\r\n                                    <input type=\"text\" id=\"subject\" className=\"form-control\" />\r\n                                </div>\r\n                                <div className=\"compose-btn\">\r\n                                    <label htmlFor=\"subject\" className>Task description:</label>\r\n                                    <textarea className=\"form-control\" rows={4} defaultValue={\"\"} />\r\n                                    <div className=\"mt-3\">\r\n                                        <div>\r\n                                            <p>Due Date</p>\r\n                                            <input type=\"datetime-local\" className=\"form-control\"/>\r\n                                        </div>\r\n                                        <div className=\"mt-3\">\r\n                                            <p>Attachment</p>\r\n                                            <input type=\"file\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"compose-btn mt-4\">\r\n                                    <button className=\"btn btn-theme btn-sm\"><i className=\"fa fa-check\" /> Send</button>\r\n                                    <button className=\"btn btn-sm special ml-2 mr-2\"><i className=\"fa fa-times\" /> Discard</button>\r\n                                    <button className=\"btn btn-sm special\">Draft</button>\r\n                                </div>\r\n                            </form>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TaskInboxSample() {\r\n    return (\r\n        <>\r\n            <div className=\"\">\r\n                <section className=\"card\">\r\n                    <header className=\"card-header wht-bg\">\r\n                        <h4 className=\"gen-case\">\r\n                            Inbox (3)\r\n                            <form action=\"#\" className=\"float-right mail-src-position\">\r\n                                <div className=\"input-append\">\r\n                                    <input type=\"text\" className=\"form-control \" placeholder=\"Search Mail\" />\r\n                                </div>\r\n                                </form>\r\n                            </h4>\r\n                            </header>\r\n                            <div className=\"card-body minimal\">\r\n                            <div className=\"mail-option\">\r\n                                <div className=\"chk-all\">\r\n                                <div className=\"float-left mail-checkbox\">\r\n                                    <input type=\"checkbox\" className />\r\n                                </div>\r\n                                <div className=\"btn-group\">\r\n                                    <a data-toggle=\"dropdown\" href=\".\" className=\"btn mini all\">\r\n                                    All\r\n                                    <i className=\"fa fa-angle-down \" />\r\n                                    </a>\r\n                                    <ul className=\"dropdown-menu\">\r\n                                    <li><a href=\".\"> None</a></li>\r\n                                    <li><a href=\".\"> Read</a></li>\r\n                                    <li><a href=\".\"> Unread</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"btn-group\">\r\n                                <a data-original-title=\"Refresh\" data-placement=\"top\" data-toggle=\"dropdown\" href=\".\" className=\"btn mini tooltips\">\r\n                                    <i className=\" fa fa-refresh\" />\r\n                                </a>\r\n                                </div>\r\n                                <div className=\"btn-group hidden-phone\">\r\n                                <a data-toggle=\"dropdown\" href=\".\" className=\"btn mini blue\">\r\n                                    More\r\n                                    <i className=\"fa fa-angle-down \" />\r\n                                </a>\r\n                                <ul className=\"dropdown-menu\">\r\n                                    <li><a href=\".\"><i className=\"fa fa-pencil\" /> Mark as Read</a></li>\r\n                                    <li><a href=\".\"><i className=\"fa fa-ban\" /> Spam</a></li>\r\n                                    <li className=\"divider\" />\r\n                                    <li><a href=\".\"><i className=\"fa fa-trash-o\" /> Delete</a></li>\r\n                                </ul>\r\n                                </div>\r\n                                <div className=\"btn-group\">\r\n                                <a data-toggle=\"dropdown\" href=\".\" className=\"btn mini blue\">\r\n                                    Move to\r\n                                    <i className=\"fa fa-angle-down \" />\r\n                                </a>\r\n                                <ul className=\"dropdown-menu\">\r\n                                    <li><a href=\".\"><i className=\"fa fa-pencil\" /> Mark as Read</a></li>\r\n                                    <li><a href=\".\"><i className=\"fa fa-ban\" /> Spam</a></li>\r\n                                    <li className=\"divider\" />\r\n                                    <li><a href=\".\"><i className=\"fa fa-trash-o\" /> Delete</a></li>\r\n                                </ul>\r\n                                </div>\r\n                                <ul className=\"unstyled inbox-pagination\">\r\n                                <li><span>1-50 of 99</span></li>\r\n                                <li>\r\n                                    <a className=\"np-btn\" href=\".\"><i className=\"fa fa-angle-left  pagination-left\" /></a>\r\n                                </li>\r\n                                <li>\r\n                                    <a className=\"np-btn\" href=\".\"><i className=\"fa fa-angle-right pagination-right\" /></a>\r\n                                </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"table-inbox-wrap \">\r\n                                <table className=\"table table-inbox table-hover\">\r\n                                <tbody>\r\n                                    <tr className=\"unread\">\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star\" /></td>\r\n                                    <td className=\"view-message  dont-show\"><a href=\"mail_view.html\">Google Inc.</a></td>\r\n                                    <td className=\"view-message \"><a href=\"mail_view.html\">Your new account is ready.</a></td>\r\n                                    <td className=\"view-message  inbox-small-cells\"><i className=\"fa fa-paperclip\" /></td>\r\n                                    <td className=\"view-message  text-right\">08:10 AM</td>\r\n                                    </tr>\r\n                                    <tr className=\"unread\">\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star\" /></td>\r\n                                    <td className=\"view-message dont-show\"><a href=\"mail_view.html\">Mark Thompson</a></td>\r\n                                    <td className=\"view-message\"><a href=\"mail_view.html\">Last project updates</a></td>\r\n                                    <td className=\"view-message inbox-small-cells\" />\r\n                                    <td className=\"view-message text-right\">March 15</td>\r\n                                    </tr>\r\n                                    <tr className=\"unread\">\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star\" /></td>\r\n                                    <td className=\"view-message dont-show\"><a href=\"mail_view.html\">Wonder Corp.</a></td>\r\n                                    <td className=\"view-message\"><a href=\"mail_view.html\">Thanks for your registration</a></td>\r\n                                    <td className=\"view-message inbox-small-cells\" />\r\n                                    <td className=\"view-message text-right\">March 15</td>\r\n                                    </tr>\r\n                                    <tr className>\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star\" /></td>\r\n                                    <td className=\"view-message dont-show\"><a href=\"mail_view.html\">Facebook</a></td>\r\n                                    <td className=\"view-message\"><a href=\"mail_view.html\">New Friendship Request</a></td>\r\n                                    <td className=\"view-message inbox-small-cells\" />\r\n                                    <td className=\"view-message text-right\">March 13</td>\r\n                                    </tr>\r\n                                    <tr className>\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star inbox-started\" /></td>\r\n                                    <td className=\"view-message dont-show\"><a href=\"mail_view.html\">Mark Webber <span className=\"label label-danger float-right\">urgent</span></a></td>\r\n                                    <td className=\"view-message\"><a href=\"mail_view.html\">The server is down</a></td>\r\n                                    <td className=\"view-message inbox-small-cells\" />\r\n                                    <td className=\"view-message text-right\">March 09</td>\r\n                                    </tr>\r\n                                    <tr className>\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star inbox-started\" /></td>\r\n                                    <td className=\"view-message dont-show\"><a href=\"mail_view.html\">Facebook</a></td>\r\n                                    <td className=\"view-message\"><a href=\"mail_view.html\">New message from Patrick S.</a></td>\r\n                                    <td className=\"view-message inbox-small-cells\"><i className=\"fa fa-paperclip\" /></td>\r\n                                    <td className=\"view-message text-right\">March 08</td>\r\n                                    </tr>\r\n                                    <tr className>\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star inbox-started\" /></td>\r\n                                    <td className=\"view-message dont-show\">Paypal inc.</td>\r\n                                    <td className=\"view-message\">New payment received</td>\r\n                                    <td className=\"view-message inbox-small-cells\"><i className=\"fa fa-paperclip\" /></td>\r\n                                    <td className=\"view-message text-right\">March 04</td>\r\n                                    </tr>\r\n                                    <tr className>\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star\" /></td>\r\n                                    <td className=\"view-message dont-show\">Andrea <span className=\"label label-success float-right\">girlfriend</span></td>\r\n                                    <td className=\"view-message view-message\">Weekend plans</td>\r\n                                    <td className=\"view-message inbox-small-cells\" />\r\n                                    <td className=\"view-message text-right\">March 04</td>\r\n                                    </tr>\r\n                                    <tr className>\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star\" /></td>\r\n                                    <td className=\"view-message dont-show\">David Green</td>\r\n                                    <td className=\"view-message view-message\">Soccer tickets</td>\r\n                                    <td className=\"view-message inbox-small-cells\" />\r\n                                    <td className=\"view-message text-right\">February 22</td>\r\n                                    </tr>\r\n                                    <tr className>\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star\" /></td>\r\n                                    <td className=\"view-message dont-show\">Evelyn <span className=\"label label-info float-right\">family</span></td>\r\n                                    <td className=\"view-message view-message\">Surprise party</td>\r\n                                    <td className=\"view-message inbox-small-cells\" />\r\n                                    <td className=\"view-message text-right\">February 19</td>\r\n                                    </tr>\r\n                                    <tr className>\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star inbox-started\" /></td>\r\n                                    <td className=\"view-message dont-show\">Martin Moore</td>\r\n                                    <td className=\"view-message\">Hey mate!</td>\r\n                                    <td className=\"view-message inbox-small-cells\" />\r\n                                    <td className=\"view-message text-right\">February 17</td>\r\n                                    </tr>\r\n                                    <tr className>\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star inbox-started\" /></td>\r\n                                    <td className=\"dont-show\">Facebook</td>\r\n                                    <td className=\"view-message\">Paul published on your wall</td>\r\n                                    <td className=\"view-message inbox-small-cells\"><i className=\"fa fa-paperclip\" /></td>\r\n                                    <td className=\"view-message text-right\">February 14</td>\r\n                                    </tr>\r\n                                    <tr className>\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star\" /></td>\r\n                                    <td className=\"view-message dont-show\">Steve Stoll</td>\r\n                                    <td className=\"view-message\">Update developed</td>\r\n                                    <td className=\"view-message inbox-small-cells\"><i className=\"fa fa-paperclip\" /></td>\r\n                                    <td className=\"view-message text-right\">February 11</td>\r\n                                    </tr>\r\n                                    <tr className>\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star\" /></td>\r\n                                    <td className=\"dont-show\">Laura Anton</td>\r\n                                    <td className=\"view-message view-message\">New subscription</td>\r\n                                    <td className=\"view-message inbox-small-cells\" />\r\n                                    <td className=\"view-message text-right\">January 14</td>\r\n                                    </tr>\r\n                                    <tr className>\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star\" /></td>\r\n                                    <td className=\"view-message dont-show\">Ryanair</td>\r\n                                    <td className=\"view-message\">Your flight tickets</td>\r\n                                    <td className=\"view-message inbox-small-cells\" />\r\n                                    <td className=\"view-message text-right\">January 07</td>\r\n                                    </tr>\r\n                                    <tr className>\r\n                                    <td className=\"inbox-small-cells\">\r\n                                        <input type=\"checkbox\" className=\"mail-checkbox\" />\r\n                                    </td>\r\n                                    <td className=\"inbox-small-cells\"><i className=\"fa fa-star\" /></td>\r\n                                    <td className=\"view-message dont-show\">Twitter</td>\r\n                                    <td className=\"view-message\">Password reset</td>\r\n                                    <td className=\"view-message inbox-small-cells\" />\r\n                                    <td className=\"view-message text-right\">January 04</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport TaskSidebar from '../layouts/TaskSidebar';\r\nimport DraftTask from './DraftTask';\r\nimport AcceptedTasks from './employeeTasks/AcceptedTasks';\r\nimport AssignedTasks from './employeeTasks/AssignedTasks';\r\nimport PendingTasks from './employeeTasks/PendingTasks';\r\nimport AllTasks from './employeeTasks/AllTasks';\r\nimport TaskDetails from './TaskDetails';\r\nimport EmployeeTasks from './employeeTasks/EmployeeTasks';\r\nimport Sample from './employeeTasks/Sample';\r\nimport Button from '../../layouts/Button';\r\nimport SampleCompose from './employeeTasks/SampleCompose';\r\nimport TaskInboxSample from './employeeTasks/TaskInboxSample';\r\n\r\nclass Task extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"py-5\">\r\n        <section className=\"row mb-4\">\r\n          \r\n          {/* SIDEBAR COMPONENT START */}\r\n          <div className=\"col-lg-3 mb-4\">\r\n            <TaskSidebar/>\r\n          </div>\r\n          {/* SIDEBAR COMPONENT ENDS */}\r\n          \r\n          {/* MAIN START */}\r\n          <div className=\"col-lg-9\">\r\n            <section className=\"\">\r\n              <Switch>\r\n                {/* uncomment the routes to see the samples, sorry for the stress */}\r\n                <Route exact path=\"/dashboard/task/view-task/:id\" component={TaskDetails} />\r\n                <Route exact path=\"/dashboard/task/draft-task\" component={DraftTask } />\r\n                <Route exact path=\"/dashboard/task/all-tasks\" component={AllTasks} />\r\n                <Route exact path=\"/dashboard/task/accepted-tasks\" component={AcceptedTasks} />\r\n                <Route exact path=\"/dashboard/task/pending-tasks\" component={PendingTasks} />\r\n                <Route exact path=\"/dashboard/task/assigned-tasks\" component={AssignedTasks} />\r\n                <Route exact path=\"/dashboard/task/pending-tasks\" component={PendingTasks} />\r\n                <Route exact path=\"/dashboard/task/draft-taskk\" component={SampleCompose} />\r\n                <Route exact path=\"/dashboard/task/all-task\" component={TaskInboxSample} />\r\n                <Route exact path=\"/dashboard/task/view-taskk\" component={Sample} />\r\n              </Switch>\r\n                {/* <Sample /> */}\r\n                {/* <DraftTask /> */}\r\n                {/* <AcceptedTasks /> */}\r\n                {/* <EmployeeTasks /> */}\r\n            </section>\r\n          </div>\r\n          {/* MAIN ENDS */}\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","// This file only communicate to the backend \r\n\r\n// Axios\r\nimport axios from \"axios\";\r\nimport { authHeader, currentUserStaffID } from \"./auth-header\";\r\n\r\n// API\r\n\r\nimport { TODO_API_URL } from \"./root-endpoints\";\r\n\r\n// Function to fetch todo from the server and dispatch actions based on response\r\nconst fetchTodos = () => {\r\n        return axios.get(`${ TODO_API_URL }` , {headers: authHeader})\r\n}\r\n\r\n// Add new Todo to server\r\nconst addTodo = (data) => {\r\n\r\n    // If user doesn't set a dueDate, set the current day\r\n    if(typeof data.dueDate === 'number'){\r\n        data = {\r\n            title: data.title,\r\n            dueDate: new Date()\r\n        }\r\n        return axios.post(TODO_API_URL, data, {headers: authHeader})\r\n    }\r\n    return axios.post(TODO_API_URL, data, {headers: authHeader})\r\n    // return axios.post(TODO_API_URL, data)\r\n}\r\n\r\n// Delete target todo from server\r\nconst deleteTodo = (id) => {\r\n     axios.delete( TODO_API_URL + id, {headers: authHeader})\r\n}\r\n\r\n// Update target todo from the server\r\nconst updateTodo = (id) => {\r\n    axios.put( TODO_API_URL + id, {headers: authHeader})\r\n}\r\n\r\n\r\nconst TodoService = {\r\n    fetchTodos,\r\n    addTodo,\r\n    deleteTodo,\r\n    updateTodo\r\n};\r\n\r\nexport default TodoService","// React\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Layouts\r\nimport Button from '../../../layouts/Button';\r\n\r\n// Actions & Reducers\r\n// import fetchTodoFunction from '../../../../reducers/todo/todoApi';\r\n// import TodoService from '../../../../services/todo.service';\r\nimport { getTodos, deleteTodo, toggleTodoCompletion } from '../../../../actions/todo/todoAction';\r\n\r\nconst formatDate = ( date )=>{\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    // Convert Current Day to Day, Month date, year format\r\n    const dueDate = new Date(date).toLocaleDateString(\"en-US\", options);\r\n    return dueDate;\r\n}\r\n\r\n\r\nconst TodoRows = () => {\r\n\r\n    // Destructure todos from the todoReducer from store\r\n    const { todos, pending } = useSelector((state)=>state.todos)\r\n    const dispatch = useDispatch()\r\n\r\n    // Invoke fetchTodos function to fetch todos from server\r\n    useEffect(() => {\r\n        dispatch(getTodos())\r\n    }, [dispatch]);\r\n    if(pending){\r\n        return(\r\n            <div className=\"d-flex justify-content-center align-items-center\" style={{height:'360px', background: '#cccccc'}}>\r\n                <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\" style={{fontSize: \"23px\"}}></i>\r\n                <span>Loading... Please wait</span>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n        {\r\n            todos.map(({toDoID, title, completed, dueDate}, index)=>{\r\n                return(\r\n                    <li className=\"list-group-item\" key={index}>\r\n                        <div className={`todo-indicator ${ completed ? 'bg-primary' : 'bg-warning' }`} />\r\n                            <div className=\"widget-content p-0\">\r\n                                <div className=\"widget-content-wrapper\">\r\n                                <div className=\"widget-content-left mr-2\">\r\n                                    <div className=\"custom-checkbox custom-control\">\r\n                                        <input className=\"custom-control-input\" id={toDoID} type=\"checkbox\" />\r\n                                        <label className=\"custom-control-label\" htmlFor={toDoID}>&nbsp;</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"widget-content-left\">\r\n                                    <div className=\"widget-heading\">\r\n                                        { title }\r\n                                        {/* <div className={`badge ${completed ? 'badge-success': 'badge-primary'} ml-2`}>\r\n                                            { completed ? 'Completed' : 'Pending' }\r\n                                        </div> */}\r\n                                    </div>\r\n                                    <div className=\"widget-subheading\">\r\n                                        <i>Due Date { formatDate(dueDate) }</i>\r\n                                        {/* <div className=\"badge badge-pill badge-info ml-2\"></div> */}\r\n                                        <div className={` badge badge-pill ml-2 ${completed ? 'badge-success': 'badge-danger'}`}>\r\n                                            { completed ? 'Completed' : 'Pending' }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"widget-content-right\">\r\n                                    <Button \r\n                                        className={` border-0 btn-transition btn todo-btn  { ${ completed ? \"pending-icon\" : \"completed-icon\"}`}\r\n                                        icon={`${completed ? \"fa fa-sync-alt\" : \"fa fa-check\"}`}\r\n                                        onClick={(()=>dispatch(toggleTodoCompletion(toDoID)))}\r\n                                    />\r\n                                    <Button \r\n                                        className=\"border-0 btn-transition btn todo-btn text-red\"\r\n                                        icon=\"fa fa-trash-alt\"\r\n                                        onClick={(()=>dispatch(deleteTodo(toDoID)))}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>  \r\n                )\r\n            })\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TodoRows;\r\n","import TodoService from \"../../services/todo.service\"\r\nimport { \r\n    FETCH_TODOS_PENDING, \r\n    FETCH_TODOS_SUCCESS, \r\n    FETCH_TODOS_ERROR, \r\n    UPDATE_TODO, \r\n    ADD_TODO, \r\n    DELETE_TODO,\r\n    TOGGLE_TODO_COMPLETE,\r\n    OPEN_TODO_FORM,\r\n    CLOSE_TODO_FORM\r\n } from \"../types\";\r\n\r\n\r\n// Fetch todos\r\nconst getTodos = () => ( dispatch ) =>{\r\n    dispatch({type: FETCH_TODOS_PENDING})\r\n    return TodoService.fetchTodos()\r\n    .then((response) => {\r\n        console.log('todoooooo', response)\r\n        console.closeTodoForm(response)\r\n        dispatch({ type: FETCH_TODOS_SUCCESS, payload: response.data })\r\n        return response.data;          \r\n    })\r\n    .catch((error)=>dispatch({ type: FETCH_TODOS_ERROR, payload: error }))\r\n}\r\n\r\n// Open Todo Form\r\nconst openTodoForm = () =>{\r\n    return{\r\n        type: OPEN_TODO_FORM\r\n    }\r\n}\r\n\r\n// Close Todo Form\r\nconst closeTodoForm = () =>{\r\n    return{\r\n        type: CLOSE_TODO_FORM\r\n    }\r\n}\r\n\r\n\r\n// Add new Todo\r\nconst addTodo = (newTodo) => (dispatch) =>{\r\n    dispatch({ type: ADD_TODO, payload: newTodo })\r\n    return TodoService.addTodo(newTodo)\r\n    .then((response) =>{\r\n        // dispatch({\r\n        //     type: ADD_TODO,\r\n        //     payload: response.data\r\n        // })\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n    })\r\n}\r\n\r\n\r\n// Delete Todo\r\nconst deleteTodo = (id) => (dispatch) =>{\r\n    dispatch({ type: DELETE_TODO, payload: id }) // Update the UI even when error occurs, since server will retain the undeleted item\r\n    return TodoService.deleteTodo(id)\r\n}\r\n\r\n\r\n// Edit Todo\r\nconst updateTodo = (id) => (dispatch) =>{\r\n    dispatch({ type: UPDATE_TODO, payload: id })\r\n}\r\n\r\n// Toggle todo completion\r\nconst toggleTodoCompletion = (id) =>{\r\n    return{\r\n        type: TOGGLE_TODO_COMPLETE,\r\n        payload: id\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    getTodos,\r\n    openTodoForm,\r\n    closeTodoForm,\r\n    addTodo,\r\n    toggleTodoCompletion,\r\n    deleteTodo,\r\n    updateTodo,\r\n}","// React \r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Action\r\nimport { closeTodoForm, addTodo } from '../../../../actions/todo/todoAction';\r\n\r\n// Layout\r\nimport Button from '../../../layouts/Button';\r\nimport { TextInput } from '../../../layouts/FormInput';\r\n\r\n// Formik\r\nimport { TodoListSchema } from '../../../Validation/Schema';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\n\r\n// Toaster\r\nimport { invalidTodoTitle } from '../../../../toaster/index';\r\n\r\n\r\n\r\n\r\nconst TodoForm = () =>{\r\n    const { isTodoFormOpen } = useSelector((state)=> state.todos);\r\n    const dispatch = useDispatch()\r\n    \r\n    return (\r\n        <>\r\n            <div  className='form-popup' id={`${isTodoFormOpen ? 'show-form' : \"hide-form\"  }`}>\r\n                <Formik\r\n                    initialValues = {\r\n                        {\r\n                            title: '',\r\n                            dueDate: Date.now(),\r\n                        }\r\n                    }\r\n                    onSubmit={(values, action)=>{\r\n                        setTimeout(() => {\r\n                            dispatch(addTodo(values))\r\n                            action.resetForm({\r\n                                title: '',\r\n                                dueDate: Date.now()\r\n                            })\r\n                        }, 2000);\r\n                        \r\n                    }}\r\n                    validationSchema = {TodoListSchema}\r\n                >{({ \r\n                    errors,\r\n                    touched, \r\n                    handleSubmit,\r\n                    isSubmitting\r\n                 })=>(\r\n              \r\n                    <Form\r\n                        className=\"todo-form-container\" \r\n                        onSubmit={ handleSubmit }\r\n                    >\r\n                        <label className=\"bg-primary d-flex justify-content-between align-items-center p-2 text-white\">\r\n                            <b>TODO</b>\r\n                            <i className=\"fa fa-times form-popdown-btn\" onClick={(()=>dispatch(closeTodoForm()))}></i>\r\n                        </label>\r\n                        <section className=\"todo-form-wrapper\">\r\n                            <label htmlFor=\"title\"><b>Title</b></label>\r\n                            <TextInput \r\n                                type=\"text\"\r\n                                placeholder=\"Enter Todo\" \r\n                                name=\"title\"\r\n                                className={` form-control ${ touched.title && errors.title ? \"is-invalid\" : \" \" }`}\r\n                            />\r\n                            <ErrorMessage\r\n                                component=\"span\"\r\n                                name=\"title\"\r\n                                className=\"invalid-feedback mb-2\"\r\n                            />\r\n\r\n                            <label htmlFor=\"dueDate\"><b>Due Date </b></label>\r\n                            <TextInput \r\n                                type=\"datetime-local\"\r\n                                placeholder=\"Enter Due Date\" \r\n                                name=\"dueDate\"\r\n                                className={` form-control ${ touched.dueDate && errors.dueDate ? \"is-invalid\" : \" \" }`}\r\n\r\n                            />\r\n\r\n                            <ErrorMessage\r\n                                component=\"span\"\r\n                                name=\"dueDate\"\r\n                                className=\"invalid-feedback mb-2\"\r\n                            />\r\n\r\n                            <div className=\"d-flex\">\r\n                            {\r\n                                isSubmitting ? \r\n                                    <Button\r\n                                        disabled={isSubmitting}\r\n                                        icon = \"fas fa-circle-notch fa-spin\"\r\n                                        className=\"btn pace-btn-primary mr-2\"\r\n                                    \r\n                                    />\r\n                                :\r\n                                    <Button \r\n                                        type=\"submit\"\r\n                                        label=\"Add\"\r\n                                        className=\"btn pace-btn-primary mr-2\"\r\n                                    />\r\n                            }\r\n                            \r\n                            {/* <Button \r\n                                type=\"button\"\r\n                                label=\"Clear\"\r\n                                className=\"btn pace-btn-accent ml-2\"\r\n                            /> */}\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n                    </Form>\r\n                    \r\n                )}\r\n\r\n                </Formik>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoForm;\r\n","// React\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Layouts\r\nimport TodoRows from './TodoRows';\r\nimport TodoForm from './TodoForm';\r\n\r\n// Actions\r\nimport { getTodos, openTodoForm } from '../../../../actions/todo/todoAction';\r\nimport { netWorkError } from '../../../../toaster';\r\n\r\nconst Todo = () => {\r\n    const { error } = useSelector(state => state.todos);\r\n    const dispatch = useDispatch();\r\n        // dispatch(getTodos())\r\n    // useEffect(() => {\r\n        // console.log('MOUNTED')\r\n        if(error){\r\n            netWorkError()\r\n        }\r\n    // }, [error])\r\n    return (\r\n        <>\r\n          <div className=\"todo-container container\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card-hover-shadow-2x mb-3 card\">\r\n                        <div className=\"card-header-tab card-header\">\r\n                            <div className=\"card-header-title font-size-lg text-capitalize font-weight-normal\">\r\n                                <i className=\"fa fa-Todos\" />&nbsp;What do you want to do today?</div>\r\n                        </div>\r\n                        <div className=\"scroll-area-sm -shiftToDisabled\">\r\n                            <perfect-scrollbar className=\"ps-show-limits\">\r\n                            <div style={{position: 'static'}} className=\"ps ps--active-y\">\r\n                                <div className=\"ps-content\">\r\n                                <ul className=\" list-group list-group-flush\">\r\n                                    <TodoRows />\r\n                                </ul>\r\n                                </div>\r\n                            </div>\r\n                            </perfect-scrollbar>\r\n                        </div>\r\n                        <div className=\"d-block text-right card-footer\">\r\n                            {/* <button className=\"mr-2 btn btn-link btn-sm\">Cancel</button> */}\r\n                            <TodoForm />\r\n                        <button className=\"btn btn-primary\" onClick={(()=>dispatch(openTodoForm()))}>Add Todo</button></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport { useSelector } from 'react-redux';\r\nimport { TextInput } from '../../../layouts/FormInput';\r\n\r\nconst calc = 2;\r\n\r\nconst Header = [\r\n  {\r\n    dataField: 'id',\r\n    text: 'S/N'\r\n  },\r\n  {\r\n    dataField: 'firstname',\r\n    text: 'Firstname',\r\n  },\r\n  {\r\n    dataField: 'lastname',\r\n    text: 'Lastname',\r\n  },\r\n  {\r\n    dataField: 'department',\r\n    text: 'Department',\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Role',\r\n  },\r\n  {\r\n    dataField: 'workedHour',\r\n    text: 'Worked Hour',\r\n  },\r\n  {\r\n    dataField: 'workedHour',\r\n    text: 'Receivable',\r\n  },\r\n    \r\n  {\r\n  \r\n    formatter: (cellContent, row) => {\r\n      return (\r\n        <>\r\n            <tr></tr>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n\r\n];\r\n\r\n\r\n// function handleDelete(rowId){\r\n//   console.log(rowId);\r\n// };\r\n\r\n\r\nconst BillingReport = () => {\r\n    const usersDetails = useSelector(state => state.timerReport)  \r\n    // this.handleCalculate = this.handleCalculate.bind(this)\r\n    const handleCalculate = () =>{\r\n        return(\r\n            console.log(usersDetails)\r\n            // alert(usersDetails)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid py-5\">\r\n          <Table\r\n            keyField='id'\r\n            title=\"Billing Report\"\r\n            data={usersDetails}\r\n            columns={Header}\r\n            bordered= { false }\r\n            pagination = { paginationFactory() }\r\n            customInput = { true }\r\n            customInputName = \"expectedWorkHour\"\r\n            customInputPlaceHolder = \"Expected WorkHour\"\r\n            customButtonType=\"button\"\r\n            customButtonLabel=\"Calculate\"\r\n            customButtonFunction={handleCalculate()}\r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillingReport;","import React from 'react';\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst Header = [\r\n  {\r\n    dataField: 'id',\r\n    text: 'S/N'\r\n  },\r\n  {\r\n    dataField: 'firstname',\r\n    text: 'Firstname',\r\n  },\r\n  {\r\n    dataField: 'lastname',\r\n    text: 'Lastname',\r\n  },\r\n  {\r\n    dataField: 'department',\r\n    text: 'Department',\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Role',\r\n  },\r\n  {\r\n    dataField: 'workedHour',\r\n    text: 'Worked Hour',\r\n  },\r\n  {\r\n    dataField: 'completedTask',\r\n    text: 'Completed Task',\r\n  },\r\n    \r\n//   {\r\n  \r\n//     formatter: (cellContent, row) => {\r\n//       return (\r\n//         <>\r\n//         <button\r\n//           className=\"btn btn-danger btn-xs mr-3\"\r\n//           onClick={(e) => handleDelete(row)} \r\n//         >\r\n//           Delete\r\n//         </button>\r\n//         <button\r\n//           className=\"btn btn-danger btn-xs\"\r\n//           onClick={(e) => handleDelete(row)} \r\n//         >\r\n//           Delete\r\n//         </button>\r\n//         </>\r\n//       );\r\n//     },\r\n//   },\r\n\r\n];\r\n\r\n\r\n// function handleDelete(rowId){\r\n//   console.log(rowId);\r\n// };\r\n\r\n\r\nconst TimerReport = () => {\r\n    const usersDetails = useSelector(state => state.timerReport)  \r\n    return (\r\n        <div className=\"container-fluid py-5\">\r\n          <Table\r\n            keyField='id'\r\n            title=\"Timer Report\"\r\n            data={usersDetails}\r\n            columns={Header}\r\n            bordered= { false }\r\n            pagination = { paginationFactory() }\r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimerReport;","// React\r\nimport { ErrorMessage, Form, Formik,Field } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Button from '../../layouts/Button';\r\nimport { TextInput } from '../../layouts/FormInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCompanyEmployees, updateEmployeeBillingAndWorkHour } from '../../../actions/employee/employeeAction';\r\nimport { getDepartment } from '../../../actions/company/department/departmentAction';\r\nimport Loader from '../../loader/Loader';\r\nimport { profileUpdateCompletedLogger, profileUpdateFailLogger } from '../../../toaster';\r\n\r\n\r\nconst employeeDetailsDropDown = {\r\n    employeeRole: [\r\n        {\r\n            roleName: 'Super-Admin',\r\n            roleID: 1\r\n        },\r\n        {\r\n            roleName: 'Co-Admin',\r\n            roleID: 3\r\n        },\r\n        {\r\n            roleName: 'Internal-Admin',\r\n            roleID: 4\r\n        },\r\n        {\r\n            roleName: 'Employee',\r\n            roleID: 5\r\n        }\r\n\r\n    ],\r\n}\r\nconst availableRole = employeeDetailsDropDown.employeeRole.map(({roleName, roleID}, index)=><option value={roleID} key={index}>{roleName}</option>);\r\n\r\nconst UpdateEmployeeProfile = () =>{\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    // const [staffID, setStaffID] = useState('');\r\n\r\n    const { employees, isFetching } = useSelector(state => state.employees);\r\n    const { departments } = useSelector(state => state.departments)\r\n    const dispatch = useDispatch();\r\n    const [employeeProfile, setEmployeeProfile] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        address: '',\r\n        userName: '',\r\n    })\r\n    \r\n    \r\n    const companyDepartmentDropDown = departments.map(({departmentName, departmentID}, index)=><option value={departmentID} key={index}>{departmentName}</option>)\r\n    useEffect(() => {\r\n        // Fetch company employess\r\n        dispatch(getCompanyEmployees())\r\n\r\n        // Fetch company department\r\n        dispatch(getDepartment())\r\n    }, [dispatch])\r\n    useEffect(() => {\r\n        const getEmployeeProfile = employees.filter((employee)=>employee.staffID === parseInt(params.id))\r\n        if(getEmployeeProfile.length > 0){\r\n                setEmployeeProfile(getEmployeeProfile[0])\r\n                const {\r\n                    // firstName,\r\n                    // lastName,\r\n                    // phoneNumber,\r\n                    // email,\r\n                    // address,\r\n                    // userName,\r\n                    billRateCharge,\r\n                    expectedWorkHours,\r\n                    // staffRole,\r\n                    // roleID,\r\n                    // departmentID\r\n                } = getEmployeeProfile[0]\r\n            \r\n                // Set the destructure user information into the profile state (ES6 syntax)\r\n                setEmployeeProfile({\r\n                    // firstName,\r\n                    // lastName,\r\n                    // phoneNumber,\r\n                    // email,\r\n                    // address,\r\n                    // userName,\r\n                    billRateCharge,\r\n                    expectedWorkHours,\r\n                    // staffRole,\r\n                    // roleID,\r\n                    // departmentID\r\n                })\r\n            }else{\r\n                \r\n            }\r\n        }, [employees, params.id])\r\n        if(employeeProfile === undefined){\r\n            return(\r\n                <>\r\n                    <Loader  />\r\n                </>\r\n            )\r\n        }\r\n    return ( \r\n        <>\r\n            <div className=\"container\">\r\n                {/* Breadcrumb */}\r\n                <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb mt-2\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to='/dashboard/employee-list' className=\"text-grey\">\r\n                                        Employee List\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to={`/dashboard/employee/profile/${params.id}`} className=\"text-grey\">\r\n                                        Profile\r\n                                </Link>\r\n                            </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Edit Profile</li>\r\n                        </ol>\r\n                    </nav>\r\n                    \r\n                    {/* /Breadcrumb */}\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"main-body\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                                <Formik\r\n                                    initialValues = {employeeProfile}\r\n                                    enableReinitialize\r\n                                    // validationSchema={UpdateEmployeeProfileSchema}\r\n                                    onSubmit={(values, action)=>{\r\n                                        dispatch(updateEmployeeBillingAndWorkHour(values, action, params.id))\r\n                                        // .then((response)=> history.push('/dashboard/employee/profile/'))\r\n                                        .then((response)=> history.goBack())\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    { (({ values, touched, errors, handleSubmit, isSubmitting, resetForm })=>{\r\n                                        return <Form onSubmit={handleSubmit}>\r\n                                            <div className=\"mb-5 text-gray\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n                                                <h5>Update {employeeProfile.firstName} {employeeProfile.lastName} Billable</h5>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* FIRST NAME */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">First Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        placeholder=\"Enter Firstname\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.firstName && errors.firstName ? \"is-invalid\" : \"\"}`} \r\n                                                        readOnly\r\n\r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"firstName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* LAST NAME */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Last Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"lastName\"\r\n                                                        placeholder=\"Enter lastname\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.lastName && errors.lastName ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"lastName\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"lastName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* USERNAME */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Username</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"userName\"\r\n                                                        placeholder=\"Enter username\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.userName && errors.userName ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"userName\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"userName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n                                            \r\n                                            {/* EXPECTED WORK HOUR */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Expected Work Hour</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"expectedWorkHours\"\r\n                                                        placeholder=\"Enter expectedWorkHours\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.expectedWorkHours && errors.expectedWorkHours ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"expectedWorkHours\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"expectedWorkHours\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* BILL RATE CHARGE */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Bill Rate Charge</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"billRateCharge\"\r\n                                                        placeholder=\"Enter Bill Rate Charge\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.billRateCharge && errors.billRateCharge ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"billRateCharge\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"billRateCharge\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* PHONE NUMBER */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Phone Number</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"phone\"\r\n                                                        placeholder=\"Enter Phone Number\"\r\n                                                        type=\"tel\" \r\n                                                        className={`form-control ${touched.phone && errors.phone ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"phone\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"phone\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* EMAIL ADDRESS */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Email Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"email\"\r\n                                                        placeholder=\"Enter Valid Email Address\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.email && errors.email ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"email\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"email\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* CREATE PASSWORD */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">New Password</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"password\"\r\n                                                        placeholder=\"New Password\"\r\n                                                        type=\"password\" \r\n                                                        className={`form-control ${ touched.password && errors.password ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"password\"\r\n                                                        readOnly\r\n                                                        autoComplete=\"on\"\r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"password\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* CONFIRM PASSWORD */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Confirm Password</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"password2\"\r\n                                                        placeholder=\"Confirm Password\"\r\n                                                        type=\"password\" \r\n                                                        className={`form-control ${ touched.password2 && errors.password2 ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"password2\"\r\n                                                        readOnly\r\n                                                        autoComplete=\"on\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"password2\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* ADDRESS */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"address\"\r\n                                                        id=\"address\"\r\n                                                        type=\"text\" \r\n                                                        placeholder=\"143 work and connect\"\r\n                                                        className={`form-control ${touched.address && errors.address ? \"is-invalid\" : \"\"}`}\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"address\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* Role */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Role</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <Field component=\"select\" name=\"roleID\" className=\"form-control\"\r\n                                                        readOnly\r\n                                                    >\r\n                                                        <option selected>Choose...</option>\r\n                                                        {availableRole}\r\n                                                    </Field>\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"roleID\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n\r\n\r\n                                            {/* EMPLOYEE POSITION */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Position</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"staffRole\"\r\n                                                        placeholder=\"Enter Position\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.staffRole && errors.staffRole ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"staffRole\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"staffRole\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n                                           \r\n                                            {/* DEPARTMENT */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Department</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <Field component=\"select\" name=\"departmentID\" className=\"form-control\"\r\n                                                        readOnly\r\n                                                    >\r\n                                                        <option selected>Choose...</option>\r\n                                                        {companyDepartmentDropDown}\r\n                                                    </Field>\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"departmentID\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n                                            \r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Updating</span>) : \"Update\"}\r\n                                                    className=\"btn pace-btn-primary\" \r\n                                                />\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    className=\"btn pace-btn-accent d-none\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Please wait...</span>) : \"Reset\"}\r\n                                                    onClick={(()=>resetForm())} \r\n                                                />\r\n                                            </div>\r\n                                        </Form>\r\n                                    })\r\n                                }\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateEmployeeProfile;\r\n","import axios from \"axios\"\r\nimport { currentUserCompanyID, authHeader } from \"../auth-header\"\r\nimport { UPDATE_COMPANY_PROFILE_API } from \"../root-endpoints\"\r\n\r\n\r\n\r\nexport const updateCompanyProfile = async(newCompanyProfile) =>{\r\n    return await axios.put(UPDATE_COMPANY_PROFILE_API + currentUserCompanyID, newCompanyProfile, { headers: authHeader } )\r\n    .then((response)=>console.log('from company', response))\r\n}\r\n\r\n\r\nconst CompanyService = {\r\n    updateCompanyProfile,\r\n}\r\n\r\nexport default CompanyService;","// React\r\nimport axios from 'axios';\r\nimport { ErrorMessage, Form, Formik,Field } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Button from '../../layouts/Button';\r\nimport { TextInput } from '../../layouts/FormInput';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { authHeader, currentUserCompanyID } from '../../../services/auth-header';\r\nimport { FETCH_COMPANY_PROFILE_API } from '../../../services/root-endpoints';\r\nimport CompanyService from '../../../services/company/company-service';\r\n\r\nconst UpdateCompanyProfile = () =>{\r\n    const params = useParams();\r\n    const dispatch = useDispatch()\r\n    // const { currentUser } = useSelector(state => state.authenticationState)\r\n    // const [ staffID, setStaffID ] = useState('')\r\n    const [companyProfile, setCompanyProfile] = useState({\r\n        companyName: '',\r\n        companyType: '',\r\n        companyAdjective: '',\r\n        email: '',\r\n        currency: '',\r\n    })\r\n    useEffect(() => {\r\n        const fetchCompanyProfile = async() =>{\r\n           const { data } = await axios.get(FETCH_COMPANY_PROFILE_API + currentUserCompanyID, { headers: authHeader })\r\n           setCompanyProfile(data.data[0])\r\n        }\r\n\r\n        fetchCompanyProfile()\r\n        \r\n    }, [])\r\n\r\n    return ( \r\n        <>\r\n            <div className=\"container\">\r\n                {/* Breadcrumb */}\r\n                <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb mt-2 ml-4\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to='/dashboard/company/settings' className=\"text-grey\">\r\n                                        Settings\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to={`/dashboard/company/profile/${2}`} className=\"text-grey\">\r\n                                        Company Profile\r\n                                </Link>\r\n                            </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Edit Company Profile</li>\r\n                        </ol>\r\n                    </nav>\r\n                    \r\n                    {/* /Breadcrumb */}\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"main-body\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                                <Formik\r\n                                    initialValues = {companyProfile}\r\n                                    enableReinitialize\r\n                                    // validationSchema={UpdateCompanyProfileSchema}\r\n                                    onSubmit={(values, action)=>{\r\n                                        CompanyService.updateCompanyProfile(values, action)\r\n                                        .then(()=>alert('kkk'))\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    { (({ values, touched, errors, handleSubmit, isSubmitting, resetForm })=>{\r\n                                        return <Form onSubmit={handleSubmit}>\r\n                                            <div className=\"mb-5 text-gray\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n                                                <h5>EDIT COMPANY PROFILE</h5>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* COMPANY NAME */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Company Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"companyName\"\r\n                                                        id=\"companyName\"\r\n                                                        placeholder=\"Update Company Name\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.companyName && errors.companyName ? \"is-invalid\" : \"\"}`} \r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"companyName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                             {/* COMPANY TYPE */}\r\n                                             <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Company Type</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"companyType\"\r\n                                                        id=\"companyType\"\r\n                                                        placeholder=\"Update Company Type\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.companyType && errors.companyType ? \"is-invalid\" : \"\"}`} \r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"companyType\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                            \r\n                                             {/* COMPANY CURRENCY */}\r\n                                             <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Currency</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"currency\"\r\n                                                        id=\"currency\"\r\n                                                        placeholder=\"Update Company Currency\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.currency && errors.currency ? \"is-invalid\" : \"\"}`} \r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"currency\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                             {/* COMPANY ADJECTIVE */}\r\n                                             <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Company Adjective</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"companyAdjective\"\r\n                                                        id=\"companyAdjective\"\r\n                                                        placeholder=\"Update Company Adjective\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.companyAdjective && errors.companyAdjective ? \"is-invalid\" : \"\"}`} \r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"companyAdjective\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* EMAIL ADDRESS */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Email Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"email\"\r\n                                                        placeholder=\"Enter Valid Email Address\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.email && errors.email ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"email\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"email\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Updating...</span>) : \"Update\"}\r\n                                                    className=\"btn pace-btn-primary\" \r\n                                                />\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    className=\"btn pace-btn-accent d-none\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Please wait...</span>) : \"Reset\"}\r\n                                                    onClick={(()=>resetForm())} \r\n                                                />\r\n                                            </div>\r\n                                        </Form>\r\n                                    })\r\n                                }\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateCompanyProfile;\r\n","// React\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n\r\n// Components\r\nimport Button from '../../layouts/Button';\r\nimport Loader from '../../loader/Loader';\r\n\r\n// Auth Header\r\nimport { authHeader, currentUserCompanyID } from '../../../services/auth-header';\r\n\r\n//  Actions\r\nimport { FETCH_COMPANY_PROFILE_API } from '../../../services/root-endpoints';\r\n\r\n// Helper function\r\nimport { formatDate } from '../../../_helper/dateFormatter';\r\n\r\n\r\n\r\nconst ProfileRow = (props) => {\r\n    \r\n    const { title, label } = props\r\n    return(\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-3\">\r\n                <h6 className=\"mb-0\">{title}</h6>\r\n                </div>\r\n                <div className=\"col-sm-9 text-secondary\">\r\n                    {label}\r\n                </div>\r\n            </div>\r\n            <hr />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Profile = () =>{\r\n    const params = useParams();\r\n    const [companyProfile, setCompanyProfile] = useState({});\r\n  \r\n    useEffect(() => {\r\n        const fetchCompanyProfile = async () =>{\r\n            axios.get(FETCH_COMPANY_PROFILE_API + currentUserCompanyID, { headers: authHeader })\r\n            .then((response)=>setCompanyProfile(response.data.data[0]))\r\n            .catch((error)=>console.log(error))\r\n        }\r\n        fetchCompanyProfile()\r\n    }, [])\r\n    console.log(companyProfile);\r\n    if(companyProfile === undefined){\r\n        return(\r\n            <>\r\n                <Loader />\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"main-body\">\r\n                    {/* Breadcrumb */}\r\n                    <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb mt-2 ml-4\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to='/dashboard/company/settings' className=\"text-grey\">\r\n                                        Settings\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                                Company Profile\r\n                            </li>\r\n                        </ol>\r\n                    </nav>\r\n                    \r\n                    {/* /Breadcrumb */}\r\n                    <div className=\"row gutters-sm mt-3\">\r\n                        <div className=\"col-md-12 ml-2\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <ProfileRow title=\"Company Name\" label= {companyProfile.companyName} />\r\n                                    <ProfileRow title=\"Email\" label={companyProfile.email} />\r\n                                    <ProfileRow title=\"Currency\" label={companyProfile.currency}/>\r\n                                    <ProfileRow title=\"Company Type\" label={companyProfile.companyType} />\r\n                                    <ProfileRow title=\"Company Adjective\" label={companyProfile.companyAdjective} />\r\n                                    <ProfileRow title=\"Created Date\" label={formatDate(companyProfile.dateCreated)} />\r\n                                    <Link to={`/dashboard/company/profile/update/${companyProfile.companyID}`}>\r\n                                        <Button className=\"btn btn-primary mr-2\" label=\"Edit\"/>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../../layouts/Button';\r\n\r\nconst Settings = () =>{\r\n    return(\r\n        <>\r\n\r\n            <div className=\"container py-5\">\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"main-body\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                                <div  className=\"d-flex flex-md-row align-items-center justify-content-center flex-column\">\r\n                                    {/* ADD NEW DEPARTMENT BUTTON */}\r\n                                    <div className=\"p-3 col-9 col-md-4\">\r\n                                        <Link to=\"/dashboard/company/settings/departments\">\r\n                                            <Button to=\"/\" \r\n                                                className=\"btn btn-sm btn-primary\"\r\n                                                label=\"Add New Department\"\r\n                                                />\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                                    {/* VIEW COMPANY PROFILE BUTTON */}\r\n                                    <div className=\"p-3 col-9 col-md-4\">\r\n                                        <Link to=\"/dashboard/company/profile/1\">\r\n                                            <Button to=\"/\" \r\n                                                className=\"btn btn-sm btn-theme\"\r\n                                                label=\"View Company Profile\"\r\n                                                />\r\n                                        </Link>\r\n                                    </div>\r\n                                    {/* UPDATE COMPANY PROFILE BUTTON */}\r\n                                    <div className=\"p-3 col-10 col-md-4 ml-3\">\r\n                                        <Link to=\"/dashboard/company/profile/update/1\">\r\n                                            <Button to=\"/\" \r\n                                                className=\"btn btn-sm pace-btn-accent\"\r\n                                                label=\"Update Company Profile\"\r\n                                                />\r\n                                        </Link>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>    \r\n    )\r\n}\r\n\r\n\r\nexport default Settings;","export const fontFamily = `-apple-system, BlinkMacSystemFont,\r\n    'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\r\n    'Helvetical Neue', sans-serif;`;\r\n\r\nexport const headingSizes = [\r\n  \"2rem\",\r\n  \"1.5rem\",\r\n  \"1.25rem\",\r\n  \"1rem\",\r\n  \".875rem\",\r\n  \".75rem\"\r\n];\r\n\r\nexport const themeColors = {\r\n  dark: \"#1c8f9e\",\r\n  light: \"#5cb7b7\",\r\n  black: \"#2d2323\"\r\n};\r\n","import styled from \"styled-components\";\r\nimport { fontFamily, themeColors } from \"../config/settings\";\r\n\r\nexport default styled.p`\r\n  font-family: ${fontFamily};\r\n  margin: 0;\r\n  color: ${props =>\r\n    props.color\r\n      ? themeColors[props.color] ? themeColors[props.color] : props.color\r\n      : themeColors.black};\r\n  line-height: 1.5;\r\n  font-size: ${props => (props.size ? props.size : \"inherit\")};\r\n`;\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { fontFamily, themeColors } from \"../config/settings\";\r\n\r\n// from http://codepen.io/lbebber/pen/ypgql?editors=0100\r\nconst steps = 20;\r\nconst rnd = () => Math.floor(Math.random() * 100);\r\nconst doPercAndValue = (a, i) => ({\r\n  perc: `${i * (100 / steps)}%`,\r\n  value: `clip: rect(${rnd()}px, 9999px, ${rnd()}px, 0)`\r\n});\r\n\r\nconst doKeyframes = () =>\r\n  Array(steps).fill(null).map(doPercAndValue).reduce((acc, next) => {\r\n    return `${acc}\r\n${next.perc} {\r\n  ${next.value}\r\n}`;\r\n  }, \"\");\r\n\r\nconst anim = keyframes`${doKeyframes()}`;\r\nconst anim2 = keyframes`${doKeyframes()}`;\r\n\r\nexport default styled.div`\r\n  font-size: 3em;\r\n  position: relative;\r\n  font-family: ${fontFamily}\r\n  \r\n  &:after {\r\n    content: attr(data-glitch);\r\n    position: absolute;\r\n    left: 2px;\r\n    text-shadow: -1px 0 red;\r\n    top: 0;\r\n    color: white;\r\n    background: black;\r\n    overflow: hidden;\r\n    clip: rect(0, 900px, 0, 0);\r\n    animation: ${anim} 2s infinite linear alternate-reverse;\r\n  }\r\n  \r\n  &:before {\r\n    content: attr(data-glitch);\r\n    position: absolute;\r\n    left: -2px;\r\n    text-shadow: 1px 0 blue;\r\n    top: 0;\r\n    color: white;\r\n    background: black;\r\n    overflow: hidden;\r\n    clip: rect(0, 900px, 0, 0);\r\n    animation: ${anim2} 3s infinite linear alternate-reverse;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { themeColors } from \"../config/settings\";\r\n\r\n\r\nexport default styled.span`\r\n  position: relative;\r\n  color: ${themeColors.dark};\r\n  cursor: pointer;\r\n  \r\n  &:after {\r\n    content: attr(data-tooltip);\r\n    position: absolute;\r\n    transition: .3s;\r\n    background-color: ${themeColors.dark};\r\n    color: white;\r\n    left: 0;\r\n    bottom: 100%;\r\n    box-shadow: 0 .5em 3em rgba(255,255,255,.3);\r\n    opacity: 0;\r\n    padding: .2em .5em;\r\n    border-radius: 2px;\r\n    font-size: .7em;\r\n  }\r\n  \r\n  &:hover:after {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { fontFamily, headingSizes, themeColors } from \"../config/settings\";\r\n\r\nconst styles = `\r\n  border: 0;\r\n  border-radius: 4px;\r\n  outline: 0;\r\n  color: white;\r\n  padding: .5em 1em;\r\n  font-family: ${fontFamily};\r\n  margin-left: .25em;\r\n  margin-right: .25em;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    opacity: .9;\r\n  }\r\n`;\r\nconst Button = styled.button`${styles}`;\r\nconst Link = styled.a`${styles}`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  font-size: ${props => (props.h ? headingSizes[props.h - 1] : \"inherit\")};\r\n  background-color: ${props => themeColors[props.color] || themeColors.dark};\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  font-size: ${props => (props.h ? headingSizes[props.h - 1] : \"inherit\")};\r\n  background: ${props => (props.bg ? themeColors[props.bg] : \"none\")};\r\n  color: ${props =>\r\n    props.bg\r\n      ? \"white\"\r\n      : props.color ? themeColors[props.color] : themeColors.black};\r\n  ${props =>\r\n    props.nospaces &&\r\n    `\r\n    display: inline-block;\r\n    padding: 0;\r\n    margin: 0;\r\n  `}\r\n`;\r\n\r\nexport { StyledButton as Button };\r\nexport { StyledLink as Link };\r\n","import Text from \"./Text\";\r\nimport Glitch from \"./Glitch\";\r\nimport Tooltip from \"./Tooltip\";\r\nimport { Link } from \"./Button\";\r\n\r\nconst tourConfig = [\r\n    {\r\n        selector: '[data-tut=\"reactour_welcome\"]',\r\n        content: `Welcome onboard, let's run you through your new workspace`\r\n    },\r\n    {\r\n      selector: '[data-tut=\"reactour__taskCards\"]',\r\n      content: `Your tasks progress will be displayed here.`\r\n    },\r\n    {\r\n      selector: '[data-tut=\"reactour__notification\"]',\r\n      content: `Your latest todo and and upcoming event will be displayed here for quick reminder`\r\n    },\r\n    {\r\n      selector: '[data-tut=\"reactour__timer\"]',\r\n      content: `Start and stop your timer here with a single click and visible counter…`\r\n    },\r\n    {\r\n      selector: '[data-tut=\"reactour__hourscreen\"]',\r\n      content: `Hour screen shows the numbers of hours you've spent so far in a day…`\r\n    },\r\n    {\r\n      selector: '[data-tut=\"reactour__sidebar\"]',\r\n      content: `Navigate around your workspace using the sidebar menu…`\r\n    },\r\n    {\r\n      selector: '[data-tut=\"reactour__profileImage\"]',\r\n      content: `View your profile here and also logout…`\r\n    },\r\n    {\r\n      selector: '[data-tut=\"reactour__style\"]',\r\n      content: () => (\r\n        <div>\r\n          <Glitch data-glitch=\"Pace\">Pace</Glitch>\r\n          <Text color=\"#e5e5e5\">\r\n            We are <Tooltip data-tooltip=\"this helper ⬇\">extremely happy</Tooltip>{\" \"}\r\n            to have you here, looking forward to serving you better…\r\n          </Text>\r\n          <Text color=\"#373737\" size=\".7em\" style={{ marginTop: \".7em\" }}>\r\n            <Link\r\n              to=\"/about\"\r\n              color=\"dark\"\r\n              nospaces\r\n            >\r\n              Developed\r\n            </Link>{\" \"}\r\n            by{\" \"}\r\n            <Link to=\"/about\" color=\"dark\" nospaces>\r\n              TIIDELab Circuit\r\n            </Link>\r\n          </Text>\r\n        </div>\r\n      ),\r\n      style: {\r\n        backgroundColor: \"black\",\r\n        color: \"white\"\r\n      }\r\n    },\r\n    // {\r\n    //   selector: '[data-tut=\"reactour__goTo\"]',\r\n    //   content: ({ goTo }) => (\r\n    //     <div>\r\n    //       If you wanna go anywhere, skipping places, it is absolutely possible.\r\n    //       <br /> \"Oh, I forgot something inside the bus…\"{\" \"}\r\n    //       <button\r\n    //         style={{\r\n    //           border: \"1px solid #f7f7f7\",\r\n    //           background: \"none\",\r\n    //           padding: \".3em .7em\",\r\n    //           fontSize: \"inherit\",\r\n    //           display: \"block\",\r\n    //           cursor: \"pointer\",\r\n    //           margin: \"1em auto\"\r\n    //         }}\r\n    //         onClick={() => goTo(1)}\r\n    //       >\r\n    //         Please go back to{\" \"}\r\n    //         <span aria-label=\"bus\" role=\"img\">\r\n    //           🚌\r\n    //         </span>\r\n    //       </button>\r\n    //     </div>\r\n    //   )\r\n    // },\r\n    // {\r\n    //   selector: '[data-tut=\"reactour__position\"]',\r\n    //   content: () => (\r\n    //     <Text>\r\n    //       The <Tooltip data-tooltip=\"this helper ⬇\">tourist guide</Tooltip> could\r\n    //       be positioned where you want.\r\n    //       <br /> In this case will try to stay in the <strong>\r\n    //         left side\r\n    //       </strong>{\" \"}\r\n    //       if there's available space, otherwise will{\" \"}\r\n    //       <strong>auto position</strong>.\r\n    //     </Text>\r\n    //   ),\r\n    //   position: \"left\"\r\n    // },\r\n    // {\r\n    //   selector: '[data-tut=\"reactour__scroll\"]',\r\n    //   content:\r\n    //     \"Probably you noted that the Tour scrolled directly to the desired place, and you could control the time also…\"\r\n    // },\r\n    // {\r\n    //   selector: '[data-tut=\"reactour__scroll--hidden\"]',\r\n    //   content: \"Also when places are pretty hidden…\"\r\n    // },\r\n    // {\r\n    //   selector: '[data-tut=\"reactour__action\"]',\r\n    //   content:\r\n    //     \"When arrived on each place you could fire an action, like… (look at the console)\",\r\n    //   action: () =>\r\n    //     console.log(`\r\n    //                 ------------🏠🏚---------\r\n    //     🚌 Arrived to explore these beautiful buildings! 🚌\r\n    //                 ------------🏠🏚---------\r\n    //  🚧 This action could also fire a method in your Component 🚧\r\n    //   `)\r\n    // },\r\n    // {\r\n    //   selector: '[data-tut=\"reactour__state\"]',\r\n    //   content:\r\n    //     \"And the Tour could be observing changes to update the view, try clicking the button…\",\r\n    //   observe: '[data-tut=\"reactour__state--observe\"]'\r\n    // }\r\n  ];\r\n\r\n\r\n  export default tourConfig;","// React\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// Tour\r\nimport tourConfig from '../../tour/config/tourConfig';\r\nimport Tour from \"reactour\";\r\n\r\n\r\nexport default function TourContainer() {\r\n\r\n    // Tour bg color\r\n    const accentColor = \"#5cb7b7\";\r\n\r\n    // Get the first timer status handler\r\n    const { isFirstTimer } = useSelector(state => state.authenticationState)\r\n\r\n    // state for Tour lunch, with initialstate of isFirstTimer value, false by default\r\n    const [isTourOpen, setIsTourOpen] = useState(isFirstTimer)\r\n\r\n    useEffect(() => {\r\n\r\n        // if the status from the first timer is true change the body class(affecting the whole app if add directly)\r\n        if(isTourOpen){\r\n            document.body.classList.add(\"tour-container\");\r\n        }else{\r\n            document.body.classList.remove(\"tour-container\");\r\n        }\r\n    },[isTourOpen])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tour-container\">\r\n                <Tour\r\n                    onRequestClose={(()=>setIsTourOpen(false))}\r\n                    steps={tourConfig}\r\n                    isOpen={isTourOpen}\r\n                    maskClassName=\"mask\"\r\n                    className=\"helper\"\r\n                    rounded={5}\r\n                    accentColor={accentColor}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","const Eshedule = () => {\r\n    return(\r\n        <>\r\n\r\n        <div class=\"container m-5 p-2 rounded mx-auto bg-light shadow\">\r\n            <style>\r\n                {\r\n                    `\r\n                        \r\n                    `\r\n                }\r\n            </style>\r\n            {/* Create eschedule section */}\r\n            <div className=\"row m-1 p-3\">\r\n                <div className=\"col col-11 mx-auto\">\r\n                <div className=\"row bg-white rounded shadow-sm p-2 add-eschedule-wrapper align-items-center justify-content-center\">\r\n                    <div className=\"col\">\r\n                    <input className=\"form-control form-control-lg border-0 add-eschedule-input bg-transparent rounded\" type=\"text\" placeholder=\"Add new ..\" />\r\n                    </div>\r\n                    <div className=\"col-auto m-0 px-2 d-flex align-items-center\">\r\n                    <label className=\"text-secondary my-2 p-0 px-1 view-opt-label due-date-label d-none\">Due date not set</label>\r\n                    <i className=\"fa fa-calendar my-2 px-1 text-primary btn due-date-button\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Set a Due date\" />\r\n                    <i className=\"fa fa-calendar-times-o my-2 px-1 text-danger btn clear-due-date-button d-none\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Clear Due date\" />\r\n                    </div>\r\n                    <div className=\"col-auto px-0 mx-0 mr-2\">\r\n                    <button type=\"button\" className=\"btn btn-primary\">Add</button>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-2 mx-4 border-black-25 border-bottom\" />\r\n            {/* eschedule list section */}\r\n            <div className=\"row mx-1 px-5 pb-3 w-80\">\r\n                <div className=\"col mx-auto\">\r\n                {/* eschedule Item 1 */}\r\n                <div className=\"row px-3 align-items-center eschedule-item rounded\">\r\n                    <div className=\"col-auto m-1 p-0 d-flex align-items-center\">\r\n                    <h2 className=\"m-0 p-0\">\r\n                        <i className=\"fa fa-square-o text-primary btn m-0 p-0 d-none\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Mark as complete\" />\r\n                        <i className=\"fa fa-check-square-o text-primary btn m-0 p-0\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Mark as eschedule\" />\r\n                    </h2>\r\n                    </div>\r\n                    <div className=\"col px-1 m-1 d-flex align-items-center\">\r\n                    <input type=\"text\" className=\"form-control form-control-lg border-0 edit-eschedule-input bg-transparent rounded px-3\" readOnly defaultValue=\"Buy groceries for next week\" title=\"Buy groceries for next week\" />\r\n                    <input type=\"text\" className=\"form-control form-control-lg border-0 edit-eschedule-input rounded px-3 d-none\" defaultValue=\"Buy groceries for next week\" />\r\n                    </div>\r\n                    <div className=\"col-auto m-1 p-0 px-3 d-none\">\r\n                    </div>\r\n                    <div className=\"col-auto m-1 p-0 eschedule-actions\">\r\n                    <div className=\"row d-flex align-items-center justify-content-end\">\r\n                        <h5 className=\"m-0 p-0 px-2\">\r\n                        <i className=\"fa fa-pencil text-dark btn m-0 p-0\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Edit eschedule\"></i>\r\n                        </h5>\r\n                        <h5 className=\"m-0 p-0 px-2\">\r\n                        <i className=\"fa fa-trash-o text-danger btn m-0 p-0\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Delete eschedule\"></i>\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"row eschedule-created-info\">\r\n                        <div className=\"col-auto d-flex align-items-center pr-2\">\r\n                        <i className=\"fa fa-info-circle my-2 px-2 text-black-50 btn\" data-toggle=\"tooltip\" data-placement=\"bottom\" title data-original-title=\"Created date\" />\r\n                        <label className=\"date-label my-2 text-black-50\">28th Jun 2020</label>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Eshedule;","import React, { useEffect, useState } from 'react';\r\nimport { Calendar as BigCalendar, momentLocalizer} from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport moment from 'moment';\r\nimport Button from '../../layouts/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCalendarEvent } from '../../../actions/company/calendar/calendarAction';\r\nimport Loader from '../../loader/Loader';\r\nimport { currentUserRoleID } from '../../../services/auth-header';\r\n                    \r\n\r\nexport default function Calendar() {\r\n    const localizer = momentLocalizer(moment);\r\n    const { events, isFetching } = useSelector(state => state.calendar);\r\n    const [ eventsState, setEventsState ] = useState([]);\r\n    const [ isFetchingState, setIsFetchingState ] = useState(isFetching);\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getCalendarEvent())\r\n        // console.log('snsnsn')\r\n        // setEventStates(events)\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        if(events){\r\n            setEventsState(events)\r\n            setIsFetchingState(false)\r\n        }\r\n    }, [events]);\r\n \r\n    if(isFetchingState){\r\n        return(\r\n            <Loader />\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <style>\r\n                {\r\n                    `\r\n                    .rbc-calendar {\r\n                        min-height: 500px ;\r\n                        }\r\n                    `\r\n                }\r\n            </style>\r\n            <div className=\"py-3\">\r\n                <section>\r\n\r\n                    {\r\n                        currentUserRoleID === 5 ? \"\" : \r\n                        (\r\n                            <Link to=\"/dashboard/manageCalendar\">\r\n                                <Button\r\n                                    label=\"Manage Event\"\r\n                                    className=\"btn btn-sm pace-btn-accent mb-2\"\r\n                                />\r\n                            </Link>\r\n                        )\r\n                    }\r\n                </section>\r\n                <BigCalendar\r\n                    localizer={localizer}\r\n                    events={eventsState}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                />\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Form, Formik } from 'formik';\r\nimport { TextInput } from '../../layouts/FormInput';\r\nimport Button from '../../layouts/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { addNewCalendarEvent, deleteCalendarEvent, editCalendarEvent, getCalendarEvent } from '../../../actions/company/calendar/calendarAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../../loader/Loader';\r\nimport { formatDate } from '../../../_helper/dateFormatter';\r\nimport { date } from 'yup';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { eventDeletedSuccessfullyLogger, eventNotDeletedLogger, eventUpdatedSuccessfullyLogger, eventnNotUpdatedLogger } from '../../../toaster';\r\n\r\n\r\nexport default function ManageCalendar() {\r\n    const { events, isFetching } = useSelector(state => state.calendar);\r\n    const [eventsState, setEventsState] = useState([]);\r\n    const [ isFetchingState, setIsFetchingState ] = useState(isFetching);\r\n    const [ editMode, setEditMode ] = useState(false);\r\n    const [ eventInEditMode, setEventInEditMode ] = useState({});\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCalendarEvent())\r\n    }, [dispatch]);\r\n    \r\n    useEffect(() => {\r\n        if(events){\r\n            setEventsState(events)\r\n            setIsFetchingState(false)\r\n        }\r\n    }, [events]);\r\n\r\n    const handleDelete = (eventID) =>{\r\n        dispatch(deleteCalendarEvent(eventID))\r\n        .then((response)=>{\r\n            eventDeletedSuccessfullyLogger()\r\n            // history.push('/dashboard/calendar')\r\n        })\r\n        .catch((error)=>{\r\n            eventNotDeletedLogger()\r\n        })\r\n    }\r\n\r\n    const handleEdit = (eventID, title, end) =>{\r\n        setEventInEditMode({\r\n            eventName: title,\r\n            eventDateAndTime: end,\r\n            eventID,\r\n        })\r\n        setEditMode(true)\r\n        \r\n    }\r\n\r\n    if(isFetchingState){\r\n        return(\r\n            <Loader />\r\n        )\r\n    }\r\n\r\n   \r\n    return (\r\n        <>\r\n\r\n            <style>\r\n                {\r\n                    `\r\n                    .rbc-calendar {\r\n                        min-height: 500px ;\r\n                        }\r\n                    `\r\n                }\r\n            </style>\r\n            <div className=\"py-3\">\r\n                {/* Breadcrumb */}\r\n                <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            <Link to='/dashboard/calendar'>\r\n                                Calendar\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            Manage Calendar\r\n                        </li>\r\n                        </ol>\r\n                    </nav>\r\n                \r\n                {/* /Breadcrumb */}\r\n            <div className=\"\">\r\n                <section className=\"\">\r\n                    <div className=\"mb-3\">\r\n                            {\r\n                                editMode ?\r\n                                (\r\n                                    \r\n                                    //  EDIT EVENT MODE\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <Formik \r\n                                            enableReinitialize\r\n                                            initialValues={eventInEditMode}\r\n                                            onSubmit={((values, action)=>{\r\n                                                dispatch(editCalendarEvent(values))\r\n                                                .then((response)=>{\r\n                                                    action.setSubmitting(false)\r\n                                                    eventUpdatedSuccessfullyLogger()\r\n                                                    history.push('/dashboard/calendar')\r\n                                                })\r\n                                                .catch((error)=>{\r\n                                                    action.setSubmitting(false)\r\n                                                    eventnNotUpdatedLogger()\r\n                                                })\r\n                                            })}\r\n                                        >\r\n                                        {({errors, touched, values, isSubmitting})=>(\r\n                                            <Form className=\"form-inline\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <TextInput \r\n                                                        name=\"eventName\"\r\n                                                        type=\"eventName\"\r\n                                                        className={`form-control p-2 ${\r\n                                                            touched.eventName && errors.eventName ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        id=\"eventName\"\r\n                                                        placeholder=\"Enter New Event\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"eventName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <TextInput \r\n                                                        name=\"eventDateAndTime\"\r\n                                                        type=\"datetime-local\"\r\n                                                        className={`form-control p-2 ${\r\n                                                            touched.eventDateAndTime && errors.eventDateAndTime ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        id=\"eventDateAndTime\"\r\n                                                        placeholder=\"Enter New Event\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <Button \r\n                                                        type=\"submit\"\r\n                                                        label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Updating Event</span>) : \"Update Event\"}\r\n                                                        className=\"btn btn-sm btn-info ml-2\"\r\n                                                    />\r\n                                                </div>\r\n                                                \r\n                                                <div className=\"input-group mb-2 mr-sm ml-lg- pl-lg-\" style={{marginLeft: '280px'}}>\r\n                                                    <Button \r\n                                                        icon=\"fa fa-back-arrow\"\r\n                                                        type=\"button\"\r\n                                                        label=\"New Event\"\r\n                                                        className=\"btn btn-sm btn-info ml-2\"\r\n                                                        onClick={(()=>setEditMode(false))}\r\n                                                    />\r\n                                                </div>\r\n                                            </Form>\r\n                                        )}\r\n                                        </Formik>\r\n                                    </div>\r\n                            )\r\n                            :\r\n                            (\r\n\r\n                                // ADD EVENT MODE\r\n                                // <div className=\"mb-3\">\r\n                                    <Formik \r\n                                        enableReinitialize\r\n                                        initialValues={{\r\n                                            eventName: '',\r\n                                            eventDateAndTime: ''\r\n                                        }}\r\n                                        onSubmit={((values, action)=>{\r\n                                            dispatch(addNewCalendarEvent(values, action))\r\n                                            .then((response)=>{\r\n                                                history.push('/dashboard/calendar')\r\n                                            })\r\n                                        })}\r\n                                        >\r\n                                        {({errors, touched, values, isSubmitting})=>(\r\n                                            <Form className=\"form-inline\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <TextInput \r\n                                                        name=\"eventName\"\r\n                                                        type=\"eventName\"\r\n                                                        className={`form-control p-2 ${\r\n                                                            touched.eventName && errors.eventName ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        id=\"eventName\"\r\n                                                        placeholder=\"Enter New Event\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"eventName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <TextInput \r\n                                                        name=\"eventDateAndTime\"\r\n                                                        type=\"datetime-local\"\r\n                                                        className={`form-control p-2 ${\r\n                                                            touched.eventDateAndTime && errors.eventDateAndTime ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        id=\"eventDateAndTime\"\r\n                                                        placeholder=\"Enter New Event\"\r\n                                                        />\r\n                                                </div>\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <Button \r\n                                                        type=\"submit\"\r\n                                                        label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Creating Event</span>) : \"Create Event\"}\r\n                                                        className=\"btn btn-sm btn-info ml-2\"\r\n                                                        />\r\n                                                </div>\r\n                        \r\n                                            </Form>\r\n                                        )}\r\n                                    </Formik>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    <div col=\"col-9\">\r\n                        <section>\r\n                            <ul className=\"list-group\">\r\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center h5\">\r\n                                <span>Event Name</span>\r\n                                {/* <span className=\"mr-5 pr-5\">Event Name</span> */}\r\n                            </li>\r\n\r\n                                {\r\n                                    eventsState.map(({title, end, eventID}, index)=>{\r\n                                        return(\r\n                                            <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={index}>\r\n                                                <span>\r\n                                                {title}\r\n                                                </span>\r\n                                                <section>\r\n                                                    <span className=\"text-center mr-5 pr-5\">\r\n                                                        {formatDate(end)}\r\n                                                    </span>\r\n                                                    <span className=\"   \">\r\n                                                        <button className=\"btn text-white badge badge-primary badge-pill mr-2\" onClick={(()=>handleEdit(eventID, title, end))}>Edit</button>\r\n                                                        <button className=\"btn text-white badge badge-red badge-pill\" onClick={(()=>handleDelete(eventID))}>Delete</button>\r\n                                                    </span>\r\n                                                </section>\r\n                                            </li>\r\n                                        )\r\n\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </section>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","// React\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Axios\r\nimport axios from 'axios';\r\n\r\n// APIs and Payloads\r\nimport { FETCH_COMPANY_TASK_SHEET_URL } from '../../../../services/root-endpoints';\r\nimport { authHeader, currentUserCompanyID } from '../../../../services/auth-header';\r\n\r\n// Actions\r\nimport { getDepartment } from \"../../../../actions/company/department/departmentAction\";\r\n\r\n// Layouts\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\n// Helper\r\nimport { formatDate } from '../../../../_helper/dateFormatter';\r\nimport { somethingWentWrongLogger } from '../../../../toaster';\r\n\r\n\r\n// Set the departments component state\r\nconst handleFormatDate = (selectedDepartmentTaskSheet) =>{\r\n  const formatedTaskSheet = selectedDepartmentTaskSheet.map((taskRecord)=> {\r\n    taskRecord.endDate = formatDate(taskRecord.endDate) \r\n    return taskRecord\r\n  })\r\n  return formatedTaskSheet\r\n}\r\n\r\nexport default function TaskReport() {\r\n  const { departments } = useSelector(state => state.departments); // departments from redux\r\n  const dispatch = useDispatch();\r\n  const [departmentsState, setDepartmentsState] = useState([]); // department state in component level, helps triggers renders\r\n  const [ selectedDepartmentID, setSelectedDepartmentID ] = useState(\"\"); // selected department ID\r\n  const [ selectedDepartmentTaskSheet, setSelectedDepartmentTaskSheet ] = useState([]);\r\n  const departmentsDropDown = departmentsState.map(({departmentName, departmentID}, index)=><option className=\"text-red\" value={departmentID} key={index}>{departmentName}</option>)\r\n\r\n  // Function handling the change in department dropdown\r\n  const handleChange = (event) =>{\r\n    // Get the selected department and  store the values which is the departmentID to the state\r\n    setSelectedDepartmentID(event.target.value)\r\n  }\r\n\r\n  // Dispatch function to fetch the department in the company\r\n  useEffect(() => {\r\n      dispatch(getDepartment())\r\n  }, [dispatch])\r\n\r\n\r\n  useEffect(() => {\r\n    setDepartmentsState(departments)\r\n  }, [departments, selectedDepartmentTaskSheet]);\r\n\r\n  // Fetch the selected department task sheet\r\n  useEffect(() => {\r\n    // Only fetch the department task if the user select a department\r\n    if(selectedDepartmentID.length !== 0){\r\n      axios.get(FETCH_COMPANY_TASK_SHEET_URL + currentUserCompanyID + \"/\" + selectedDepartmentID, {headers: authHeader} )\r\n      .then((response)=>{\r\n        setSelectedDepartmentTaskSheet(handleFormatDate(response.data.data)) // Send to function to formate the date to human readable\r\n      })\r\n      .catch((error)=>{\r\n        somethingWentWrongLogger()\r\n      })\r\n    }\r\n  }, [selectedDepartmentID]);\r\n\r\n  // Boostrap header\r\n  const Header = [\r\n    {\r\n      dataField: 'id',\r\n      text: 'S/N'\r\n    },\r\n    {\r\n      dataField: 'firstname',\r\n      text: 'Firstname',\r\n    },\r\n    {\r\n      dataField: 'lastname',\r\n      text: 'Lastname',\r\n    },\r\n    {\r\n      dataField: 'taskName',\r\n      text: 'Task Assigned',\r\n    },\r\n    {\r\n      dataField: 'endDate',\r\n      text: 'Due Date',\r\n    },\r\n    {\r\n      dataField: 'taskStatus',\r\n      text: 'Task Status',\r\n    },\r\n    {\r\n    \r\n      formatter: (cellContent, row) => {\r\n        console.log(row)\r\n        return (\r\n          <>\r\n              <tr>\r\n                <Link to={`/dashboard/task/view-task/`}>\r\n                  View\r\n                </Link>\r\n              </tr>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  \r\n  ];\r\n  \r\n    \r\n\r\n\r\n  return (\r\n      <>\r\n        <div className=\"container-fluid py-3\">\r\n          {/* Breadcrumb */}\r\n          <nav aria-label=\"breadcrumb\" className=\"px-3 main-breadcrumb\">\r\n              <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                  <Link to='/dashboard'>\r\n                      Dashboard \r\n                  </Link>\r\n              </li>\r\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                  { selectedDepartmentTaskSheet.departmentName } Task Sheet \r\n              </li>\r\n              </ol>\r\n          </nav>\r\n      \r\n          {/* /Breadcrumb */}\r\n          <div className=\"\">\r\n            <div col=\"col-9\">\r\n                <section className=\"col-4 mb-4 text-dark text-uppercase\">\r\n                  <select name=\"department\" onChange={handleChange} className=\"form-control\">\r\n                    <option>Select Department</option>\r\n                    {departmentsDropDown}\r\n                  </select>\r\n                </section>\r\n              <div className=\"container-flid\">\r\n                <Table\r\n                    keyField='id'\r\n                    title=\"Task Sheet\"\r\n                    data={selectedDepartmentTaskSheet}\r\n                    columns={Header}\r\n                    bordered= { false }\r\n                    pagination = { paginationFactory() }\r\n                    enableSearch = { true }\r\n                  /> \r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n          \r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchPersonalTimeSheet } from '../../../../actions/timer/timerAction';\r\n\r\n\r\nconst Header = [\r\n  {\r\n    dataField: 'id',\r\n    text: 'S/N'\r\n  },\r\n  {\r\n    dataField: 'firstname',\r\n    text: 'Firstname',\r\n  },\r\n  {\r\n    dataField: 'lastname',\r\n    text: 'Lastname',\r\n  },\r\n  {\r\n    dataField: 'department',\r\n    text: 'Department',\r\n  },\r\n  {\r\n    dataField: 'role',\r\n    text: 'Role',\r\n  },\r\n  {\r\n    dataField: 'workedHour',\r\n    text: 'Worked Hour',\r\n  },\r\n  {\r\n    dataField: 'completedTask',\r\n    text: 'Completed Task',\r\n  },\r\n    \r\n//   {\r\n  \r\n//     formatter: (cellContent, row) => {\r\n//       return (\r\n//         <>\r\n//         <button\r\n//           className=\"btn btn-danger btn-xs mr-3\"\r\n//           onClick={(e) => handleDelete(row)} \r\n//         >\r\n//           Delete\r\n//         </button>\r\n//         <button\r\n//           className=\"btn btn-danger btn-xs\"\r\n//           onClick={(e) => handleDelete(row)} \r\n//         >\r\n//           Delete\r\n//         </button>\r\n//         </>\r\n//       );\r\n//     },\r\n//   },\r\n\r\n];\r\n\r\n\r\n// function handleDelete(rowId){\r\n//   console.log(rowId);\r\n// };\r\n\r\n\r\nconst PersonalTimeSheet = () => {\r\n    const usersDetails = useSelector(state => state.timerReport)\r\n    const [timeSheet, seTimeSheet] = useState([])\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPersonalTimeSheet())\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"container-fluid py-5\">\r\n          <Table\r\n            keyField='id'\r\n            title=\"Timer Report\"\r\n            data={timeSheet}\r\n            columns={Header}\r\n            bordered= { false }\r\n            pagination = { paginationFactory() }\r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalTimeSheet;","// React\r\nimport { React, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { Route, Switch } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\n// Layouts\r\nimport Navbar from '../layouts/Navbar';\r\nimport Sidebar from '../layouts/Sidebar'\r\nimport Footer from '../layouts/Footer';\r\n\r\n// Components\r\nimport Index from './Index';\r\nimport AddEmployee from '../../company/employee/AddEmployee';\r\nimport EmployeeList from '../../company/employee/EmployeeList';\r\nimport EmployeeProfile from '../../company/employee/EmployeeProfile';\r\nimport ManageDepartment from '../../company/department/ManageDepartment';\r\nimport Profile from '../../user/Profile';\r\nimport UpdateProfile from '../../user/UpdateProfile';\r\nimport Task from './Task';\r\nimport Todo from './todos/Todo'\r\nimport BillingReport from './reports/BillingReport';\r\nimport TimerReport from './reports/TimerReport';\r\nimport UpdateEmployeeProfile from '../../company/employee/UpdateEmployeeProfile';\r\nimport UpdateCompanyProfile from '../../company/Settings/UpdateCompanyProfile';\r\nimport CompanyProfile from '../../company/Settings/CompanyProfile';\r\nimport Settings from '../../company/Settings/Settings';\r\n\r\n// Actions\r\nimport { syncCurrentUser } from '../../../actions/user/userAction';\r\n\r\n// Tour\r\nimport TourContainer from '../../tour/config/TourContainer';\r\nimport ChangePassword from '../../user/ChangePassword';\r\nimport Eschedule from '../../../components/workspace/dashboard/eShedule/Eshedule';\r\nimport Calendar from '../../company/calendar/Calendar';\r\nimport ManageCalendar from '../../company/calendar/ManageCalendar';\r\nimport { welcomeBackLogger } from '../../../toaster';\r\nimport { currentUserFromLocalStorage } from '../../../services/auth-header';\r\nimport TaskReport from './reports/TaskReport';\r\nimport PersonalTimeSheet from './timer/PersonalTimeSheet';\r\n\r\n\r\n\r\nconst Dashboard = () =>{\r\n    const { welcome, isLoggedIn } = useSelector(state => state.authenticationState)\r\n    const history = useHistory()\r\n    const [redirect, setRedirect] = useState(false)\r\n    // console.log(currentUserFromLocalStorage)\r\n    useEffect(() => {\r\n        if(localStorage.getItem('token') === null){\r\n            setRedirect(true)\r\n        }\r\n    }, [isLoggedIn])\r\n        \r\n    useEffect(() => {\r\n        if(welcome){\r\n            welcomeBackLogger()\r\n        }\r\n    },[welcome]);\r\n    \r\n    if(redirect){\r\n        //  history.push('/login')\r\n        return <Redirect to=\"/login\" push={true} />\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div h='1' data-tut='reactour__welcome'>\r\n                <TourContainer />\r\n                {/* >>>>> NAVBAR COMPONENT SECTION <<<<< */}\r\n                <Navbar  />\r\n                    <div className=\"d-flex align-items-stretch\">\r\n                {/* >>>>> SIDEBAR COMPONENT SECTION <<<<< */}\r\n                        <Sidebar />\r\n                        <div className=\"page-holder w-100 d-flex flex-wrap\">\r\n                            <div className=\"container-fluid dashboard-body-wrapper\">\r\n                {/* >>>>> BODIES COMPONENTS SECTION <<<<< */}\r\n                                <Switch>\r\n\r\n                                    <Route path=\"/dashboard/calendar\" component={Calendar} />\r\n                                    <Route path=\"/dashboard/e-schedule\" component={Eschedule} />\r\n                                    <Route path=\"/dashboard/manageCalendar\" component={ManageCalendar} />\r\n\r\n                                    <Route path=\"/dashboard/todos\" component={Todo} />\r\n                                    <Route path=\"/dashboard/task\" component={Task} />\r\n\r\n                                    {/* users paths */}\r\n                                    <Route exact path=\"/dashboard/profile/:id\" component={Profile} />\r\n                                    <Route exact path=\"/dashboard/profile/changepassword/:id\" component={ChangePassword} />\r\n                                    <Route exact path=\"/dashboard/profile/update/:id\" component={UpdateProfile} />\r\n\r\n                                    {/* company paths */}\r\n                                    <Route exact path=\"/dashboard/company/profile/:id\" component={CompanyProfile} />\r\n                                    <Route exact path=\"/dashboard/company/profile/update/:id\" component={UpdateCompanyProfile} />\r\n                                    <Route exact path=\"/dashboard/company/settings\" component={Settings} />\r\n                                    <Route path=\"/dashboard/company/settings/departments\" component={ManageDepartment} />\r\n                                    <Route exact path=\"/dashboard/employ\" component={AddEmployee} />\r\n                                    <Route exact path=\"/dashboard/employee-list\" component={EmployeeList} />\r\n                                    <Route exact path=\"/dashboard/employee/profile/:id\" component={EmployeeProfile} />\r\n                                    <Route exact path=\"/dashboard/employee/profile/update/:id\" component={UpdateEmployeeProfile} />\r\n\r\n                                    {/* Personal timesheet */}\r\n                                    <Route exact path=\"/dashboard/timesheet\" component={PersonalTimeSheet} />\r\n\r\n                                    <Route exact path=\"/dashboard/billing-report\" component={BillingReport} />\r\n                                    <Route exact path=\"/dashboard/task-report\" component={TaskReport} />\r\n                                    <Route exact path=\"/dashboard/timer-report\" component={TimerReport} />\r\n                                    {/* <Route exact path=\"/dashboard/task\" component={EmployeeTasks} /> */}\r\n                                    <Route exact path=\"/dashboard\" component={Index} />\r\n                                </Switch>\r\n                            </div>\r\n                {/* >>>>> FOOTER COMPONENT SECTION <<<<< */}\r\n                        <Footer />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Dashboard;","export default __webpack_public_path__ + \"static/media/message_sent.2ebdfc5c.svg\";","export default __webpack_public_path__ + \"static/media/oneStep.575eb068.svg\";","// REACT\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n//  >>>>>>>> APPLICATION STYLES  <<<<<<<<<<\r\n\r\n// DASHBOARD SCRIPT\r\nimport './components/workspace/layouts/SibarToggle';\r\n\r\n// BOOTSTRAP\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\n\r\n// UTILITIES\r\nimport './components/pages/pages-styles/util.css';\r\nimport './components/pages/pages-styles/form.css';\r\nimport './components/layouts/layout-style/button.css';\r\nimport './components/loader/loader.css';\r\n\r\n// CUSTOM\r\nimport './components/layouts/layout-style/navbar.css';\r\nimport './components/layouts/layout-style/footer.css';\r\nimport './components/pages/pages-styles/homebody.css';\r\nimport './components/pages/pages-styles/forgotpassword.css';\r\nimport './components/pages/pages-styles/confirmation.css';\r\nimport './components/pages/pages-styles/404.css';\r\nimport './components/pages/pages-styles/about.css';\r\n\r\n// AOS\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'aos/dist/aos.css';\r\n\r\n// DASHBOARD STYLES\r\nimport './components/workspace/dashboard/dashboard-styles/style.default.css';\r\nimport './components/workspace/dashboard/dashboard-styles/utilities.css';\r\nimport './components/workspace/dashboard/dashboard-styles/custom.css';\r\nimport './components/workspace/dashboard/dashboard-styles/orionicons.css';\r\nimport './components/workspace/dashboard/dashboard-styles/card.css';\r\nimport './components/workspace/dashboard/dashboard-styles/task.css';\r\n// import './components/workspace/dashboard/dashboard-styles/task-sidebar.css';\r\nimport './components/workspace/dashboard/dashboard-styles/timer.css';\r\nimport './components/workspace/dashboard/todos/todoform.css';\r\nimport './components/workspace/dashboard/todos/todo.css';\r\n\r\n\r\n// TOUR STYLES -- will only apply when the user is a first timer\r\nimport './components/tour/tour-styles/tour.css';\r\n\r\n// Redux \r\nimport store from \"./Store\";\r\nimport { Provider } from 'react-redux';\r\n\r\n// test DEVcomponent\r\nimport Test from './rough/Test';\r\n\r\n// COMPONENTS\r\nimport Home from './components/App';\r\nimport ContactUs from './components/pages/ContactUs';\r\nimport Login from './components/pages/Login';\r\nimport Signup from './components/pages/Signup';\r\nimport ForgotPassword from './components/pages/ForgotPassword';\r\nimport Confirmation from './components/pages/Confirmation';\r\nimport ResetPassword from './components/pages/ResetPassword';\r\nimport Dashboard from './components/workspace/dashboard/Dashboard';\r\nimport Thanks from './components/pages/Thanks';\r\nimport NewStaffPassword from './components/pages/NewStaffPassword';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Provider store={store}>\r\n        <Switch>\r\n          <Route exact path=\"/contact\" component = {ContactUs} />\r\n          <Route exact path=\"/ResetPassword\" component = {ResetPassword} />\r\n          <Route exact path=\"/confirmation\" component = {Confirmation} />\r\n          <Route exact path=\"/thanks\" component = {Thanks} />\r\n          <Route exact path=\"/forgot\" component = {ForgotPassword} />\r\n          <Route exact path=\"/createpassword\" component = {NewStaffPassword} />\r\n          <Route exact path=\"/signup\" component = {Signup} />\r\n          <Route exact path=\"/login\" component = {Login} />\r\n          {/* Development Component for testing */}\r\n          <Route exact path=\"/test\" component = {Test} />\r\n          {/* Top Level Components */}\r\n          <Route path=\"/dashboard\" component = {Dashboard} />\r\n          <Route path=\"/\" component = {Home} />\r\n\r\n        </Switch>\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","import { React, useEffect } from 'react';\r\nimport sendImage from '../../components/pages/pages-images/mailsent.svg';\r\nimport mailAnimation from '../../components/pages/pages-images/mailAnimation.gif';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Confirmation() {\r\n    useEffect(() => {\r\n        \r\n        return () => {\r\n            document.title = \"Mail confirmation\"\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"container d-flex justify-content-center mt-5\">\r\n                <div className=\"row confirmation-wrapper\">\r\n                    <div className=\"col-12 text-center\">\r\n                        {/* <img src={sendImage} alt=\"message sent successfully\" /> */}\r\n                        <img src={mailAnimation} alt=\"message sent successfully\" />\r\n                    </div>\r\n                    <div className=\"col-12 text-center\">\r\n                        <h2 className=\"mt-3 text-center\">Message Sent</h2>\r\n                        <p>A mail containing a link to reset your password has been sent to your registered email</p>\r\n                        <p>Return <Link to=\"/\">Home</Link></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// React\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Layouts\r\nimport Button from \"../../components/layouts/Button\";\r\nimport messageSent from \"../../components/pages/pages-images/message_sent.svg\";\r\n\r\nexport default function Thanks(){\r\n    return(\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <section className=\"d-flex flex-lg-row flex-column-reverse justify-content-center align-items-center \">\r\n                        <aside className=\"col-lg-6 col-12 mt-sm-3\">\r\n                            <h2 className=\"font-weight-bold mt-5\">Thank you!</h2>\r\n                            <p>We've received your message and we'll get back to you within 24 hours.</p>\r\n\r\n                            <section className=\"mt-5\">\r\n                                <h5 className=\"pt-3 mb-4\">\r\n                                    Follow us on twitter &nbsp;\r\n                                    <i className=\"fab fa-twitter text-blue\"></i>\r\n                                </h5>\r\n                                <Link to=\"/\">\r\n                                    <Button\r\n                                        label=\" Go Home\"\r\n                                        icon=\"fa fa-arrow-left\"\r\n                                        className=\"btn pace-btn-accent\"\r\n                                    />\r\n                                </Link>\r\n                                <a href=\"https://twitter.com/tiidelab\" target=\"_blank\">\r\n                                    <Button\r\n                                        label=\" Twitter\"\r\n                                        icon=\"fab fa-twitter\"\r\n                                        className=\"btn btn-primary ml-3\"\r\n                                    />\r\n                                </a>\r\n                            </section>\r\n                        </aside>\r\n                        <aside className=\"col-lg-6 col-9 mt-5\">\r\n                            <img src={messageSent} alt=\"message sent successfully\" className=\"img-fluid mt-4\" />\r\n                        </aside>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { React, useEffect} from 'react';\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport { TextInput } from '../layouts/FormInput';\r\nimport Button from '../layouts/Button';\r\nimport forgotIllustration from '../pages/pages-images/forgotpassword.svg';\r\nimport { forgotPasswordSchema } from '../Validation/Schema';\r\nimport { HomeButton } from '../layouts/HomeButton';\r\n\r\n\r\nexport default function ForgotPassword() {\r\n    useEffect(() => {\r\n        \r\n        return () => {\r\n            document.title = \"Forgot Password\"\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n\r\n            <div className=\"container d-flex justify-content-center pl-5 align-items-center mt-5\">\r\n                <div className=\"row mt-5 d-flex justify-content-center\">\r\n                    <div className=\"col mt-5\">\r\n                        <HomeButton className=\"mb-4\" />\r\n                        <div>\r\n                            <h3 className=\"lad\">Forgot Password</h3>\r\n                            <p className=\"w-3 pace-accent-color\">Looks like you forgot your password, let's help you out</p>\r\n                        </div>                    \r\n                        \r\n                        <div className=\"form-wrapper\">\r\n                            <Formik \r\n                                initialValues = {{\r\n                                    email:\"\",\r\n                                    isSubmitting:false\r\n                                }}\r\n\r\n                                validationSchema = {forgotPasswordSchema}\r\n\r\n                            >\r\n                                {({values, errors, touched, isSubmitting})=>{\r\n                                    return(\r\n                                        <div className=\"form-group\">\r\n                                            <Form>\r\n                                                <TextInput \r\n                                                    name=\"email\"\r\n                                                    type=\"email\"\r\n                                                    id=\"email\"\r\n                                                    placeholder=\"example@company.com\"\r\n                                                    label=\"Enter your registered email\"\r\n                                                    labelClassName=\"mt-2\"\r\n                                                    className={`form-control ${touched.email && errors.email ? \"is-invalid\" : \"\"}`}\r\n                                                />\r\n                                                <ErrorMessage\r\n                                                    component=\"div\"\r\n                                                    name=\"email\"\r\n                                                    className=\"invalid-feedback p-0\"\r\n                                                />\r\n                                                <Button\r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Sending...</span>) : \"Request\"}\r\n                                                    type=\"submit\"\r\n                                                    className=\"btn btn-primary mt-3\"\r\n                                                    disabled={isSubmitting}\r\n                                                />\r\n                                            </Form>\r\n                                        </div>\r\n                                        \r\n                                    )\r\n                                }}\r\n                            </Formik>            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6 d-none d-lg-block forgot-password-wrapper ml-lg-5 mt-lg-5\">\r\n                    <img src={forgotIllustration} alt=\"human forgot password\" className=\"img-fluid mt-4\" />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport oneStep from '../../components/pages/pages-images/oneStep.svg';\r\n\r\nexport default function NewStaffPassword() {\r\n    return (\r\n        <>\r\n            <div>\r\n                <style>\r\n                    {\r\n                        `\r\n                            body{\r\n                                // background-color:#5286F3;\r\n                                font-size:14px;\r\n                                color:#fff;\r\n                            }\r\n                            .simple-login-container{\r\n                                width:400px;\r\n                                max-width:100%;\r\n                                margin:100px auto;\r\n                            }\r\n                            .simple-login-container h2{\r\n                                text-align:center;\r\n                                font-size:20px;\r\n                            }\r\n                            \r\n                            .simple-login-container .btn-login{\r\n                                // background-color:#FF5964;\r\n                                color:#fff;\r\n                            }\r\n                            a{\r\n                                color:#fff;\r\n                            }\r\n                            .one-step{\r\n                                width: 200px;\r\n                                padding: 10px;\r\n                                max-width: 100%;\r\n                                margin-left: 100px;\r\n                                // height: auto;\r\n                            }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"simple-login-container\">\r\n                    {/* <img src={oneStep} alt=\"one step closer\" className=\"img-fluid one-step\"></img> */}\r\n                    <h2 className=\"mb-5 text-dark\">You're one step closer to getting on board</h2>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-md-12 form-group\">\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Create Password\" />\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-md-12 form-group\">\r\n                        <input type=\"password\" placeholder=\"Confirm Password\" className=\"form-control\" />\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-md-12 form-group\">\r\n                        <input type=\"submit\" className=\"btn btn-block btn-login pace-btn-primary\" placeholder=\"  \" />\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        {/* <a href=\"https://1.envato.market/ydVvD\">Download Best Theme</a> */}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}