[{"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Task.js":"1","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AllTasks.js":"2","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\DraftTask.js":"3","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\SampleCompose.js":"4","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\TaskDetails.js":"5","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\actions\\types.js":"6","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\actions\\taskActions.js":"7","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\reducers\\task\\taskReducer.js":"8","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\reducers\\task\\taskDataReducer.js":"9","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\TodoRows.js":"10","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Table.js":"11"},{"size":2175,"mtime":1609412393757,"results":"12","hashOfConfig":"13"},{"size":4156,"mtime":1609457606152,"results":"14","hashOfConfig":"13"},{"size":8212,"mtime":1609418878208,"results":"15","hashOfConfig":"13"},{"size":3198,"mtime":1609413535154,"results":"16","hashOfConfig":"13"},{"size":7287,"mtime":1609418389991,"results":"17","hashOfConfig":"13"},{"size":1147,"mtime":1609451154091,"results":"18","hashOfConfig":"13"},{"size":550,"mtime":1609456109009,"results":"19","hashOfConfig":"13"},{"size":989,"mtime":1609458214998,"results":"20","hashOfConfig":"13"},{"size":3352,"mtime":1609456334346,"results":"21","hashOfConfig":"13"},{"size":3807,"mtime":1609453480796,"results":"22","hashOfConfig":"13"},{"size":6218,"mtime":1609458009843,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"158utbm",{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Task.js",["47","48","49","50"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AllTasks.js",["51","52","53","54"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\DraftTask.js",["55","56","57","58"],"import React, { Component } from 'react';\r\nimport {Formik, Form, Field,  ErrorMessage} from 'formik';\r\nimport { TextInput, TextArea, DataList, Datalist } from '../../layouts/FormInput';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { assignTask } from '../../../actions/taskActions';\r\n\r\n\r\n\r\nimport Button from '../../layouts/Button';\r\n\r\n\r\nclass DraftTask extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section className=\"\">\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col task-util compose-task\">\r\n              <div className=\"card\">\r\n              <header className=\"card-header wht-bg\">\r\n                <h4 className=\"gen-case\">\r\n                    Assign Task\r\n                </h4>\r\n              </header>\r\n                <div className=\"card-body\">\r\n                  <div className=\"compose-btn-wrapper\">\r\n                    <Button \r\n                      type=\"submit\"\r\n                      label=\" Send\"\r\n                      icon=\"fa fa-check\"\r\n                      className=\"btn btn-theme btn-sm\"\r\n                    />                                   \r\n                    <Button \r\n                      type=\"submit\"\r\n                      label=\" Discard\"\r\n                      icon=\"fa fa-times\"\r\n                      className=\"btn btn-sm special ml-2 mr-2 pace-bg-accent\"\r\n                    />\r\n                    <Button \r\n                      type=\"submit\"\r\n                      label=\" Draft\"\r\n                      className=\"btn btn-sm special\"\r\n                    />            \r\n                  </div>\r\n                  <div className=\"card-text\">\r\n                    <Formik\r\n                      initialValues={{\r\n                        department: '',\r\n                        subject: '',\r\n                        taskDescription: '',\r\n                        file: '',\r\n                        dueDate: ''\r\n                      }}\r\n                        // validationSchema = {}\r\n                        onSubmit={ values =>{\r\n                          // console.log(values)\r\n                          this.props.assignTask(values)\r\n                          console.log(values)\r\n                          \r\n                        }\r\n                      }\r\n                    >\r\n                      {({touched, errors, values, handleSubmit, handleChange, isSubmitting}) => (\r\n                        <Form className=\"mt-0\"  onSubmit={handleSubmit}>\r\n                          <div className=\"form-group\">\r\n                            <TextInput \r\n                                label = \"To:\"\r\n                                name = \"department\"\r\n                                id = \"department\"\r\n                                type = \"text\"\r\n                                value={values.department}\r\n                                className = \"form-control lead\"                                \r\n                                onChange={handleChange}\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <TextInput \r\n                                label = \"Subject:\"\r\n                                name = \"subject\"\r\n                                id = \"subject\"\r\n                                type = \"text\"\r\n                                value={values.subject}\r\n                                className = \"form-control lead\"                                \r\n                                onChange={handleChange}\r\n                            />\r\n                          </div>\r\n                          \r\n                          {/* <div className=\"form-group row\">\r\n                            <div className=\"col-lg-6\">\r\n                              <Field component=\"datalist\" name=\"role\"  onChange={handleChange} className=\"form-control\">\r\n                                            <option selected>Choose...</option>\r\n                                            {availableRole}\r\n                              </Field>\r\n                              <DataList\r\n                               label = \"Department\"\r\n                               name = \"department\"\r\n                               id = \"department\"\r\n                               type = \"text\"\r\n                               value={values.department}\r\n                               className = \"form-control lead\"\r\n                               \r\n                               placeholder = \"Department\"\r\n                               onChange={handleChange}\r\n                              > \r\n                              <option selected>Choose...</option>\r\n                                            {availableRole}\r\n\r\n                              </DataList>\r\n                            </div>\r\n                          </div> */}\r\n                            \r\n                          <div className=\"form-group\">\r\n                              <TextArea \r\n                                label = \"Task description\"\r\n                                name = \"taskDescription\"\r\n                                id = \"task-description\"\r\n                                value = {values.taskDescription}\r\n                                className= \"form-control lead\"                               \r\n                                rows = \"4\"\r\n                                // cols = \"57\"\r\n                                resize = \"none\"\r\n                                onChange={handleChange} \r\n                              />\r\n                          </div>\r\n                          <div className=\"form-group row\">\r\n                            <div className=\"col-sm-6\">\r\n                              <TextInput \r\n                                  label = \"Attachment\"\r\n                                  name = \"file\"\r\n                                  id = \"file\"\r\n                                  type = \"file\"\r\n                                  value={values.file}\r\n                                  className = \"lead\"\r\n                                  onChange={handleChange}\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                              <TextInput \r\n                                  label = \"Due Date\"\r\n                                  name = \"dueDate\"\r\n                                  id = \"due-date\"\r\n                                  type=\"date\"\r\n                                  value={values.dueDate}\r\n                                  className = \"form-control lead\"     \r\n                                  onChange={handleChange}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"compose-btn mt-4\">\r\n                            <Button \r\n                              type=\"submit\"\r\n                              label=\" Send\"\r\n                              icon=\"fa fa-check\"\r\n                              className=\"btn btn-theme btn-sm\"\r\n                            />                                   \r\n                            <Button \r\n                              type=\"submit\"\r\n                              label=\" Discard\"\r\n                              icon=\"fa fa-times\"\r\n                              className=\"btn btn-sm special ml-2 mr-2 pace-bg-accent\"\r\n                            />\r\n                            <Button \r\n                              type=\"submit\"\r\n                              label=\" Draft\"\r\n                              className=\"btn btn-sm special\"\r\n                            />    \r\n                          </div>\r\n                        </Form>\r\n                      )}\r\n\r\n                    </Formik>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>    \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   AllTasks: state.task\r\n// })\r\n\r\nDraftTask.propTypes = {\r\n  assignTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null,{ assignTask })(DraftTask);\r\n","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\SampleCompose.js",["59"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\TaskDetails.js",["60","61"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\actions\\types.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\actions\\taskActions.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\reducers\\task\\taskReducer.js",["62","63"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\reducers\\task\\taskDataReducer.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\TodoRows.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Table.js",[],{"ruleId":"64","severity":1,"message":"65","line":3,"column":9,"nodeType":"66","messageId":"67","endLine":3,"endColumn":16},{"ruleId":"64","severity":1,"message":"68","line":10,"column":8,"nodeType":"66","messageId":"67","endLine":10,"endColumn":21},{"ruleId":"64","severity":1,"message":"69","line":11,"column":8,"nodeType":"66","messageId":"67","endLine":11,"endColumn":14},{"ruleId":"64","severity":1,"message":"70","line":12,"column":8,"nodeType":"66","messageId":"67","endLine":12,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":81,"column":5,"nodeType":"73","endLine":81,"endColumn":66},{"ruleId":"71","severity":1,"message":"72","line":86,"column":11,"nodeType":"73","endLine":86,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":87,"column":11,"nodeType":"73","endLine":87,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":89,"column":11,"nodeType":"73","endLine":89,"endColumn":23},{"ruleId":"64","severity":1,"message":"74","line":2,"column":23,"nodeType":"66","messageId":"67","endLine":2,"endColumn":28},{"ruleId":"64","severity":1,"message":"75","line":2,"column":31,"nodeType":"66","messageId":"67","endLine":2,"endColumn":43},{"ruleId":"64","severity":1,"message":"76","line":3,"column":31,"nodeType":"66","messageId":"67","endLine":3,"endColumn":39},{"ruleId":"64","severity":1,"message":"77","line":3,"column":41,"nodeType":"66","messageId":"67","endLine":3,"endColumn":49},{"ruleId":"78","severity":1,"message":"79","line":21,"column":35,"nodeType":"80","endLine":21,"endColumn":57},{"ruleId":"81","severity":1,"message":"82","line":93,"column":31,"nodeType":"73","endLine":93,"endColumn":55},{"ruleId":"81","severity":1,"message":"82","line":107,"column":31,"nodeType":"73","endLine":107,"endColumn":55},{"ruleId":"64","severity":1,"message":"83","line":2,"column":24,"nodeType":"66","messageId":"67","endLine":2,"endColumn":33},{"ruleId":"64","severity":1,"message":"84","line":2,"column":35,"nodeType":"66","messageId":"67","endLine":2,"endColumn":43},"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'EmployeeTasks' is defined but never used.","'Sample' is defined but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'DataList' is defined but never used.","'Datalist' is defined but never used.","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'FetchTask' is defined but never used.","'allTasks' is defined but never used."]