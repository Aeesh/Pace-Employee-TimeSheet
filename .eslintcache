[{"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\user\\ChangePassword.js":"1","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\reducers\\company\\calendar\\calendarReducer.js":"2","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\EventCard.js":"3","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\TodoCard.js":"4","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\root-endpoints.js":"5","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\index.js":"6","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\todo.service.js":"7","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\todo\\todoAction.js":"8","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\Login.js":"9","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Navbar.js":"10","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\user.service.js":"11","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Dashboard.js":"12","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\user\\Profile.js":"13","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\AddEmployee.js":"14","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\Settings\\UpdateCompanyProfile.js":"15","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\MostActiveEmployee.js":"16","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\timer\\HourTimerScreen.js":"17","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\Cards.js":"18","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AllTasks.js":"19","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\Sample.js":"20","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\employee\\employeeAction.js":"21","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\company\\company-service.js":"22","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\EscheduleCard.js":"23","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\Button.js":"24","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\Text.js":"25","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\company\\department-service.js":"26","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\TimerReport.js":"27","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\NotificationCards.js":"28","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\UpdateEmployeeProfile.js":"29","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\_helper\\dateFormatter.js":"30","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\tourConfig.js":"31","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\company\\department\\departmentAction.js":"32","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\company\\calendar\\calendarService.js":"33","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\auth.service.js":"34","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\reducers\\authentication\\authReducer.js":"35","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\auth-header.js":"36","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AssignedTasks.js":"37","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\EmployeeList.js":"38","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\department\\NewDepartmentForm.js":"39","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\Glitch.js":"40","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\settings.js":"41","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\App.js":"42","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\user\\UpdateProfile.js":"43","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Navbar.js":"44","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\employee\\employee.service.js":"45","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\EmployeeProfile.js":"46","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\reducers\\todo\\todoReducer.js":"47","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\TodoRows.js":"48","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\TodoForm.js":"49","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\toaster\\index.js":"50","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\user\\userAction.js":"51","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\IndexArea.js":"52","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\Pricing.js":"53","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\pages-js\\TypeWriter.js":"54","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\rough\\Test.js":"55","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\Store.js":"56","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Footer.js":"57","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\Validation\\Schema.js":"58","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Sidebar.js":"59","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\auth\\authAction.js":"60","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\TourContainer.js":"61","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\BillingReport.js":"62","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\Settings\\Settings.js":"63","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\Features.js":"64","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\loader\\Loader.js":"65","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AcceptedTasks.js":"66","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\TaskInboxSample.js":"67","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\reducers\\message\\messageReducer.js":"68","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\task\\acceptedTaskAction.js":"69","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\task.service.js":"70","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\TaskReport.js":"71","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\DraftTask.js":"72","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\TaskSidebar.js":"73","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\layouts\\FormInput.js":"74","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\company\\calendar\\calendarAction.js":"75","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\calendar\\ManageCalendar.js":"76","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\types.js":"77","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\TaskDetails.js":"78","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\reducers\\task\\taskReducer.js":"79"},{"size":8160,"mtime":1610788589015,"results":"80","hashOfConfig":"81"},{"size":1217,"mtime":1610820161460,"results":"82","hashOfConfig":"81"},{"size":1657,"mtime":1610793879597,"results":"83","hashOfConfig":"81"},{"size":1124,"mtime":1610710066658,"results":"84","hashOfConfig":"81"},{"size":2751,"mtime":1610818108597,"results":"85","hashOfConfig":"81"},{"size":3623,"mtime":1610738465574,"results":"86","hashOfConfig":"81"},{"size":1235,"mtime":1610725650059,"results":"87","hashOfConfig":"81"},{"size":1949,"mtime":1610819425471,"results":"88","hashOfConfig":"81"},{"size":7632,"mtime":1610737450113,"results":"89","hashOfConfig":"81"},{"size":8696,"mtime":1610817116402,"results":"90","hashOfConfig":"81"},{"size":1797,"mtime":1610789117169,"results":"91","hashOfConfig":"81"},{"size":5619,"mtime":1610790959240,"results":"92","hashOfConfig":"81"},{"size":6801,"mtime":1610789952664,"results":"93","hashOfConfig":"81"},{"size":15751,"mtime":1610704296693,"results":"94","hashOfConfig":"81"},{"size":13516,"mtime":1610534276860,"results":"95","hashOfConfig":"81"},{"size":2095,"mtime":1610807397226,"results":"96","hashOfConfig":"81"},{"size":1115,"mtime":1610534276937,"results":"97","hashOfConfig":"81"},{"size":2125,"mtime":1610534276929,"results":"98","hashOfConfig":"81"},{"size":3719,"mtime":1610534276935,"results":"99","hashOfConfig":"81"},{"size":5517,"mtime":1609184403925,"results":"100","hashOfConfig":"81"},{"size":1432,"mtime":1610728784699,"results":"101","hashOfConfig":"81"},{"size":511,"mtime":1610534276975,"results":"102","hashOfConfig":"81"},{"size":969,"mtime":1608033584895,"results":"103","hashOfConfig":"81"},{"size":1166,"mtime":1610534276895,"results":"104","hashOfConfig":"81"},{"size":409,"mtime":1610534276896,"results":"105","hashOfConfig":"81"},{"size":833,"mtime":1610704297048,"results":"106","hashOfConfig":"81"},{"size":1672,"mtime":1610807910842,"results":"107","hashOfConfig":"81"},{"size":479,"mtime":1610793944514,"results":"108","hashOfConfig":"81"},{"size":29165,"mtime":1610729117839,"results":"109","hashOfConfig":"81"},{"size":338,"mtime":1610534276841,"results":"110","hashOfConfig":"81"},{"size":4616,"mtime":1610534276900,"results":"111","hashOfConfig":"81"},{"size":1898,"mtime":1610534276845,"results":"112","hashOfConfig":"81"},{"size":831,"mtime":1610818290714,"results":"113","hashOfConfig":"81"},{"size":4721,"mtime":1610737240848,"results":"114","hashOfConfig":"81"},{"size":1608,"mtime":1610717346869,"results":"115","hashOfConfig":"81"},{"size":1101,"mtime":1610824722583,"results":"116","hashOfConfig":"81"},{"size":2142,"mtime":1610534276936,"results":"117","hashOfConfig":"81"},{"size":2492,"mtime":1610704296696,"results":"118","hashOfConfig":"81"},{"size":3772,"mtime":1610534276864,"results":"119","hashOfConfig":"81"},{"size":1351,"mtime":1610534276896,"results":"120","hashOfConfig":"81"},{"size":397,"mtime":1610534276899,"results":"121","hashOfConfig":"81"},{"size":944,"mtime":1610720270865,"results":"122","hashOfConfig":"81"},{"size":16253,"mtime":1610790703622,"results":"123","hashOfConfig":"81"},{"size":1885,"mtime":1610739971539,"results":"124","hashOfConfig":"81"},{"size":1492,"mtime":1610737045714,"results":"125","hashOfConfig":"81"},{"size":6198,"mtime":1610729179021,"results":"126","hashOfConfig":"81"},{"size":3311,"mtime":1610725981593,"results":"127","hashOfConfig":"81"},{"size":4486,"mtime":1610726055323,"results":"128","hashOfConfig":"81"},{"size":4888,"mtime":1610727236322,"results":"129","hashOfConfig":"81"},{"size":2202,"mtime":1610818717358,"results":"130","hashOfConfig":"81"},{"size":1825,"mtime":1610789079462,"results":"131","hashOfConfig":"81"},{"size":2178,"mtime":1610739593559,"results":"132","hashOfConfig":"81"},{"size":9217,"mtime":1610738178891,"results":"133","hashOfConfig":"81"},{"size":1695,"mtime":1609337774030,"results":"134","hashOfConfig":"81"},{"size":556,"mtime":1609337775082,"results":"135","hashOfConfig":"81"},{"size":385,"mtime":1609337773316,"results":"136","hashOfConfig":"81"},{"size":4735,"mtime":1610534276879,"results":"137","hashOfConfig":"81"},{"size":2889,"mtime":1610788563048,"results":"138","hashOfConfig":"81"},{"size":8524,"mtime":1610807564847,"results":"139","hashOfConfig":"81"},{"size":725,"mtime":1610704296586,"results":"140","hashOfConfig":"81"},{"size":1397,"mtime":1610535451343,"results":"141","hashOfConfig":"81"},{"size":1880,"mtime":1610132857604,"results":"142","hashOfConfig":"81"},{"size":2929,"mtime":1610534276857,"results":"143","hashOfConfig":"81"},{"size":7887,"mtime":1610534276884,"results":"144","hashOfConfig":"81"},{"size":248,"mtime":1610704296850,"results":"145","hashOfConfig":"81"},{"size":2265,"mtime":1610534276934,"results":"146","hashOfConfig":"81"},{"size":18027,"mtime":1609337774484,"results":"147","hashOfConfig":"81"},{"size":375,"mtime":1609337774996,"results":"148","hashOfConfig":"81"},{"size":909,"mtime":1610534276847,"results":"149","hashOfConfig":"81"},{"size":1310,"mtime":1610825291913,"results":"150","hashOfConfig":"81"},{"size":5191,"mtime":1610817464132,"results":"151","hashOfConfig":"81"},{"size":15112,"mtime":1610825291901,"results":"152","hashOfConfig":"81"},{"size":3713,"mtime":1610817713238,"results":"153","hashOfConfig":"81"},{"size":2712,"mtime":1610805209406,"results":"154","hashOfConfig":"81"},{"size":1503,"mtime":1610821776666,"results":"155","hashOfConfig":"81"},{"size":14251,"mtime":1610824390506,"results":"156","hashOfConfig":"81"},{"size":3183,"mtime":1610819088306,"results":"157","hashOfConfig":"81"},{"size":8184,"mtime":1610825291902,"results":"158","hashOfConfig":"81"},{"size":1472,"mtime":1610825291911,"results":"159","hashOfConfig":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"lqflwm",{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"169"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"191"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"169"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"169"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"191"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"169"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"169"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\user\\ChangePassword.js",["330","331"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\reducers\\company\\calendar\\calendarReducer.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\EventCard.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\TodoCard.js",["332"],"// React\r\nimport { React, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nconst CardTemplate = ({title, dueDate}) =>{\r\n\r\n    return(\r\n        <div className=\"bg-white shadow pace-roundy px-4 py-3 d-flex align-items-center justify-content-between mb-4\">\r\n            <div className=\"flex-grow-1 d-flex align-items-center\">\r\n                <div className=\"pace-bg-accent dot mr-3\"></div>\r\n                <div className=\"text\">\r\n                    <h6 className=\"mb-0\">{ title }</h6><span className=\"text-gray\">{ dueDate }</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TodoCard = () =>{\r\n  \r\n    const { todos } = useSelector((state)=>state.todos);\r\n    const { title, dueDate } = todos[0];\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    \r\n    // Convert the DueDate to Day, Month date, year format\r\n    const formatedDueDate = new Date(dueDate).toLocaleDateString(\"en-US\", options);\r\n        \r\n    return(\r\n        <CardTemplate title={title} dueDate={formatedDueDate} />\r\n    )\r\n};\r\n\r\n\r\nexport default TodoCard;",["333","334"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\root-endpoints.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\index.js",[],["335","336"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\todo.service.js",["337"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\todo\\todoAction.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\Login.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Navbar.js",["338","339","340","341","342","343","344","345","346"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\user.service.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Dashboard.js",["347","348"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\user\\Profile.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\AddEmployee.js",[],["349","350"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\Settings\\UpdateCompanyProfile.js",["351","352","353"],"// React\r\nimport axios from 'axios';\r\nimport { ErrorMessage, Form, Formik,Field } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Button from '../../layouts/Button';\r\nimport { TextInput } from '../../layouts/FormInput';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { authHeader, currentUserCompanyID } from '../../../services/auth-header';\r\nimport { FETCH_COMPANY_PROFILE_API } from '../../../services/root-endpoints';\r\nimport CompanyService from '../../../services/company/company-service';\r\n\r\nconst UpdateCompanyProfile = () =>{\r\n    const params = useParams();\r\n    const dispatch = useDispatch()\r\n    // const { currentUser } = useSelector(state => state.authenticationState)\r\n    // const [ staffID, setStaffID ] = useState('')\r\n    const [companyProfile, setCompanyProfile] = useState({\r\n        companyName: '',\r\n        companyType: '',\r\n        companyAdjective: '',\r\n        email: '',\r\n        currency: '',\r\n    })\r\n    useEffect(() => {\r\n        const fetchCompanyProfile = async() =>{\r\n           const { data } = await axios.get(FETCH_COMPANY_PROFILE_API + currentUserCompanyID, { headers: authHeader })\r\n           setCompanyProfile(data.data[0])\r\n        }\r\n\r\n        fetchCompanyProfile()\r\n        \r\n    }, [])\r\n\r\n    return ( \r\n        <>\r\n            <div className=\"container\">\r\n                {/* Breadcrumb */}\r\n                <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb mt-2 ml-4\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to='/dashboard/company/settings' className=\"text-grey\">\r\n                                        Settings\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to={`/dashboard/company/profile/${2}`} className=\"text-grey\">\r\n                                        Company Profile\r\n                                </Link>\r\n                            </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Edit Company Profile</li>\r\n                        </ol>\r\n                    </nav>\r\n                    \r\n                    {/* /Breadcrumb */}\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"main-body\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                                <Formik\r\n                                    initialValues = {companyProfile}\r\n                                    enableReinitialize\r\n                                    // validationSchema={UpdateCompanyProfileSchema}\r\n                                    onSubmit={(values, action)=>{\r\n                                        CompanyService.updateCompanyProfile(values, action)\r\n                                        .then(()=>alert('kkk'))\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    { (({ values, touched, errors, handleSubmit, isSubmitting, resetForm })=>{\r\n                                        return <Form onSubmit={handleSubmit}>\r\n                                            <div className=\"mb-5 text-gray\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n                                                <h5>EDIT COMPANY PROFILE</h5>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* COMPANY NAME */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Company Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"companyName\"\r\n                                                        id=\"companyName\"\r\n                                                        placeholder=\"Update Company Name\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.companyName && errors.companyName ? \"is-invalid\" : \"\"}`} \r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"companyName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                             {/* COMPANY TYPE */}\r\n                                             <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Company Type</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"companyType\"\r\n                                                        id=\"companyType\"\r\n                                                        placeholder=\"Update Company Type\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.companyType && errors.companyType ? \"is-invalid\" : \"\"}`} \r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"companyType\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                            \r\n                                             {/* COMPANY CURRENCY */}\r\n                                             <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Currency</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"currency\"\r\n                                                        id=\"currency\"\r\n                                                        placeholder=\"Update Company Currency\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.currency && errors.currency ? \"is-invalid\" : \"\"}`} \r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"currency\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                             {/* COMPANY ADJECTIVE */}\r\n                                             <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Company Adjective</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"companyAdjective\"\r\n                                                        id=\"companyAdjective\"\r\n                                                        placeholder=\"Update Company Adjective\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.companyAdjective && errors.companyAdjective ? \"is-invalid\" : \"\"}`} \r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"companyAdjective\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* EMAIL ADDRESS */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Email Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"email\"\r\n                                                        placeholder=\"Enter Valid Email Address\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.email && errors.email ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"email\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"email\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Updating...</span>) : \"Update\"}\r\n                                                    className=\"btn pace-btn-primary\" \r\n                                                />\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    className=\"btn pace-btn-accent d-none\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Please wait...</span>) : \"Reset\"}\r\n                                                    onClick={(()=>resetForm())} \r\n                                                />\r\n                                            </div>\r\n                                        </Form>\r\n                                    })\r\n                                }\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateCompanyProfile;\r\n","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\MostActiveEmployee.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\timer\\HourTimerScreen.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\Cards.js",["354"],"import { React, Component } from 'react';\r\nimport Card from './Card';\r\n\r\nclass Cards extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <section className=\"py-5\" h='2' data-tut='reactour__taskCards'>\r\n                    <div className=\"row\">\r\n                        \r\n                        <Card\r\n                            \r\n                                title=\"Complete Task\"\r\n                                type=\"\"\r\n                                count=\"123\"\r\n                                icon=\"fa-server\"\r\n                                cardColor=\"pace-bg-accent\"\r\n                                style= {{ }}\r\n                                \r\n                        />\r\n                        <Card\r\n                            \r\n                                title=\"Pending Task\"\r\n                                type=\"\"\r\n                                count=\"123\"\r\n                                icon=\"fa-server\"\r\n                                cardColor=\"bg-green\"\r\n                                style= {{ }}\r\n                        \r\n                        />\r\n                        <Card\r\n                            \r\n                                title=\"Drafted Task\"\r\n                                type=\"\"\r\n                                count=\"123\"\r\n                                icon=\"fa-server\"\r\n                                cardColor=\"bg-red\"\r\n                                style= {{ }}\r\n                        \r\n                        />\r\n                        <Card\r\n                            \r\n                                title=\"Task Manager\"\r\n                                type=\"\"\r\n                                count=\"Click here\"\r\n                                icon=\"fa-server\"\r\n                                cardColor=\"pace-bg-primary\"\r\n                                style= {{ }}\r\n                        \r\n                        />\r\n                    </div>\r\n                </section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Cards;","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AllTasks.js",["355","356","357","358","359","360","361","362","363","364","365","366","367","368"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\Sample.js",["369","370","371","372","373","374","375","376","377","378"],"import React from 'react';\r\nimport unclebay from '../../../pages/pages-images/ayodele_samuel_adebayo.jpg';\r\nimport attachment from '../../../pages/pages-images/v.jpg';\r\n\r\nexport default function Sample() {\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"col task-util\">\r\n        <section className=\"card\">\r\n          <header className=\"card-header wht-bg\">\r\n            <h4 className=\"d-flex justify-content-between task-page-lead\">\r\n              View Task\r\n              <form action=\"#\" className=\"float-right mail-src-position\">\r\n                <div className=\"input-append\">\r\n                  <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search Mail\" />\r\n                </div>\r\n              </form>\r\n            </h4>\r\n          </header>\r\n          <div className=\"card-body\">\r\n            <div className=\"mail-header row\">\r\n              <div className=\"col-md-8\">\r\n                <h4 className=\"float-left task-title\">Build a new landing page</h4>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"compose-btn float-right\">\r\n                  <a href=\"mail_compose.html\" className=\"btn btn-sm btn-theme\"><i className=\"fa fa-reply\" /> Reply</a>\r\n                  <button className=\"btn  btn-sm tooltips\" data-original-title=\"Print\" type=\"button\" data-toggle=\"tooltip\" data-placement=\"top\" title><i className=\"fa fa-print\" /> </button>\r\n                  <button className=\"btn btn-sm tooltips\" data-original-title=\"Trash\" data-toggle=\"tooltip\" data-placement=\"top\" title><i className=\"fa fa-trash\" /></button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mail-sender\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                  <img src={unclebay} alt=\"sender\" className=\"sender-image mr-2\"/>\r\n                  <strong>Zac Doe</strong>\r\n                  <span>[zac@youremail.com]</span> to\r\n                  <strong>me</strong>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <p className=\"date float-right mr-2\"> 10:15AM 02 FEB 2014</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n              <hr />\r\n            <div className=\"view-mail\">\r\n              <p>As he bent his head in his most courtly manner, there was a secrecy in his smiling face, and he conveyed an air of mystery to those words, which struck the eyes and ears of his nephew forcibly. At the same time, the thin straight lines\r\n                of the setting of the eyes, and the thin straight lips, and the markings in the nose, curved with a sarcasm that looked handsomely diabolic. </p>\r\n              <p>\"Yes,\" repeated the Marquis. \"A Doctor with a daughter. Yes. So commences the new philosophy! You are fatigued. Good night!\"</p>\r\n              <p>It would have been of as much avail to interrogate any stone face outside the chateau as to interrogate that face of his. The nephew looked at him, in vain, in passing on to the door. </p>\r\n              <p>\"Good night!\" said the uncle. \"I look to the pleasure of seeing you again in the morning. Good repose! Light Monsieur my nephew to his chamber there!--And burn Monsieur my nephew in his bed, if you will,\" he added to himself, before\r\n                he rang his little bell again, and summoned his valet to his own bedroom.</p>\r\n            </div>\r\n            <div className=\"attachment-mail \">\r\n              <p>\r\n                <span><i className=\"fa fa-paperclip\" /> 2 attachments — </span>\r\n                <a href=\"#\">Download all attachments</a> |\r\n                <a href=\"#\">View all images</a>\r\n              </p>\r\n              <ul className=\"attachment-wrapper d-flex\">\r\n                <li>\r\n                  <a className=\"attachment-thumb mr-3\" href=\"#\">\r\n                    <img src={attachment} />\r\n                  </a>\r\n                  {/* <a className=\"name\" href=\"#\">\r\n                    IMG_001.jpg\r\n                    <span>20KB</span>\r\n                  </a> */}\r\n                  <div className=\"links\">\r\n                    <a href=\"#\">View</a> -\r\n                    <a href=\"#\">Download</a>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <a className=\"attachment-thumb\" href=\"#\">\r\n                    <img src={attachment} />\r\n                  </a>\r\n                  {/* <a className=\"name\" href=\"#\">\r\n                    IMG_001.jpg\r\n                    <span>20KB</span>\r\n                  </a> */}\r\n                  <div className=\"links\">\r\n                    <a href=\"#\">View</a> -\r\n                    <a href=\"#\">Download</a>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"compose-btn float-left\">\r\n              <a href=\"mail_compose.html\" className=\"btn btn-sm btn-theme\"><i className=\"fa fa-reply\"/> Reply</a>\r\n              <button className=\"btn btn-sm \"><i className=\"fa fa-arrow-right\" /> Forward</button>\r\n              <button className=\"btn  btn-sm tooltips\" data-original-title=\"Print\" type=\"button\" data-toggle=\"tooltip\" data-placement=\"top\" title><i className=\"fa fa-print\" /> </button>\r\n              <button className=\"btn btn-sm tooltips\" data-original-title=\"Trash\" data-toggle=\"tooltip\" data-placement=\"top\" title><i className=\"fa fa-trash-o\" /></button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\employee\\employeeAction.js",["379"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\company\\company-service.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\EscheduleCard.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\Button.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\Text.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\company\\department-service.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\TimerReport.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\NotificationCards.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\UpdateEmployeeProfile.js",["380","381","382","383","384","385"],"// React\r\nimport { ErrorMessage, Form, Formik,Field } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Button from '../../layouts/Button';\r\nimport { TextInput } from '../../layouts/FormInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCompanyEmployees, updateEmployeeBillingAndWorkHour } from '../../../actions/employee/employeeAction';\r\nimport { getDepartment } from '../../../actions/company/department/departmentAction';\r\nimport Loader from '../../loader/Loader';\r\nimport { profileUpdateCompletedLogger, profileUpdateFailLogger } from '../../../toaster';\r\n\r\n\r\nconst employeeDetailsDropDown = {\r\n    employeeRole: [\r\n        {\r\n            roleName: 'Super-Admin',\r\n            roleID: 1\r\n        },\r\n        {\r\n            roleName: 'Co-Admin',\r\n            roleID: 3\r\n        },\r\n        {\r\n            roleName: 'Internal-Admin',\r\n            roleID: 4\r\n        },\r\n        {\r\n            roleName: 'Employee',\r\n            roleID: 5\r\n        }\r\n\r\n    ],\r\n}\r\nconst availableRole = employeeDetailsDropDown.employeeRole.map(({roleName, roleID}, index)=><option value={roleID} key={index}>{roleName}</option>);\r\n\r\nconst UpdateEmployeeProfile = () =>{\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    // const [staffID, setStaffID] = useState('');\r\n\r\n    const { employees, isFetching } = useSelector(state => state.employees);\r\n    const { departments } = useSelector(state => state.departments)\r\n    const dispatch = useDispatch();\r\n    const [employeeProfile, setEmployeeProfile] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        address: '',\r\n        userName: '',\r\n    })\r\n    \r\n    \r\n    const companyDepartmentDropDown = departments.map(({departmentName, departmentID}, index)=><option value={departmentID} key={index}>{departmentName}</option>)\r\n    useEffect(() => {\r\n        // Fetch company employess\r\n        dispatch(getCompanyEmployees())\r\n\r\n        // Fetch company department\r\n        dispatch(getDepartment())\r\n    }, [dispatch])\r\n    useEffect(() => {\r\n        const getEmployeeProfile = employees.filter((employee)=>employee.staffID === parseInt(params.id))\r\n        if(getEmployeeProfile.length > 0){\r\n                setEmployeeProfile(getEmployeeProfile[0])\r\n                const {\r\n                    // firstName,\r\n                    // lastName,\r\n                    // phoneNumber,\r\n                    // email,\r\n                    // address,\r\n                    // userName,\r\n                    billRateCharge,\r\n                    expectedWorkHours,\r\n                    // staffRole,\r\n                    // roleID,\r\n                    // departmentID\r\n                } = getEmployeeProfile[0]\r\n            \r\n                // Set the destructure user information into the profile state (ES6 syntax)\r\n                setEmployeeProfile({\r\n                    // firstName,\r\n                    // lastName,\r\n                    // phoneNumber,\r\n                    // email,\r\n                    // address,\r\n                    // userName,\r\n                    billRateCharge,\r\n                    expectedWorkHours,\r\n                    // staffRole,\r\n                    // roleID,\r\n                    // departmentID\r\n                })\r\n            }else{\r\n                \r\n            }\r\n        }, [employees, params.id])\r\n        if(employeeProfile === undefined){\r\n            return(\r\n                <>\r\n                    <Loader  />\r\n                </>\r\n            )\r\n        }\r\n    return ( \r\n        <>\r\n            <div className=\"container\">\r\n                {/* Breadcrumb */}\r\n                <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb mt-2\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to='/dashboard/employee-list' className=\"text-grey\">\r\n                                        Employee List\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to={`/dashboard/employee/profile/${params.id}`} className=\"text-grey\">\r\n                                        Profile\r\n                                </Link>\r\n                            </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Edit Profile</li>\r\n                        </ol>\r\n                    </nav>\r\n                    \r\n                    {/* /Breadcrumb */}\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"main-body\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                                <Formik\r\n                                    initialValues = {employeeProfile}\r\n                                    enableReinitialize\r\n                                    // validationSchema={UpdateEmployeeProfileSchema}\r\n                                    onSubmit={(values, action)=>{\r\n                                        dispatch(updateEmployeeBillingAndWorkHour(values, action, params.id))\r\n                                        // .then((response)=> history.push('/dashboard/employee/profile/'))\r\n                                        .then((response)=> history.goBack())\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    { (({ values, touched, errors, handleSubmit, isSubmitting, resetForm })=>{\r\n                                        return <Form onSubmit={handleSubmit}>\r\n                                            <div className=\"mb-5 text-gray\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n                                                <h5>Update {employeeProfile.firstName} {employeeProfile.lastName} Billable</h5>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* FIRST NAME */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">First Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        placeholder=\"Enter Firstname\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.firstName && errors.firstName ? \"is-invalid\" : \"\"}`} \r\n                                                        readOnly\r\n\r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"firstName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* LAST NAME */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Last Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"lastName\"\r\n                                                        placeholder=\"Enter lastname\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.lastName && errors.lastName ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"lastName\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"lastName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* USERNAME */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Username</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"userName\"\r\n                                                        placeholder=\"Enter username\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.userName && errors.userName ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"userName\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"userName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n                                            \r\n                                            {/* EXPECTED WORK HOUR */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Expected Work Hour</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"expectedWorkHours\"\r\n                                                        placeholder=\"Enter expectedWorkHours\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.expectedWorkHours && errors.expectedWorkHours ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"expectedWorkHours\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"expectedWorkHours\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* BILL RATE CHARGE */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Bill Rate Charge</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"billRateCharge\"\r\n                                                        placeholder=\"Enter Bill Rate Charge\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.billRateCharge && errors.billRateCharge ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"billRateCharge\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"billRateCharge\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* PHONE NUMBER */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Phone Number</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"phone\"\r\n                                                        placeholder=\"Enter Phone Number\"\r\n                                                        type=\"tel\" \r\n                                                        className={`form-control ${touched.phone && errors.phone ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"phone\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"phone\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* EMAIL ADDRESS */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Email Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"email\"\r\n                                                        placeholder=\"Enter Valid Email Address\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.email && errors.email ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"email\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"email\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* CREATE PASSWORD */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">New Password</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"password\"\r\n                                                        placeholder=\"New Password\"\r\n                                                        type=\"password\" \r\n                                                        className={`form-control ${ touched.password && errors.password ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"password\"\r\n                                                        readOnly\r\n                                                        autoComplete=\"on\"\r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"password\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* CONFIRM PASSWORD */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Confirm Password</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"password2\"\r\n                                                        placeholder=\"Confirm Password\"\r\n                                                        type=\"password\" \r\n                                                        className={`form-control ${ touched.password2 && errors.password2 ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"password2\"\r\n                                                        readOnly\r\n                                                        autoComplete=\"on\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"password2\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* ADDRESS */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"address\"\r\n                                                        id=\"address\"\r\n                                                        type=\"text\" \r\n                                                        placeholder=\"143 work and connect\"\r\n                                                        className={`form-control ${touched.address && errors.address ? \"is-invalid\" : \"\"}`}\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"address\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* Role */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Role</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <Field component=\"select\" name=\"roleID\" className=\"form-control\"\r\n                                                        readOnly\r\n                                                    >\r\n                                                        <option selected>Choose...</option>\r\n                                                        {availableRole}\r\n                                                    </Field>\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"roleID\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n\r\n\r\n                                            {/* EMPLOYEE POSITION */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Position</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"staffRole\"\r\n                                                        placeholder=\"Enter Position\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.staffRole && errors.staffRole ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"staffRole\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"staffRole\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n                                           \r\n                                            {/* DEPARTMENT */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Department</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <Field component=\"select\" name=\"departmentID\" className=\"form-control\"\r\n                                                        readOnly\r\n                                                    >\r\n                                                        <option selected>Choose...</option>\r\n                                                        {companyDepartmentDropDown}\r\n                                                    </Field>\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"departmentID\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n                                            \r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Updating</span>) : \"Update\"}\r\n                                                    className=\"btn pace-btn-primary\" \r\n                                                />\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    className=\"btn pace-btn-accent d-none\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Please wait...</span>) : \"Reset\"}\r\n                                                    onClick={(()=>resetForm())} \r\n                                                />\r\n                                            </div>\r\n                                        </Form>\r\n                                    })\r\n                                }\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateEmployeeProfile;\r\n","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\_helper\\dateFormatter.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\tourConfig.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\company\\department\\departmentAction.js",["386"],"import { \r\n    OPEN_NEW_FORM, \r\n    CLOSE_NEW_FORM, \r\n    ADD_DEPARTMENT, \r\n    ERROR_DEPARTMENT, \r\n    DEPARTMENT_ERROR,\r\n    DELETE_DEPARTMENT,\r\n    FETCH_COMPANY_DEPARTMENT\r\n} from \"../../types\";\r\n\r\nimport DepartmentService from '../../../services/company/department-service'\r\n\r\n// Open new employee form\r\nconst openForm = () => (dispatch) =>{\r\n    dispatch({\r\n        type: OPEN_NEW_FORM\r\n    })\r\n}\r\n\r\n// Close new department form\r\nconst closeForm = () => (dispatch) =>{\r\n    dispatch({\r\n        type: CLOSE_NEW_FORM\r\n    })\r\n}\r\n\r\nconst getDepartment = () => (dispatch) =>{\r\n    return DepartmentService.fetchDepartment()\r\n    .then((response)=>{\r\n        const companyDepartment = response.data.data;\r\n        dispatch({type: FETCH_COMPANY_DEPARTMENT, payload: companyDepartment})\r\n    })\r\n    .catch((error)=>console.log(error))\r\n}\r\n\r\n// Add new department\r\nconst addDepartment = (values , companyID) => (dispatch) =>{\r\n    return DepartmentService.postNewDepartment(values, companyID)\r\n    .then((response)=>{\r\n        dispatch({\r\n            type: ADD_DEPARTMENT,\r\n            payload: response.data.data\r\n        })\r\n        // dispatch(getDepartment())\r\n    })\r\n    .catch((error)=>{\r\n        dispatch({\r\n            type: DEPARTMENT_ERROR,\r\n            payload: error\r\n        })\r\n    });\r\n};\r\n\r\n// Edit department\r\nconst editDepartment = (departmentID) => (dispatch) =>{\r\n    return DepartmentService.editDepartment(departmentID);\r\n};\r\n\r\n// Delete department\r\nconst deleteDepartment = (departmentID) => (dispatch) =>{\r\n    // Delete Department Record from the UI\r\n    dispatch({\r\n        type: DELETE_DEPARTMENT,\r\n        payload: departmentID\r\n    })\r\n    // Then delete from the server\r\n    // return DepartmentService.deleteDepartment(departmentID);\r\n}\r\n\r\n\r\nexport {\r\n    openForm,\r\n    closeForm,\r\n    addDepartment,\r\n    editDepartment,\r\n    deleteDepartment,\r\n    getDepartment\r\n}","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\company\\calendar\\calendarService.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\auth.service.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\reducers\\authentication\\authReducer.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\auth-header.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AssignedTasks.js",["387","388","389","390","391","392"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\EmployeeList.js",["393"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\department\\NewDepartmentForm.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\Glitch.js",["394"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\settings.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\App.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\user\\UpdateProfile.js",["395","396"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Navbar.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\employee\\employee.service.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\EmployeeProfile.js",["397"],"// React\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { getCompanyEmployees } from '../../../actions/employee/employeeAction';\r\nimport Button from '../../layouts/Button';\r\nimport Loader from '../../loader/Loader';\r\nimport unclebay from '../../pages/pages-images/ayodele_samuel_adebayo.jpg';\r\n\r\n\r\n\r\nconst ProfileRow = (props) => {\r\n    const { title, label } = props\r\n    return(\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-3\">\r\n                <h6 className=\"mb-0\">{title}</h6>\r\n                </div>\r\n                <div className=\"col-sm-9 text-secondary\">\r\n                    {label}\r\n                </div>\r\n            </div>\r\n            <hr />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst EmployeeProfile = () =>{\r\n    const params = useParams()\r\n    const { employees, isFetching } = useSelector(state => state.employees)\r\n    const [ employeeProfile, setEmployeeProfile ] = useState([{}])\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        // fetch the company's employees from the server\r\n        dispatch(getCompanyEmployees())\r\n    },[dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        const getEmployeeProfile = employees.filter((employee)=>employee.staffID === parseInt(params.id))\r\n        setEmployeeProfile(getEmployeeProfile[0])\r\n    }, [employees, params.id, setEmployeeProfile])\r\n\r\n    if(employeeProfile === undefined){\r\n        return(\r\n            <>\r\n                <Loader />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const fullName = employeeProfile.firstName + ' ' + employeeProfile.lastName\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"main-body\">\r\n                    {/* Breadcrumb */}\r\n                    <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb mt-2\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to='/dashboard/employee-list' className=\"text-grey\">\r\n                                        Employee List\r\n                                </Link>\r\n                            </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Profile</li>\r\n                        </ol>\r\n                    </nav>\r\n                    \r\n                    {/* /Breadcrumb */}\r\n                    <div className=\"row gutters-sm mt-3\">\r\n                        <div className=\"col-md-4 mb-3\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                        {/* <img src=\"https://bootdey.com/img/Content/avatar/avatar7.png\" alt=\"Admin\" className=\"rounded-circle\" width={150} /> */}\r\n                                        <img src={unclebay} alt=\"Admin\" className=\"rounded-circle\" width={150} />\r\n                                        <div className=\"mt-3\">\r\n                                            <h4 className=\"text-capitalize\">{employeeProfile.firstName === undefined ? '' : employeeProfile.firstName} {employeeProfile.lastName === undefined ? '' : employeeProfile.lastName}</h4>\r\n                                            {/* <h4>{employeeProfile.id} </h4> */}\r\n                                            {/* <h4>{params.id} </h4> */}\r\n                                            <p className=\"text-secondary mb-1\">Frontend Engineer</p>\r\n                                            {/* <p className=\"text-muted font-size-sm\">{employeeProfile.address.street}</p> */}\r\n                                            <Link to={`/dashboard/employee/profile/update/${params.id}`}>\r\n                                                <Button className=\"btn btn-primary m-2 mr-2\" label=\"Update  \"/>\r\n                                            </Link>\r\n                                            <Button className=\"btn btn-danger m-2\" label=\"Disable\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    {/* <ProfileRow title=\"Full Name\" label={ ` ${employeeProfile.firstName} ${employeeProfile.LastName}` } /> */}\r\n                                    <ProfileRow title=\"Full Name\" label={ ` ${fullName === undefined ? ' smam ' : fullName}` } />\r\n                                    <ProfileRow title=\"Email\" label={employeeProfile.email} />\r\n                                    <ProfileRow title=\"Department\" label=\"Web development\" />\r\n                                    <ProfileRow title=\"Role\" label=\"Frontend Engineer\" />\r\n                                    <ProfileRow title=\"Salary\" label={ `# ${employeeProfile.billRateCharge === null ? '' : employeeProfile.billRateCharge}` } />\r\n                                    <ProfileRow title=\"Phone\" label={employeeProfile.phone} />\r\n                                    {/* <ProfileRow title=\"Address\" label={employeeProfile.address.city} /> */}\r\n                                    <ProfileRow title=\"Work Hours\" label={employeeProfile.expectedWorkHours} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmployeeProfile;\r\n","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\reducers\\todo\\todoReducer.js",["398"],"import { \r\n    FETCH_TODOS_PENDING, \r\n    FETCH_TODOS_SUCCESS, \r\n    FETCH_TODOS_ERROR,\r\n    OPEN_TODO_FORM,\r\n    CLOSE_TODO_FORM,\r\n    UPDATE_TODO, \r\n    ADD_TODO, \r\n    DELETE_TODO,\r\n    TOGGLE_TODO_COMPLETE,\r\n} from \"../../actions/types\";\r\n\r\n\r\n// Initial state\r\nconst initialState = {\r\n    isFetching: false,\r\n    todos: [\r\n        {\r\n            title: 'Todo Card',\r\n            dueDate: Date.now()\r\n        }\r\n    ],\r\n    error: null,\r\n    isTodoFormOpen: false\r\n}\r\n\r\n// Function to generate id for new todo\r\nconst generateId = (todos) =>{\r\n    const currentMaxId = todos.reduce(( currentMaxId, todo ) => Math.max(todo.id, currentMaxId), -1)\r\n    return currentMaxId + 1\r\n}\r\n\r\n\r\n// Reducer that modifiy the state according to dispatched actions\r\nconst todoReducer = (state=initialState, action) =>{\r\n    const { type, payload } = action\r\n    switch(type){\r\n        case FETCH_TODOS_PENDING:\r\n            return {\r\n                 ...state,\r\n                 isFetching: true,\r\n                }\r\n        case FETCH_TODOS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                todos: payload\r\n            }\r\n        case FETCH_TODOS_ERROR:\r\n            return {\r\n                ...state,\r\n                // If todo is empty then create a new object else return the todos\r\n                todos: state.todos.length === 0 ? {} : state.todos,\r\n                isFetching: false,\r\n                error: action.error\r\n            }\r\n        case OPEN_TODO_FORM:\r\n            return {\r\n                ...state,\r\n                isTodoFormOpen: true\r\n            }\r\n        case CLOSE_TODO_FORM:\r\n            return {\r\n                ...state, \r\n                isTodoFormOpen: false\r\n            }\r\n        case ADD_TODO:\r\n            const { title, dueDate, toDoID } = payload;\r\n            return {\r\n                // Return everything in the state\r\n                ...state,\r\n                // But modify todos\r\n                todos: [ \r\n                    // Add new todo from payload (to the top of the existing todos)\r\n                    {\r\n                        toDoID: toDoID,\r\n                        title: title,\r\n                        dueDate: dueDate,\r\n                        completed: false\r\n                    },\r\n                    // Return everything in todos\r\n                    ...state.todos\r\n                ] \r\n            }\r\n\r\n        case UPDATE_TODO:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map( todo => todo.id === payload.id ? ( todo = payload ) : todo\r\n                )\r\n            }\r\n\r\n        case DELETE_TODO:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter((todo)=> todo.id !== payload )\r\n            }\r\n        \r\n        case TOGGLE_TODO_COMPLETE:\r\n            return Object.assign({}, state, {\r\n                todos: state.todos.map((todo)=>{\r\n                    if(todo.id !== payload){\r\n                        return todo\r\n                    }\r\n\r\n                    return Object.assign({}, todo, {\r\n                        completed: !todo.completed\r\n                    });\r\n                })\r\n            })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todoReducer;\r\n\r\n\r\n","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\TodoRows.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\TodoForm.js",["399"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\toaster\\index.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\user\\userAction.js",["400","401","402"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\IndexArea.js",["403"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\Pricing.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\pages-js\\TypeWriter.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\rough\\Test.js",["404","405","406"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\Store.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Footer.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\Validation\\Schema.js",["407"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Sidebar.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\auth\\authAction.js",["408"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\TourContainer.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\BillingReport.js",["409","410"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\Settings\\Settings.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\Features.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\loader\\Loader.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AcceptedTasks.js",["411","412","413"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\TaskInboxSample.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\reducers\\message\\messageReducer.js",["414"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\task\\acceptedTaskAction.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\services\\task.service.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\TaskReport.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\DraftTask.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\TaskSidebar.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\layouts\\FormInput.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\company\\calendar\\calendarAction.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\company\\calendar\\ManageCalendar.js",["415"],"import React, { useEffect, useState } from 'react';\r\nimport { ErrorMessage, Form, Formik } from 'formik';\r\nimport { TextInput } from '../../layouts/FormInput';\r\nimport Button from '../../layouts/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { addNewCalendarEvent, deleteCalendarEvent, getCalendarEvent } from '../../../actions/company/calendar/calendarAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../../loader/Loader';\r\nimport { formatDate } from '../../../_helper/dateFormatter';\r\nimport { date } from 'yup';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { eventDeletedSuccessfullyLogger, eventNotDeletedLogger } from '../../../toaster';\r\n\r\n\r\nexport default function ManageCalendar() {\r\n    const { events, isFetching } = useSelector(state => state.calendar);\r\n    const [eventsState, setEventsState] = useState([]);\r\n    const [ isFetchingState, setIsFetchingState ] = useState(isFetching);\r\n    const [ editMode, setEditMode ] = useState(false);\r\n    const [ eventInEditMode, setEventInEditMode ] = useState({});\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCalendarEvent())\r\n    }, [dispatch]);\r\n    \r\n    useEffect(() => {\r\n        if(events){\r\n            setEventsState(events)\r\n            setIsFetchingState(false)\r\n        }\r\n    }, [events]);\r\n\r\n    const handleDelete = (eventID) =>{\r\n        dispatch(deleteCalendarEvent(eventID))\r\n        .then((response)=>{\r\n            console.log(response)\r\n            eventDeletedSuccessfullyLogger()\r\n            // history.push('/dashboard/calendar')\r\n        })\r\n        .catch((error)=>{\r\n            eventNotDeletedLogger()\r\n        })\r\n    }\r\n\r\n    const handleEdit = (eventID, title, end) =>{\r\n        setEventInEditMode({\r\n            eventID,\r\n            title,\r\n            end\r\n        })\r\n        // console.log(stageEventForEdit)\r\n        setEditMode(true)\r\n        \r\n    }\r\n\r\n    if(isFetchingState){\r\n        return(\r\n            <Loader />\r\n        )\r\n    }\r\n\r\n   \r\n    return (\r\n        <>\r\n\r\n            <style>\r\n                {\r\n                    `\r\n                    .rbc-calendar {\r\n                        min-height: 500px ;\r\n                        }\r\n                    `\r\n                }\r\n            </style>\r\n            <div className=\"py-3\">\r\n                {/* Breadcrumb */}\r\n                <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            <Link to='/dashboard/calendar'>\r\n                                Calendar\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            Manage Calendar\r\n                        </li>\r\n                        </ol>\r\n                    </nav>\r\n                \r\n                {/* /Breadcrumb */}\r\n            <div className=\"\">\r\n                <section className=\"\">\r\n                    <div className=\"mb-3\">\r\n                            {\r\n                                !editMode ?\r\n                                (\r\n                                    \r\n                                    //  EDIT EVENT MODE\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <Formik \r\n                                            enableReinitialize\r\n                                            initialValues={eventInEditMode}\r\n                                            onSubmit={((values, action)=>{\r\n                                                dispatch(addNewCalendarEvent(values, action))\r\n                                                .then((response)=>{\r\n                                                    history.push('/dashboard/calendar')\r\n                                                })\r\n                                            })}\r\n                                        >\r\n                                        {({errors, touched, values, isSubmitting})=>(\r\n                                            <Form className=\"form-inline\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <TextInput \r\n                                                        name=\"title\"\r\n                                                        type=\"title\"\r\n                                                        className={`form-control p-2 ${\r\n                                                            touched.title && errors.title ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        id=\"title\"\r\n                                                        placeholder=\"Enter New Event\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"title\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <TextInput \r\n                                                        name=\"end\"\r\n                                                        type=\"datetime-local\"\r\n                                                        className={`form-control p-2 ${\r\n                                                            touched.end && errors.end ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        id=\"end\"\r\n                                                        placeholder=\"Enter New Event\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <Button \r\n                                                        type=\"submit\"\r\n                                                        label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i>Updating Event</span>) : \"Update Event\"}\r\n                                                        className=\"btn btn-sm btn-info ml-2\"\r\n                                                    />\r\n                                                </div>\r\n                                                \r\n                                                <div className=\"input-group mb-2 mr-sm ml-lg- pl-lg-\" style={{marginLeft: '280px'}}>\r\n                                                    <Button \r\n                                                        icon=\"fa fa-back-arrow\"\r\n                                                        type=\"button\"\r\n                                                        label=\"New Event\"\r\n                                                        className=\"btn btn-sm btn-info ml-2\"\r\n                                                    />\r\n                                                </div>\r\n                                            </Form>\r\n                                        )}\r\n                                        </Formik>\r\n                                    </div>\r\n                            )\r\n                            :\r\n                            (\r\n\r\n                                // ADD EVENT MODE\r\n                                // <div className=\"mb-3\">\r\n                                    <Formik \r\n                                        enableReinitialize\r\n                                        initialValues={{\r\n                                            eventName: '',\r\n                                            eventDateAndTime: ''\r\n                                        }}\r\n                                        onSubmit={((values, action)=>{\r\n                                            dispatch(addNewCalendarEvent(values, action))\r\n                                            .then((response)=>{\r\n                                                history.push('/dashboard/calendar')\r\n                                            })\r\n                                        })}\r\n                                        >\r\n                                        {({errors, touched, values, isSubmitting})=>(\r\n                                            <Form className=\"form-inline\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <TextInput \r\n                                                        name=\"eventName\"\r\n                                                        type=\"eventName\"\r\n                                                        className={`form-control p-2 ${\r\n                                                            touched.eventName && errors.eventName ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        id=\"eventName\"\r\n                                                        placeholder=\"Enter New Event\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"eventName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <TextInput \r\n                                                        name=\"eventDateAndTime\"\r\n                                                        type=\"datetime-local\"\r\n                                                        className={`form-control p-2 ${\r\n                                                            touched.eventDateAndTime && errors.eventDateAndTime ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        id=\"eventDateAndTime\"\r\n                                                        placeholder=\"Enter New Event\"\r\n                                                        />\r\n                                                </div>\r\n                                                <div className=\"input-group mb-2 mr-sm-2\">\r\n                                                    <Button \r\n                                                        type=\"button\"\r\n                                                        label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Creating Event</span>) : \"Create Event\"}\r\n                                                        className=\"btn btn-sm btn-info ml-2\"\r\n                                                        />\r\n                                                </div>\r\n                        \r\n                                            </Form>\r\n                                        )}\r\n                                    </Formik>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    <div col=\"col-9\">\r\n                        <section>\r\n                            <ul className=\"list-group\">\r\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center h5\">\r\n                                <span>Event Name</span>\r\n                                {/* <span className=\"mr-5 pr-5\">Event Name</span> */}\r\n                            </li>\r\n\r\n                                {\r\n                                    eventsState.map(({title, end, eventID}, index)=>{\r\n                                        return(\r\n                                            <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={index}>\r\n                                                <span>\r\n                                                {title}\r\n                                                </span>\r\n                                                <section>\r\n                                                    <span className=\"text-center mr-5 pr-5\">\r\n                                                        {formatDate(end)}\r\n                                                    </span>\r\n                                                    <span className=\"   \">\r\n                                                        <button className=\"btn text-white badge badge-primary badge-pill mr-2\" onClick={(()=>handleEdit(eventID, title, end))}>Edit</button>\r\n                                                        <button className=\"btn text-white badge badge-red badge-pill\" onClick={(()=>handleDelete(eventID))}>Delete</button>\r\n                                                    </span>\r\n                                                </section>\r\n                                            </li>\r\n                                        )\r\n\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </section>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\types.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\TaskDetails.js",["416","417","418","419","420"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\reducers\\task\\taskReducer.js",[],{"ruleId":"421","severity":1,"message":"422","line":12,"column":12,"nodeType":"423","messageId":"424","endLine":12,"endColumn":19},{"ruleId":"425","severity":1,"message":"426","line":20,"column":8,"nodeType":"427","endLine":20,"endColumn":10,"suggestions":"428"},{"ruleId":"421","severity":1,"message":"429","line":2,"column":17,"nodeType":"423","messageId":"424","endLine":2,"endColumn":26},{"ruleId":"430","replacedBy":"431"},{"ruleId":"432","replacedBy":"433"},{"ruleId":"430","replacedBy":"434"},{"ruleId":"432","replacedBy":"435"},{"ruleId":"421","severity":1,"message":"436","line":5,"column":22,"nodeType":"423","messageId":"424","endLine":5,"endColumn":40},{"ruleId":"421","severity":1,"message":"437","line":5,"column":16,"nodeType":"423","messageId":"424","endLine":5,"endColumn":24},{"ruleId":"421","severity":1,"message":"438","line":16,"column":10,"nodeType":"423","messageId":"424","endLine":16,"endColumn":21},{"ruleId":"421","severity":1,"message":"439","line":16,"column":23,"nodeType":"423","messageId":"424","endLine":16,"endColumn":50},{"ruleId":"421","severity":1,"message":"436","line":16,"column":52,"nodeType":"423","messageId":"424","endLine":16,"endColumn":70},{"ruleId":"421","severity":1,"message":"440","line":21,"column":11,"nodeType":"423","messageId":"424","endLine":21,"endColumn":18},{"ruleId":"421","severity":1,"message":"441","line":23,"column":26,"nodeType":"423","messageId":"424","endLine":23,"endColumn":36},{"ruleId":"425","severity":1,"message":"442","line":40,"column":8,"nodeType":"427","endLine":40,"endColumn":18,"suggestions":"443"},{"ruleId":"444","severity":1,"message":"445","line":79,"column":29,"nodeType":"446","endLine":79,"endColumn":182},{"ruleId":"444","severity":1,"message":"445","line":133,"column":29,"nodeType":"446","endLine":133,"endColumn":158},{"ruleId":"421","severity":1,"message":"447","line":30,"column":10,"nodeType":"423","messageId":"424","endLine":30,"endColumn":25},{"ruleId":"421","severity":1,"message":"440","line":44,"column":11,"nodeType":"423","messageId":"424","endLine":44,"endColumn":18},{"ruleId":"430","replacedBy":"448"},{"ruleId":"432","replacedBy":"449"},{"ruleId":"421","severity":1,"message":"450","line":3,"column":37,"nodeType":"423","messageId":"424","endLine":3,"endColumn":42},{"ruleId":"421","severity":1,"message":"451","line":15,"column":11,"nodeType":"423","messageId":"424","endLine":15,"endColumn":17},{"ruleId":"421","severity":1,"message":"452","line":16,"column":11,"nodeType":"423","messageId":"424","endLine":16,"endColumn":19},{"ruleId":"453","severity":1,"message":"454","line":5,"column":5,"nodeType":"455","messageId":"456","endLine":7,"endColumn":6},{"ruleId":"421","severity":1,"message":"457","line":6,"column":25,"nodeType":"423","messageId":"424","endLine":6,"endColumn":37},{"ruleId":"421","severity":1,"message":"458","line":7,"column":10,"nodeType":"423","messageId":"424","endLine":7,"endColumn":18},{"ruleId":"421","severity":1,"message":"459","line":8,"column":10,"nodeType":"423","messageId":"424","endLine":8,"endColumn":21},{"ruleId":"421","severity":1,"message":"460","line":10,"column":8,"nodeType":"423","messageId":"424","endLine":10,"endColumn":14},{"ruleId":"421","severity":1,"message":"461","line":14,"column":18,"nodeType":"423","messageId":"424","endLine":14,"endColumn":28},{"ruleId":"421","severity":1,"message":"462","line":15,"column":11,"nodeType":"423","messageId":"424","endLine":15,"endColumn":20},{"ruleId":"421","severity":1,"message":"463","line":16,"column":10,"nodeType":"423","messageId":"424","endLine":16,"endColumn":19},{"ruleId":"425","severity":1,"message":"464","line":21,"column":6,"nodeType":"427","endLine":21,"endColumn":8,"suggestions":"465"},{"ruleId":"421","severity":1,"message":"466","line":48,"column":9,"nodeType":"423","messageId":"424","endLine":48,"endColumn":15},{"ruleId":"421","severity":1,"message":"467","line":101,"column":7,"nodeType":"423","messageId":"424","endLine":101,"endColumn":15},{"ruleId":"468","severity":1,"message":"469","line":126,"column":1,"nodeType":"446","endLine":126,"endColumn":62},{"ruleId":"468","severity":1,"message":"469","line":131,"column":7,"nodeType":"446","endLine":131,"endColumn":19},{"ruleId":"468","severity":1,"message":"469","line":132,"column":7,"nodeType":"446","endLine":132,"endColumn":19},{"ruleId":"468","severity":1,"message":"469","line":134,"column":7,"nodeType":"446","endLine":134,"endColumn":19},{"ruleId":"468","severity":1,"message":"469","line":60,"column":17,"nodeType":"446","endLine":60,"endColumn":29},{"ruleId":"468","severity":1,"message":"469","line":61,"column":17,"nodeType":"446","endLine":61,"endColumn":29},{"ruleId":"468","severity":1,"message":"469","line":65,"column":19,"nodeType":"446","endLine":65,"endColumn":65},{"ruleId":"470","severity":1,"message":"471","line":66,"column":21,"nodeType":"446","endLine":66,"endColumn":45},{"ruleId":"468","severity":1,"message":"469","line":73,"column":21,"nodeType":"446","endLine":73,"endColumn":33},{"ruleId":"468","severity":1,"message":"469","line":74,"column":21,"nodeType":"446","endLine":74,"endColumn":33},{"ruleId":"468","severity":1,"message":"469","line":78,"column":19,"nodeType":"446","endLine":78,"endColumn":60},{"ruleId":"470","severity":1,"message":"471","line":79,"column":21,"nodeType":"446","endLine":79,"endColumn":45},{"ruleId":"468","severity":1,"message":"469","line":86,"column":21,"nodeType":"446","endLine":86,"endColumn":33},{"ruleId":"468","severity":1,"message":"469","line":87,"column":21,"nodeType":"446","endLine":87,"endColumn":33},{"ruleId":"421","severity":1,"message":"472","line":3,"column":65,"nodeType":"423","messageId":"424","endLine":3,"endColumn":89},{"ruleId":"421","severity":1,"message":"450","line":2,"column":37,"nodeType":"423","messageId":"424","endLine":2,"endColumn":42},{"ruleId":"421","severity":1,"message":"473","line":12,"column":10,"nodeType":"423","messageId":"424","endLine":12,"endColumn":38},{"ruleId":"421","severity":1,"message":"474","line":12,"column":40,"nodeType":"423","messageId":"424","endLine":12,"endColumn":63},{"ruleId":"421","severity":1,"message":"475","line":36,"column":7,"nodeType":"423","messageId":"424","endLine":36,"endColumn":20},{"ruleId":"421","severity":1,"message":"461","line":43,"column":24,"nodeType":"423","messageId":"424","endLine":43,"endColumn":34},{"ruleId":"421","severity":1,"message":"476","line":56,"column":11,"nodeType":"423","messageId":"424","endLine":56,"endColumn":36},{"ruleId":"421","severity":1,"message":"477","line":5,"column":5,"nodeType":"423","messageId":"424","endLine":5,"endColumn":21},{"ruleId":"421","severity":1,"message":"478","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":17},{"ruleId":"421","severity":1,"message":"457","line":6,"column":25,"nodeType":"423","messageId":"424","endLine":6,"endColumn":37},{"ruleId":"421","severity":1,"message":"460","line":10,"column":8,"nodeType":"423","messageId":"424","endLine":10,"endColumn":14},{"ruleId":"421","severity":1,"message":"461","line":14,"column":18,"nodeType":"423","messageId":"424","endLine":14,"endColumn":28},{"ruleId":"421","severity":1,"message":"479","line":14,"column":39,"nodeType":"423","messageId":"424","endLine":14,"endColumn":43},{"ruleId":"425","severity":1,"message":"480","line":20,"column":6,"nodeType":"427","endLine":20,"endColumn":8,"suggestions":"481"},{"ruleId":"421","severity":1,"message":"482","line":79,"column":9,"nodeType":"423","messageId":"424","endLine":79,"endColumn":23},{"ruleId":"421","severity":1,"message":"483","line":2,"column":22,"nodeType":"423","messageId":"424","endLine":2,"endColumn":33},{"ruleId":"421","severity":1,"message":"484","line":17,"column":8,"nodeType":"423","messageId":"424","endLine":17,"endColumn":22},{"ruleId":"485","severity":1,"message":"486","line":58,"column":53,"nodeType":"487","messageId":"488","endLine":58,"endColumn":57},{"ruleId":"421","severity":1,"message":"461","line":34,"column":24,"nodeType":"423","messageId":"424","endLine":34,"endColumn":34},{"ruleId":"421","severity":1,"message":"489","line":28,"column":7,"nodeType":"423","messageId":"424","endLine":28,"endColumn":17},{"ruleId":"421","severity":1,"message":"490","line":17,"column":10,"nodeType":"423","messageId":"424","endLine":17,"endColumn":26},{"ruleId":"421","severity":1,"message":"491","line":1,"column":8,"nodeType":"423","messageId":"424","endLine":1,"endColumn":13},{"ruleId":"421","severity":1,"message":"492","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":20},{"ruleId":"421","severity":1,"message":"493","line":3,"column":10,"nodeType":"423","messageId":"424","endLine":3,"endColumn":17},{"ruleId":"421","severity":1,"message":"494","line":4,"column":8,"nodeType":"423","messageId":"424","endLine":4,"endColumn":18},{"ruleId":"421","severity":1,"message":"495","line":3,"column":10,"nodeType":"423","messageId":"424","endLine":3,"endColumn":16},{"ruleId":"421","severity":1,"message":"450","line":3,"column":18,"nodeType":"423","messageId":"424","endLine":3,"endColumn":23},{"ruleId":"421","severity":1,"message":"496","line":3,"column":25,"nodeType":"423","messageId":"424","endLine":3,"endColumn":29},{"ruleId":"421","severity":1,"message":"497","line":8,"column":7,"nodeType":"423","messageId":"424","endLine":8,"endColumn":18},{"ruleId":"421","severity":1,"message":"498","line":11,"column":20,"nodeType":"423","messageId":"424","endLine":11,"endColumn":26},{"ruleId":"421","severity":1,"message":"499","line":5,"column":10,"nodeType":"423","messageId":"424","endLine":5,"endColumn":19},{"ruleId":"421","severity":1,"message":"500","line":7,"column":7,"nodeType":"423","messageId":"424","endLine":7,"endColumn":11},{"ruleId":"421","severity":1,"message":"457","line":6,"column":25,"nodeType":"423","messageId":"424","endLine":6,"endColumn":37},{"ruleId":"421","severity":1,"message":"479","line":13,"column":43,"nodeType":"423","messageId":"424","endLine":13,"endColumn":47},{"ruleId":"425","severity":1,"message":"480","line":19,"column":6,"nodeType":"427","endLine":19,"endColumn":8,"suggestions":"501"},{"ruleId":"502","severity":1,"message":"503","line":5,"column":1,"nodeType":"504","endLine":18,"endColumn":2},{"ruleId":"421","severity":1,"message":"505","line":10,"column":10,"nodeType":"423","messageId":"424","endLine":10,"endColumn":14},{"ruleId":"421","severity":1,"message":"506","line":3,"column":19,"nodeType":"423","messageId":"424","endLine":3,"endColumn":29},{"ruleId":"421","severity":1,"message":"507","line":5,"column":23,"nodeType":"423","messageId":"424","endLine":5,"endColumn":34},{"ruleId":"425","severity":1,"message":"426","line":28,"column":6,"nodeType":"427","endLine":28,"endColumn":8,"suggestions":"508"},{"ruleId":"470","severity":1,"message":"471","line":114,"column":31,"nodeType":"446","endLine":114,"endColumn":55},{"ruleId":"470","severity":1,"message":"471","line":128,"column":31,"nodeType":"446","endLine":128,"endColumn":55},"no-unused-vars","'staffID' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["509"],"'useEffect' is defined but never used.","no-native-reassign",["510"],"no-negated-in-lhs",["511"],["510"],["511"],"'currentUserStaffID' is defined but never used.","'Redirect' is defined but never used.","'accessToken' is defined but never used.","'currentUserFromLocalStorage' is defined but never used.","'history' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'staffID'. Either include it or remove the dependency array.",["512"],"jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","JSXOpeningElement","'syncCurrentUser' is defined but never used.",["510"],["511"],"'Field' is defined but never used.","'params' is assigned a value but never used.","'dispatch' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'selectFilter' is defined but never used.","'getTasks' is defined but never used.","'useDispatch' is defined but never used.","'Loader' is defined but never used.","'isFetching' is assigned a value but never used.","'employees' is assigned a value but never used.","'taskState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tasks'. Either include it or remove the dependency array.",["513"],"'taskss' is assigned a value but never used.","'navigate' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'somethingWentWrongLogger' is defined but never used.","'profileUpdateCompletedLogger' is defined but never used.","'profileUpdateFailLogger' is defined but never used.","'availableRole' is assigned a value but never used.","'companyDepartmentDropDown' is assigned a value but never used.","'ERROR_DEPARTMENT' is defined but never used.","'NavLink' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["514"],"'employeesLists' is assigned a value but never used.","'themeColors' is defined but never used.","'ChangePassword' is defined but never used.","valid-typeof","Invalid typeof comparison value.","Literal","invalidValue","'generateId' is assigned a value but never used.","'invalidTodoTitle' is defined but never used.","'axios' is defined but never used.","'authHeader' is defined but never used.","'options' is defined but never used.","'TypeWriter' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'phoneRegExp' is assigned a value but never used.","'LOGOUT' is defined but never used.","'TextInput' is defined but never used.","'calc' is assigned a value but never used.",["515"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'date' is defined but never used.","'useHistory' is defined but never used.","'useSelector' is defined but never used.",["516"],{"desc":"517","fix":"518"},"no-global-assign","no-unsafe-negation",{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"523","fix":"525"},{"desc":"517","fix":"526"},"Update the dependencies array to be: [params.id]",{"range":"527","text":"528"},"Update the dependencies array to be: [dispatch, staffID]",{"range":"529","text":"530"},"Update the dependencies array to be: [tasks]",{"range":"531","text":"532"},"Update the dependencies array to be: [dispatch]",{"range":"533","text":"534"},{"range":"535","text":"534"},{"range":"536","text":"528"},[773,775],"[params.id]",[1496,1506],"[dispatch, staffID]",[772,774],"[tasks]",[729,731],"[dispatch]",[755,757],[1002,1004]]