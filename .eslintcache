[{"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\toaster\\index.js":"1","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\actions\\todo\\todoAction.js":"2","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\services\\auth-header.js":"3","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\IndexArea.js":"4","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\actions\\employee\\employeeAction.js":"5","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\EmployeeProfile.js":"6","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\actions\\company\\calendar\\calendarAction.js":"7","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\TaskReport.js":"8","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\index.js":"9","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\reducers\\company\\calendar\\calendarReducer.js":"10","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\Login.js":"11","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\user\\UpdateProfile.js":"12","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\UpdateEmployeeProfile.js":"13","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\services\\todo.service.js":"14","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\TodoCard.js":"15","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\services\\root-endpoints.js":"16","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AssignedTasks.js":"17","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\TaskDetails.js":"18","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\services\\task.service.js":"19","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AcceptedTasks.js":"20","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\Signup.js":"21","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\ForgotPassword.js":"22","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\Thanks.js":"23","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\ContactUs.js":"24","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\Confirmation.js":"25","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\rough\\Test.js":"26","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\ResetPassword.js":"27","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Dashboard.js":"28","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\SibarToggle.js":"29","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Navbar.js":"30","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Button.js":"31","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\404.js":"32","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\Home.js":"33","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\About.js":"34","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Footer.js":"35","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\layouts\\HomeButton.js":"36","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\layouts\\FormInput.js":"37","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\Validation\\Schema.js":"38","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Task.js":"39","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Footer.js":"40","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Index.js":"41","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Navbar.js":"42","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Sidebar.js":"43","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\Todo.js":"44","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\TimerReport.js":"45","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\TourContainer.js":"46","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\user\\Profile.js":"47","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\company\\calendar\\ManageCalendar.js":"48","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\rough\\MappingForm.js":"49","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\Features.js":"50","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\DraftTask.js":"51","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\SampleCompose.js":"52","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\tourConfig.js":"53","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\timer\\HourTimerScreen.js":"54","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\MostActiveEmployee.js":"55","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\Cards.js":"56","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\services\\auth.service.js":"57","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\_helper\\dateFormatter.js":"58","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\reducers\\todo\\todoReducer.js":"59","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\reducers\\task\\taskReducer.js":"60","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\actions\\task\\taskAction.js":"61","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\EventCard.js":"62","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\Card.js":"63","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\Text.js":"64","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\TodoRows.js":"65","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\services\\company\\calendar\\calendarService.js":"66","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AllTasks.js":"67","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\actions\\types.js":"68","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\reducers\\index.js":"69","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\reducers\\task\\usersTasksByStatusReducer.js":"70","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\PendingTasks.js":"71","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\TaskSidebar.js":"72"},{"size":2202,"mtime":1610825540502,"results":"73","hashOfConfig":"74"},{"size":1949,"mtime":1610825538518,"results":"75","hashOfConfig":"74"},{"size":1101,"mtime":1610825540043,"results":"76","hashOfConfig":"74"},{"size":2178,"mtime":1610825539022,"results":"77","hashOfConfig":"74"},{"size":1432,"mtime":1610825538462,"results":"78","hashOfConfig":"74"},{"size":6198,"mtime":1610825538867,"results":"79","hashOfConfig":"74"},{"size":1503,"mtime":1610825538459,"results":"80","hashOfConfig":"74"},{"size":5191,"mtime":1610825539541,"results":"81","hashOfConfig":"74"},{"size":3623,"mtime":1610825539959,"results":"82","hashOfConfig":"74"},{"size":1217,"mtime":1610825539966,"results":"83","hashOfConfig":"74"},{"size":7632,"mtime":1610825539130,"results":"84","hashOfConfig":"74"},{"size":16253,"mtime":1610825539345,"results":"85","hashOfConfig":"74"},{"size":29165,"mtime":1610825538907,"results":"86","hashOfConfig":"74"},{"size":1235,"mtime":1610825540320,"results":"87","hashOfConfig":"74"},{"size":1124,"mtime":1610825539529,"results":"88","hashOfConfig":"74"},{"size":3120,"mtime":1610898358318,"results":"89","hashOfConfig":"74"},{"size":2950,"mtime":1610829648226,"results":"90","hashOfConfig":"74"},{"size":9207,"mtime":1610902783720,"results":"91","hashOfConfig":"74"},{"size":1738,"mtime":1610898452546,"results":"92","hashOfConfig":"74"},{"size":2230,"mtime":1610908232021,"results":"93","hashOfConfig":"74"},{"size":12491,"mtime":1610625449642,"results":"94","hashOfConfig":"74"},{"size":3960,"mtime":1607757247216,"results":"95","hashOfConfig":"74"},{"size":2196,"mtime":1610625450479,"results":"96","hashOfConfig":"74"},{"size":5522,"mtime":1610625447358,"results":"97","hashOfConfig":"74"},{"size":1256,"mtime":1607757247198,"results":"98","hashOfConfig":"74"},{"size":556,"mtime":1609352738731,"results":"99","hashOfConfig":"74"},{"size":5087,"mtime":1607757247230,"results":"100","hashOfConfig":"74"},{"size":5664,"mtime":1610825539349,"results":"101","hashOfConfig":"74"},{"size":326,"mtime":1608116099933,"results":"102","hashOfConfig":"74"},{"size":1885,"mtime":1610825538970,"results":"103","hashOfConfig":"74"},{"size":325,"mtime":1607503175091,"results":"104","hashOfConfig":"74"},{"size":1121,"mtime":1610625446610,"results":"105","hashOfConfig":"74"},{"size":484,"mtime":1610625448006,"results":"106","hashOfConfig":"74"},{"size":4299,"mtime":1610625447189,"results":"107","hashOfConfig":"74"},{"size":4735,"mtime":1610625445194,"results":"108","hashOfConfig":"74"},{"size":255,"mtime":1607757247170,"results":"109","hashOfConfig":"74"},{"size":2712,"mtime":1609352734372,"results":"110","hashOfConfig":"74"},{"size":2889,"mtime":1610825538758,"results":"111","hashOfConfig":"74"},{"size":2352,"mtime":1610625456236,"results":"112","hashOfConfig":"74"},{"size":715,"mtime":1607423260646,"results":"113","hashOfConfig":"74"},{"size":1269,"mtime":1610625456074,"results":"114","hashOfConfig":"74"},{"size":8696,"mtime":1610825539864,"results":"115","hashOfConfig":"74"},{"size":8524,"mtime":1610825539871,"results":"116","hashOfConfig":"74"},{"size":2222,"mtime":1610667490203,"results":"117","hashOfConfig":"74"},{"size":1672,"mtime":1610625457919,"results":"118","hashOfConfig":"74"},{"size":1397,"mtime":1610625453458,"results":"119","hashOfConfig":"74"},{"size":6801,"mtime":1610825539327,"results":"120","hashOfConfig":"74"},{"size":14251,"mtime":1610825538806,"results":"121","hashOfConfig":"74"},{"size":311,"mtime":1607503175135,"results":"122","hashOfConfig":"74"},{"size":7887,"mtime":1610625447997,"results":"123","hashOfConfig":"74"},{"size":14894,"mtime":1610825539352,"results":"124","hashOfConfig":"74"},{"size":3198,"mtime":1609672035782,"results":"125","hashOfConfig":"74"},{"size":4616,"mtime":1610625454297,"results":"126","hashOfConfig":"74"},{"size":1115,"mtime":1610625458050,"results":"127","hashOfConfig":"74"},{"size":2095,"mtime":1610825539483,"results":"128","hashOfConfig":"74"},{"size":2125,"mtime":1610625456803,"results":"129","hashOfConfig":"74"},{"size":4721,"mtime":1610825540099,"results":"130","hashOfConfig":"74"},{"size":338,"mtime":1610625436397,"results":"131","hashOfConfig":"74"},{"size":3311,"mtime":1610825540006,"results":"132","hashOfConfig":"74"},{"size":1646,"mtime":1610751273423,"results":"133","hashOfConfig":"74"},{"size":1559,"mtime":1610750938093,"results":"134","hashOfConfig":"74"},{"size":1657,"mtime":1610825539396,"results":"135","hashOfConfig":"74"},{"size":1001,"mtime":1609352736138,"results":"136","hashOfConfig":"74"},{"size":409,"mtime":1610625452483,"results":"137","hashOfConfig":"74"},{"size":4486,"mtime":1610825539674,"results":"138","hashOfConfig":"74"},{"size":831,"mtime":1610825540102,"results":"139","hashOfConfig":"74"},{"size":4512,"mtime":1610896934547,"results":"140","hashOfConfig":"74"},{"size":3308,"mtime":1610899468223,"results":"141","hashOfConfig":"74"},{"size":1147,"mtime":1610899430753,"results":"142","hashOfConfig":"74"},{"size":930,"mtime":1610907411196,"results":"143","hashOfConfig":"74"},{"size":2229,"mtime":1610908249793,"results":"144","hashOfConfig":"74"},{"size":3906,"mtime":1610908469964,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"158utbm",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"151"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"151"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"151"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"151"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"151"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"151"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\toaster\\index.js",[],["299","300"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\actions\\todo\\todoAction.js",[],["301","302"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\services\\auth-header.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\IndexArea.js",["303"],"import { Link } from 'react-router-dom';\r\n\r\n// Others\r\nimport TypeWriter from './pages-js/TypeWriter';\r\n\r\n// Images\r\nimport landingPageImg from './pages-images/landingPage.svg';\r\n\r\n\r\nconst IndexArea = () => {\r\n    return(\r\n      <>\r\n        <div className=\"row\">\r\n          <section className=\"container d-flex flex-column-reverse home-intro flex-lg-row\">\r\n              <div className=\"col d-flex flex-row\">\r\n                <section className=\"home-intro-text\">\r\n                  {/* type-writing effect */}\r\n                  <h2>Track Your Time At Your Own  \r\n                    <span className=\"typewrite\" data-period={2000} data-type='[ \"Pace|\" ]'>\r\n                      <span className=\"wrap\" />\r\n                    </span>\r\n                  </h2>\r\n                  <p>Spend less time making the right and informed decisions</p>\r\n                  <section className=\"home-intro-btn\">\r\n                    <Link\r\n                      className=\"btn pace-btn pace-btn-primary\" \r\n                      id=\"login-btn\"\r\n                      to=\"/login\"\r\n                      >\r\n                      Login\r\n                      <svg width=\"2em\" height=\"1.3em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-right\" id=\"login-arrow\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fillRule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\" />\r\n                      </svg>\r\n                    </Link>\r\n                    <Link\r\n                      type=\"submit\" \r\n                      className=\"btn pace-btn pace-btn-accent\" \r\n                      id=\"learn-btn\"\r\n                      to=\"/about\"\r\n                      >\r\n                        Learn More\r\n                    </Link>\r\n                  </section>\r\n                </section>\r\n              </div>\r\n              <div className=\"col home-intro-img\">\r\n                <img src={landingPageImg} alt=\"office timing\" className=\"img-fluid\" />\r\n              </div>\r\n          </section>\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default IndexArea;  ","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\actions\\employee\\employeeAction.js",["304"],"import { FETCH_COMPANY_EMPLOYEES } from '../types';\r\nimport EmployeeService from '../../services/employee/employee.service';\r\nimport { profileUpdateCompletedLogger, profileUpdateFailLogger, somethingWentWrongLogger } from '../../toaster';\r\n\r\nconst addNewEmployee = (newEmployee) => ( dispatch ) =>{\r\n    return EmployeeService.addNewEmployeeToServer(newEmployee)\r\n}\r\n\r\n\r\n// Function to get the company employee list\r\nconst getCompanyEmployees = () => (dispatch) =>{\r\n    return EmployeeService.fetchCompanyEmployees()\r\n    .then((response)=>{\r\n        \r\n        // Get company Employees\r\n        const companyEmployees = response.data.data\r\n        dispatch({\r\n            type: FETCH_COMPANY_EMPLOYEES,\r\n            payload: companyEmployees\r\n        })\r\n    })\r\n    .catch((response)=>{\r\n        // Alert user about network failure\r\n        // somethingWentWrongLogger()\r\n    })\r\n}\r\n\r\nconst updateEmployeeBillingAndWorkHour = (values, action, staffID,) => ( dispatch ) =>{\r\n    return EmployeeService.putEmployeeBillingAndWorkHour(values, action, staffID)\r\n    .then((response)=>{\r\n        console.log(response)\r\n        profileUpdateCompletedLogger()\r\n        action.setSubmitting(false)\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n        profileUpdateFailLogger()\r\n        action.setSubmitting(false)\r\n    })\r\n}\r\n\r\nexport {\r\n    addNewEmployee,\r\n    getCompanyEmployees,\r\n    updateEmployeeBillingAndWorkHour\r\n}","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\EmployeeProfile.js",["305"],"// React\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { getCompanyEmployees } from '../../../actions/employee/employeeAction';\r\nimport Button from '../../layouts/Button';\r\nimport Loader from '../../loader/Loader';\r\nimport unclebay from '../../pages/pages-images/ayodele_samuel_adebayo.jpg';\r\n\r\n\r\n\r\nconst ProfileRow = (props) => {\r\n    const { title, label } = props\r\n    return(\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-3\">\r\n                <h6 className=\"mb-0\">{title}</h6>\r\n                </div>\r\n                <div className=\"col-sm-9 text-secondary\">\r\n                    {label}\r\n                </div>\r\n            </div>\r\n            <hr />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst EmployeeProfile = () =>{\r\n    const params = useParams()\r\n    const { employees, isFetching } = useSelector(state => state.employees)\r\n    const [ employeeProfile, setEmployeeProfile ] = useState([{}])\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        // fetch the company's employees from the server\r\n        dispatch(getCompanyEmployees())\r\n    },[dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        const getEmployeeProfile = employees.filter((employee)=>employee.staffID === parseInt(params.id))\r\n        setEmployeeProfile(getEmployeeProfile[0])\r\n    }, [employees, params.id, setEmployeeProfile])\r\n\r\n    if(employeeProfile === undefined){\r\n        return(\r\n            <>\r\n                <Loader />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const fullName = employeeProfile.firstName + ' ' + employeeProfile.lastName\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"main-body\">\r\n                    {/* Breadcrumb */}\r\n                    <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb mt-2\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to='/dashboard/employee-list' className=\"text-grey\">\r\n                                        Employee List\r\n                                </Link>\r\n                            </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Profile</li>\r\n                        </ol>\r\n                    </nav>\r\n                    \r\n                    {/* /Breadcrumb */}\r\n                    <div className=\"row gutters-sm mt-3\">\r\n                        <div className=\"col-md-4 mb-3\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                        {/* <img src=\"https://bootdey.com/img/Content/avatar/avatar7.png\" alt=\"Admin\" className=\"rounded-circle\" width={150} /> */}\r\n                                        <img src={unclebay} alt=\"Admin\" className=\"rounded-circle\" width={150} />\r\n                                        <div className=\"mt-3\">\r\n                                            <h4 className=\"text-capitalize\">{employeeProfile.firstName === undefined ? '' : employeeProfile.firstName} {employeeProfile.lastName === undefined ? '' : employeeProfile.lastName}</h4>\r\n                                            {/* <h4>{employeeProfile.id} </h4> */}\r\n                                            {/* <h4>{params.id} </h4> */}\r\n                                            <p className=\"text-secondary mb-1\">Frontend Engineer</p>\r\n                                            {/* <p className=\"text-muted font-size-sm\">{employeeProfile.address.street}</p> */}\r\n                                            <Link to={`/dashboard/employee/profile/update/${params.id}`}>\r\n                                                <Button className=\"btn btn-primary m-2 mr-2\" label=\"Update  \"/>\r\n                                            </Link>\r\n                                            <Button className=\"btn btn-danger m-2\" label=\"Disable\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    {/* <ProfileRow title=\"Full Name\" label={ ` ${employeeProfile.firstName} ${employeeProfile.LastName}` } /> */}\r\n                                    <ProfileRow title=\"Full Name\" label={ ` ${fullName === undefined ? ' smam ' : fullName}` } />\r\n                                    <ProfileRow title=\"Email\" label={employeeProfile.email} />\r\n                                    <ProfileRow title=\"Department\" label=\"Web development\" />\r\n                                    <ProfileRow title=\"Role\" label=\"Frontend Engineer\" />\r\n                                    <ProfileRow title=\"Salary\" label={ `# ${employeeProfile.billRateCharge === null ? '' : employeeProfile.billRateCharge}` } />\r\n                                    <ProfileRow title=\"Phone\" label={employeeProfile.phone} />\r\n                                    {/* <ProfileRow title=\"Address\" label={employeeProfile.address.city} /> */}\r\n                                    <ProfileRow title=\"Work Hours\" label={employeeProfile.expectedWorkHours} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmployeeProfile;\r\n","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\actions\\company\\calendar\\calendarAction.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\TaskReport.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\index.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\reducers\\company\\calendar\\calendarReducer.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\Login.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\user\\UpdateProfile.js",["306","307"],"// React\r\nimport { Link } from 'react-router-dom';\r\nimport { ErrorMessage, Form, Formik } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Layouts\r\nimport Button from '../layouts/Button';\r\nimport { TextInput } from '../layouts/FormInput';\r\n\r\n//  Actions\r\nimport { updateUserProfile } from '../../actions/user/userAction';\r\n\r\n// Services helper\r\nimport Loader from '../loader/Loader';\r\nimport ChangePassword from './ChangePassword';\r\n\r\nconst UpdateProfile = () =>{\r\n    const { currentUser } = useSelector(state => state.authenticationState)\r\n    const params = useParams(); \r\n    const dispatch = useDispatch();\r\n    const [ staffID, setStaffID ] = useState('');\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    // User credentials\r\n    const [profile, setProfile] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        address: '',\r\n        userName: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        const staffID = params.id; // get id from urls(path)\r\n        setStaffID(staffID);\r\n\r\n        // Destructure the user information from the redux\r\n        if(currentUser){\r\n            const {\r\n                firstName,\r\n                lastName,\r\n                userName,\r\n                phoneNumber,\r\n                email,\r\n                address,\r\n                \r\n            } = currentUser\r\n        \r\n            // Set the destructure user information into the profile state (ES6 syntax)\r\n            setProfile({\r\n                firstName : typeof firstName !== 'string' ? '' : firstName,\r\n                lastName : typeof lastName !== 'string' ? '' : lastName,\r\n                userName,\r\n                phoneNumber: typeof phoneNumber === null || undefined ? '' : phoneNumber,\r\n                email,\r\n                address : typeof address !== 'string' ? '' : address,\r\n                // userName : typeof userName !== 'string' ? '' : userName,\r\n            })\r\n\r\n            console.log(firstName)\r\n            console.log(userName)\r\n            console.log(typeof phoneNumber)\r\n            setIsLoading(false)\r\n        }\r\n    }, [params.id, currentUser])\r\n    \r\n    if(isLoading){\r\n        return(\r\n            <>\r\n                <Loader />\r\n            </>\r\n        )\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <div className=\"container\">\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                {/* Breadcrumb */}\r\n                <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb pt-3\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            <Link to='/dashboard'>\r\n                                Dashboard\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            <Link to={`/dashboard/profile/${params.id}`}>\r\n                                Profile\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                            Edit Profile\r\n                        </li>\r\n                    </ol>\r\n                </nav>\r\n                {/* /Breadcrumb */}\r\n                <div className=\"main-body\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                                <Formik\r\n                                    initialValues = {profile}\r\n                                    enableReinitialize\r\n                                    // validationSchema={UpdateProfileSchema}\r\n                                    onSubmit={(values, action)=>{\r\n                                        dispatch(updateUserProfile(values, staffID, action))\r\n                                        .then((response)=>{\r\n                                            console.log(response)\r\n                                            history.push(`/dashboard/profile/${params.id}`)\r\n                                        })\r\n                                        .catch((error)=>{\r\n                                            console.log(error)\r\n                                        })\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    { (({ values, touched, errors, handleSubmit, isSubmitting, resetForm })=>{\r\n                                        return <Form onSubmit={handleSubmit}>\r\n                                            <div className=\"mb-5 text-gray\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre>  */}\r\n                                                <h5>EDIT PROFILE</h5>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* FIRST NAME */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">First Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        placeholder=\"Enter Firstname\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.firstName && errors.firstName ? \"is-invalid\" : \"\"}`} \r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"firstName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* LAST NAME */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Last Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"lastName\"\r\n                                                        placeholder=\"Enter last Name\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.lastName && errors.lastName ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"lastName\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"lastName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* USERNAME */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Username</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"userName\"\r\n                                                        placeholder=\"Enter username\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.userName && errors.userName ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"userName\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"userName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* PHONE NUMBER */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Phone Number</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                <TextInput\r\n                                                            name=\"phoneNumber\"\r\n                                                            placeholder=\"Enter Phone Number\"\r\n                                                            type=\"tel\" \r\n                                                            className={`form-control ${touched.phoneNumber && errors.phoneNumber ? \"is-invalid\" : \"\"}`} \r\n                                                            id=\"phoneNumber\"\r\n                                                        />\r\n                                                        <ErrorMessage\r\n                                                            component=\"div\"\r\n                                                            name=\"phoneNumber\"\r\n                                                            className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* EMAIL ADDRESS */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Email Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"email\"\r\n                                                        placeholder=\"Enter Valid Email Address\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.email && errors.email ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"email\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"email\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* ADDRESS */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"address\"\r\n                                                        id=\"address\"\r\n                                                        type=\"text\" \r\n                                                        placeholder=\"143 work and connect\"\r\n                                                        className={`form-control ${touched.address && errors.address ? \"is-invalid\" : \"\"}`}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"address\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Updating</span>) : \"Update\"}\r\n                                                    className=\"btn pace-btn-primary\" \r\n                                                />\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    className=\"btn pace-btn-accent d-none\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Please wait...</span>) : \"Reset\"}\r\n                                                    onClick={(()=>resetForm())} \r\n                                                />\r\n                                            </div>\r\n                                        </Form>\r\n                                    })\r\n                                }\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile;\r\n","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\company\\employee\\UpdateEmployeeProfile.js",["308","309","310","311","312","313"],"// React\r\nimport { ErrorMessage, Form, Formik,Field } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Button from '../../layouts/Button';\r\nimport { TextInput } from '../../layouts/FormInput';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCompanyEmployees, updateEmployeeBillingAndWorkHour } from '../../../actions/employee/employeeAction';\r\nimport { getDepartment } from '../../../actions/company/department/departmentAction';\r\nimport Loader from '../../loader/Loader';\r\nimport { profileUpdateCompletedLogger, profileUpdateFailLogger } from '../../../toaster';\r\n\r\n\r\nconst employeeDetailsDropDown = {\r\n    employeeRole: [\r\n        {\r\n            roleName: 'Super-Admin',\r\n            roleID: 1\r\n        },\r\n        {\r\n            roleName: 'Co-Admin',\r\n            roleID: 3\r\n        },\r\n        {\r\n            roleName: 'Internal-Admin',\r\n            roleID: 4\r\n        },\r\n        {\r\n            roleName: 'Employee',\r\n            roleID: 5\r\n        }\r\n\r\n    ],\r\n}\r\nconst availableRole = employeeDetailsDropDown.employeeRole.map(({roleName, roleID}, index)=><option value={roleID} key={index}>{roleName}</option>);\r\n\r\nconst UpdateEmployeeProfile = () =>{\r\n    const params = useParams()\r\n    const history = useHistory()\r\n    // const [staffID, setStaffID] = useState('');\r\n\r\n    const { employees, isFetching } = useSelector(state => state.employees);\r\n    const { departments } = useSelector(state => state.departments)\r\n    const dispatch = useDispatch();\r\n    const [employeeProfile, setEmployeeProfile] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        address: '',\r\n        userName: '',\r\n    })\r\n    \r\n    \r\n    const companyDepartmentDropDown = departments.map(({departmentName, departmentID}, index)=><option value={departmentID} key={index}>{departmentName}</option>)\r\n    useEffect(() => {\r\n        // Fetch company employess\r\n        dispatch(getCompanyEmployees())\r\n\r\n        // Fetch company department\r\n        dispatch(getDepartment())\r\n    }, [dispatch])\r\n    useEffect(() => {\r\n        const getEmployeeProfile = employees.filter((employee)=>employee.staffID === parseInt(params.id))\r\n        if(getEmployeeProfile.length > 0){\r\n                setEmployeeProfile(getEmployeeProfile[0])\r\n                const {\r\n                    // firstName,\r\n                    // lastName,\r\n                    // phoneNumber,\r\n                    // email,\r\n                    // address,\r\n                    // userName,\r\n                    billRateCharge,\r\n                    expectedWorkHours,\r\n                    // staffRole,\r\n                    // roleID,\r\n                    // departmentID\r\n                } = getEmployeeProfile[0]\r\n            \r\n                // Set the destructure user information into the profile state (ES6 syntax)\r\n                setEmployeeProfile({\r\n                    // firstName,\r\n                    // lastName,\r\n                    // phoneNumber,\r\n                    // email,\r\n                    // address,\r\n                    // userName,\r\n                    billRateCharge,\r\n                    expectedWorkHours,\r\n                    // staffRole,\r\n                    // roleID,\r\n                    // departmentID\r\n                })\r\n            }else{\r\n                \r\n            }\r\n        }, [employees, params.id])\r\n        if(employeeProfile === undefined){\r\n            return(\r\n                <>\r\n                    <Loader  />\r\n                </>\r\n            )\r\n        }\r\n    return ( \r\n        <>\r\n            <div className=\"container\">\r\n                {/* Breadcrumb */}\r\n                <nav aria-label=\"breadcrumb\" className=\"main-breadcrumb mt-2\">\r\n                        <ol className=\"breadcrumb\">\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to='/dashboard/employee-list' className=\"text-grey\">\r\n                                        Employee List\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n                                <Link to={`/dashboard/employee/profile/${params.id}`} className=\"text-grey\">\r\n                                        Profile\r\n                                </Link>\r\n                            </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Edit Profile</li>\r\n                        </ol>\r\n                    </nav>\r\n                    \r\n                    {/* /Breadcrumb */}\r\n                <style>\r\n                    {\r\n                        `\r\n                        .dashboard-body-wrapper, .page-holder{\r\n                            background: #e9ecef;\r\n                        }\r\n                        `\r\n                    }\r\n                </style>\r\n                <div className=\"main-body\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-body\">\r\n                                <Formik\r\n                                    initialValues = {employeeProfile}\r\n                                    enableReinitialize\r\n                                    // validationSchema={UpdateEmployeeProfileSchema}\r\n                                    onSubmit={(values, action)=>{\r\n                                        dispatch(updateEmployeeBillingAndWorkHour(values, action, params.id))\r\n                                        // .then((response)=> history.push('/dashboard/employee/profile/'))\r\n                                        .then((response)=> history.goBack())\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    { (({ values, touched, errors, handleSubmit, isSubmitting, resetForm })=>{\r\n                                        return <Form onSubmit={handleSubmit}>\r\n                                            <div className=\"mb-5 text-gray\">\r\n                                                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n                                                <h5>Update {employeeProfile.firstName} {employeeProfile.lastName} Billable</h5>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* FIRST NAME */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">First Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        placeholder=\"Enter Firstname\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${ touched.firstName && errors.firstName ? \"is-invalid\" : \"\"}`} \r\n                                                        readOnly\r\n\r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"firstName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* LAST NAME */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Last Name</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"lastName\"\r\n                                                        placeholder=\"Enter lastname\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.lastName && errors.lastName ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"lastName\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"lastName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* USERNAME */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Username</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"userName\"\r\n                                                        placeholder=\"Enter username\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.userName && errors.userName ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"userName\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"userName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n                                            \r\n                                            {/* EXPECTED WORK HOUR */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Expected Work Hour</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"expectedWorkHours\"\r\n                                                        placeholder=\"Enter expectedWorkHours\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.expectedWorkHours && errors.expectedWorkHours ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"expectedWorkHours\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"expectedWorkHours\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* BILL RATE CHARGE */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Bill Rate Charge</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"billRateCharge\"\r\n                                                        placeholder=\"Enter Bill Rate Charge\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.billRateCharge && errors.billRateCharge ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"billRateCharge\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"billRateCharge\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr />\r\n\r\n                                            {/* PHONE NUMBER */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Phone Number</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"phone\"\r\n                                                        placeholder=\"Enter Phone Number\"\r\n                                                        type=\"tel\" \r\n                                                        className={`form-control ${touched.phone && errors.phone ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"phone\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"phone\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* EMAIL ADDRESS */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Email Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"email\"\r\n                                                        placeholder=\"Enter Valid Email Address\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.email && errors.email ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"email\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"email\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* CREATE PASSWORD */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">New Password</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"password\"\r\n                                                        placeholder=\"New Password\"\r\n                                                        type=\"password\" \r\n                                                        className={`form-control ${ touched.password && errors.password ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"password\"\r\n                                                        readOnly\r\n                                                        autoComplete=\"on\"\r\n                                                        />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"password\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                        />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* CONFIRM PASSWORD */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Confirm Password</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"password2\"\r\n                                                        placeholder=\"Confirm Password\"\r\n                                                        type=\"password\" \r\n                                                        className={`form-control ${ touched.password2 && errors.password2 ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"password2\"\r\n                                                        readOnly\r\n                                                        autoComplete=\"on\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"password2\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* ADDRESS */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Address</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"address\"\r\n                                                        id=\"address\"\r\n                                                        type=\"text\" \r\n                                                        placeholder=\"143 work and connect\"\r\n                                                        className={`form-control ${touched.address && errors.address ? \"is-invalid\" : \"\"}`}\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"address\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n                                            {/* Role */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Role</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <Field component=\"select\" name=\"roleID\" className=\"form-control\"\r\n                                                        readOnly\r\n                                                    >\r\n                                                        <option selected>Choose...</option>\r\n                                                        {availableRole}\r\n                                                    </Field>\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"roleID\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n\r\n\r\n\r\n                                            {/* EMPLOYEE POSITION */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Position</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <TextInput\r\n                                                        name=\"staffRole\"\r\n                                                        placeholder=\"Enter Position\"\r\n                                                        type=\"text\" \r\n                                                        className={`form-control ${touched.staffRole && errors.staffRole ? \"is-invalid\" : \"\"}`} \r\n                                                        id=\"staffRole\"\r\n                                                        readOnly\r\n\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"staffRole\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n                                           \r\n                                            {/* DEPARTMENT */}\r\n                                            {/* <div className=\"row\">\r\n                                                <div className=\"col-sm-6 col-md-3\">\r\n                                                    <h6 className=\"mb-0\">Department</h6>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12 col-md-9 text-secondary\" >\r\n                                                    <Field component=\"select\" name=\"departmentID\" className=\"form-control\"\r\n                                                        readOnly\r\n                                                    >\r\n                                                        <option selected>Choose...</option>\r\n                                                        {companyDepartmentDropDown}\r\n                                                    </Field>\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"departmentID\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr /> */}\r\n                                            \r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Updating</span>) : \"Update\"}\r\n                                                    className=\"btn pace-btn-primary\" \r\n                                                />\r\n                                                <Button \r\n                                                    type=\"submit\" \r\n                                                    className=\"btn pace-btn-accent d-none\" \r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Please wait...</span>) : \"Reset\"}\r\n                                                    onClick={(()=>resetForm())} \r\n                                                />\r\n                                            </div>\r\n                                        </Form>\r\n                                    })\r\n                                }\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateEmployeeProfile;\r\n","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\services\\todo.service.js",["314"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\TodoCard.js",["315"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\services\\root-endpoints.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AssignedTasks.js",["316","317","318"],"import React, { useEffect, useState } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { getAssignedTasks } from '../../../../actions/task/assignedTaskAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Loader\r\nimport Loader from '../../../loader/Loader';\r\n\r\nconst AssignedTasks = () => {\r\n  const {assignedTasks, isFetching } = useSelector(state => state.assignedTasks)\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // const [taskState, setTaskState] = useState();\r\n  // useEffect(() => {\r\n  //   setTaskState(assignedTasks)\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    dispatch(getAssignedTasks())\r\n    console.log(assignedTasks.taskStatus)\r\n  }, [assignedTasks.taskStatus, dispatch])\r\n\r\n  \r\n\r\n  // styles each row\r\n  const rowStyle = {\r\n    cursor: 'pointer'\r\n  }\r\n\r\n  // routes to full task details page on double click\r\n  const taskDetails =  {\r\n    onClick: (e, row, rowIndex) =>\r\n    {\r\n        history.push(`/dashboard/task/view-task/`+ row.taskID)\r\n    }\r\n  };\r\n\r\n  // If the task list is been fetched from the server or not mounted on the ui, show the loader\r\n  if(isFetching){\r\n    return(\r\n        <>\r\n            <Loader />\r\n        </>\r\n    )\r\n  }\r\n  return (\r\n    <div >\r\n\r\n      <Table\r\n        keyField='id'\r\n        title = \"Assigned Tasks\"\r\n        data={assignedTasks }\r\n        columns={taskHeader}\r\n        bordered= { false }\r\n        // selectRow = {selectRow}\r\n        enableSearch = { true }\r\n        pagination = { paginationFactory() }\r\n        // controlHeader = { navigate }\r\n        rowEvents = { taskDetails }\r\n        noDataIndication={'No available task'}\r\n        filter={ filterFactory() }\r\n        rowStyle={ rowStyle }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst taskHeader = [\r\n\r\n  {\r\n    dataField: 'taskName',\r\n    text: 'Title',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'endDate',\r\n    text: 'Due Date',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'documentsAttached',\r\n    text: 'Attachment',\r\n    formatter: (cell, row) => {\r\n      if(!cell){\r\n      return(\r\n        <i class=\"fa fa-paperclip\" />\r\n      )}\r\n    },\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'taskStatus',\r\n    text: 'Status',\r\n    headerAttrs: {\r\n      hidden:true\r\n    },\r\n    formatter: (cell, row) => {\r\n      if(cell){\r\n      // return(\r\n        switch (cell) {\r\n          case 1:\r\n              return 'pending'\r\n          case 2:\r\n              return 'accepted'\r\n          case 3:\r\n              return 'completed'\r\n          case 4:\r\n              return 'overdue'\r\n          default: \r\n              break;\r\n      }\r\n      // )\r\n    }\r\n    }\r\n  },\r\n];\r\n\r\nexport default AssignedTasks;","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\TaskDetails.js",["319","320","321","322","323"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\services\\task.service.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AcceptedTasks.js",["324","325"],"import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Table from '../../layouts/Table';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { selectFilter } from 'react-bootstrap-table2-filter';\r\nimport { getTaskByStatus } from '../../../../actions/task/usersTasksByStatus';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst AcceptedTasks = () => {\r\n\r\n  const { usersTasksByStatus } = useSelector(state => state.usersTasksByStatus)\r\n  const history = useHistory();\r\n  const dispatch = useDispatch()\r\n  \r\n  useEffect(() => {\r\n    dispatch(getTaskByStatus(2));\r\n  }, [])\r\n\r\n  console.log(getTaskByStatus, 'GETaccept')\r\n    console.log(usersTasksByStatus, 'accept')\r\n\r\n  // adds checkbox to each row\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    headerColumnStyle: { backgroundColor: 'transparent' }\r\n  };\r\n  // styles each row\r\n  const rowStyle = {\r\n    cursor: 'pointer'\r\n  }\r\n  // routes to full task details page on double click\r\n  const taskDetails =  {\r\n    onClick: (e, row, rowIndex) => \r\n    { \r\n      history.push(`/dashboard/task/view-task/`+ row.taskID)\r\n    }\r\n  };\r\n  return (\r\n    <div >\r\n      \r\n      <Table\r\n        keyField='id'\r\n        title=\"Accepted Task\"\r\n        data={ usersTasksByStatus }\r\n        columns={taskHeader}\r\n        bordered= { false }\r\n        selectRow = { selectRow }\r\n        enableSearch = { true }\r\n        pagination = { paginationFactory() }\r\n        // controlHeader = { navigate }\r\n        rowEvents = { taskDetails }\r\n        noDataIndication={'No available task'}\r\n        filter={ filterFactory() }\r\n        rowStyle={ rowStyle }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst taskHeader = [\r\n\r\n  {\r\n    dataField: 'taskName',\r\n    text: 'Title',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'endDate',\r\n    text: 'Due Date',\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n  {\r\n    dataField: 'documentsAttached',\r\n    text: 'Attachment',\r\n    formatter: (cell, row) => {\r\n      if(!cell){\r\n      return(\r\n        <i class=\"fa fa-paperclip\" />\r\n      )}\r\n    },\r\n    headerAttrs: {\r\n      hidden:true\r\n    }\r\n  },\r\n];\r\n\r\nexport default AcceptedTasks;","C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\Signup.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\ForgotPassword.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\Thanks.js",["326"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\ContactUs.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\Confirmation.js",["327"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\rough\\Test.js",["328","329","330"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\ResetPassword.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Dashboard.js",["331","332"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\SibarToggle.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Navbar.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Button.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\404.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\Home.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\About.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Footer.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\layouts\\HomeButton.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\layouts\\FormInput.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\Validation\\Schema.js",["333"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Task.js",["334","335","336"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Footer.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Index.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Navbar.js",["337","338","339","340","341","342","343","344","345"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Sidebar.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\Todo.js",["346"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\reports\\TimerReport.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\TourContainer.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\user\\Profile.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\company\\calendar\\ManageCalendar.js",["347"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\rough\\MappingForm.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\pages\\Features.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\DraftTask.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\SampleCompose.js",["348"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\tourConfig.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\timer\\HourTimerScreen.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\MostActiveEmployee.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\Cards.js",["349"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\services\\auth.service.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\_helper\\dateFormatter.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\reducers\\todo\\todoReducer.js",["350"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\reducers\\task\\taskReducer.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\actions\\task\\taskAction.js",["351","352","353","354"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\EventCard.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\Card.js",["355","356"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\tour\\config\\Text.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\todos\\TodoRows.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\services\\company\\calendar\\calendarService.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AllTasks.js",["357","358","359","360","361","362","363","364"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\actions\\types.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\reducers\\index.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\reducers\\task\\usersTasksByStatusReducer.js",[],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\PendingTasks.js",["365","366"],"C:\\Users\\USER\\Desktop\\TIIDELAB\\PROJECTS\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\TaskSidebar.js",[],{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","replacedBy":"370"},{"ruleId":"367","replacedBy":"371"},{"ruleId":"369","replacedBy":"372"},{"ruleId":"373","severity":1,"message":"374","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":18},{"ruleId":"373","severity":1,"message":"377","line":3,"column":65,"nodeType":"375","messageId":"376","endLine":3,"endColumn":89},{"ruleId":"373","severity":1,"message":"378","line":34,"column":24,"nodeType":"375","messageId":"376","endLine":34,"endColumn":34},{"ruleId":"373","severity":1,"message":"379","line":17,"column":8,"nodeType":"375","messageId":"376","endLine":17,"endColumn":22},{"ruleId":"380","severity":1,"message":"381","line":58,"column":53,"nodeType":"382","messageId":"383","endLine":58,"endColumn":57},{"ruleId":"373","severity":1,"message":"384","line":2,"column":37,"nodeType":"375","messageId":"376","endLine":2,"endColumn":42},{"ruleId":"373","severity":1,"message":"385","line":12,"column":10,"nodeType":"375","messageId":"376","endLine":12,"endColumn":38},{"ruleId":"373","severity":1,"message":"386","line":12,"column":40,"nodeType":"375","messageId":"376","endLine":12,"endColumn":63},{"ruleId":"373","severity":1,"message":"387","line":36,"column":7,"nodeType":"375","messageId":"376","endLine":36,"endColumn":20},{"ruleId":"373","severity":1,"message":"378","line":43,"column":24,"nodeType":"375","messageId":"376","endLine":43,"endColumn":34},{"ruleId":"373","severity":1,"message":"388","line":56,"column":11,"nodeType":"375","messageId":"376","endLine":56,"endColumn":36},{"ruleId":"373","severity":1,"message":"389","line":5,"column":22,"nodeType":"375","messageId":"376","endLine":5,"endColumn":40},{"ruleId":"373","severity":1,"message":"390","line":2,"column":17,"nodeType":"375","messageId":"376","endLine":2,"endColumn":26},{"ruleId":"373","severity":1,"message":"391","line":1,"column":28,"nodeType":"375","messageId":"376","endLine":1,"endColumn":36},{"ruleId":"373","severity":1,"message":"392","line":2,"column":10,"nodeType":"375","messageId":"376","endLine":2,"endColumn":17},{"ruleId":"373","severity":1,"message":"393","line":6,"column":25,"nodeType":"375","messageId":"376","endLine":6,"endColumn":37},{"ruleId":"373","severity":1,"message":"394","line":3,"column":19,"nodeType":"375","messageId":"376","endLine":3,"endColumn":29},{"ruleId":"373","severity":1,"message":"378","line":17,"column":25,"nodeType":"375","messageId":"376","endLine":17,"endColumn":35},{"ruleId":"395","severity":1,"message":"396","line":43,"column":6,"nodeType":"397","endLine":43,"endColumn":8,"suggestions":"398"},{"ruleId":"399","severity":1,"message":"400","line":139,"column":31,"nodeType":"401","endLine":139,"endColumn":55},{"ruleId":"399","severity":1,"message":"400","line":153,"column":31,"nodeType":"401","endLine":153,"endColumn":55},{"ruleId":"373","severity":1,"message":"393","line":6,"column":25,"nodeType":"375","messageId":"376","endLine":6,"endColumn":37},{"ruleId":"395","severity":1,"message":"402","line":18,"column":6,"nodeType":"397","endLine":18,"endColumn":8,"suggestions":"403"},{"ruleId":"404","severity":1,"message":"405","line":30,"column":72,"nodeType":"406","endLine":30,"endColumn":87},{"ruleId":"373","severity":1,"message":"407","line":2,"column":8,"nodeType":"375","messageId":"376","endLine":2,"endColumn":17},{"ruleId":"373","severity":1,"message":"408","line":3,"column":10,"nodeType":"375","messageId":"376","endLine":3,"endColumn":16},{"ruleId":"373","severity":1,"message":"384","line":3,"column":18,"nodeType":"375","messageId":"376","endLine":3,"endColumn":23},{"ruleId":"373","severity":1,"message":"409","line":3,"column":25,"nodeType":"375","messageId":"376","endLine":3,"endColumn":29},{"ruleId":"373","severity":1,"message":"410","line":30,"column":10,"nodeType":"375","messageId":"376","endLine":30,"endColumn":25},{"ruleId":"373","severity":1,"message":"411","line":45,"column":11,"nodeType":"375","messageId":"376","endLine":45,"endColumn":18},{"ruleId":"373","severity":1,"message":"412","line":8,"column":7,"nodeType":"375","messageId":"376","endLine":8,"endColumn":18},{"ruleId":"373","severity":1,"message":"392","line":3,"column":9,"nodeType":"375","messageId":"376","endLine":3,"endColumn":16},{"ruleId":"373","severity":1,"message":"413","line":11,"column":8,"nodeType":"375","messageId":"376","endLine":11,"endColumn":21},{"ruleId":"373","severity":1,"message":"414","line":13,"column":8,"nodeType":"375","messageId":"376","endLine":13,"endColumn":14},{"ruleId":"373","severity":1,"message":"415","line":5,"column":16,"nodeType":"375","messageId":"376","endLine":5,"endColumn":24},{"ruleId":"373","severity":1,"message":"416","line":16,"column":10,"nodeType":"375","messageId":"376","endLine":16,"endColumn":21},{"ruleId":"373","severity":1,"message":"417","line":16,"column":23,"nodeType":"375","messageId":"376","endLine":16,"endColumn":50},{"ruleId":"373","severity":1,"message":"389","line":16,"column":52,"nodeType":"375","messageId":"376","endLine":16,"endColumn":70},{"ruleId":"373","severity":1,"message":"411","line":21,"column":11,"nodeType":"375","messageId":"376","endLine":21,"endColumn":18},{"ruleId":"373","severity":1,"message":"418","line":23,"column":26,"nodeType":"375","messageId":"376","endLine":23,"endColumn":36},{"ruleId":"395","severity":1,"message":"419","line":40,"column":8,"nodeType":"397","endLine":40,"endColumn":18,"suggestions":"420"},{"ruleId":"421","severity":1,"message":"422","line":79,"column":29,"nodeType":"401","endLine":79,"endColumn":182},{"ruleId":"421","severity":1,"message":"422","line":133,"column":29,"nodeType":"401","endLine":133,"endColumn":158},{"ruleId":"373","severity":1,"message":"423","line":10,"column":10,"nodeType":"375","messageId":"376","endLine":10,"endColumn":18},{"ruleId":"373","severity":1,"message":"424","line":10,"column":10,"nodeType":"375","messageId":"376","endLine":10,"endColumn":14},{"ruleId":"425","severity":1,"message":"426","line":21,"column":35,"nodeType":"406","endLine":21,"endColumn":57},{"ruleId":"427","severity":1,"message":"428","line":5,"column":5,"nodeType":"429","messageId":"430","endLine":7,"endColumn":6},{"ruleId":"373","severity":1,"message":"431","line":28,"column":7,"nodeType":"375","messageId":"376","endLine":28,"endColumn":17},{"ruleId":"373","severity":1,"message":"432","line":6,"column":3,"nodeType":"375","messageId":"376","endLine":6,"endColumn":21},{"ruleId":"373","severity":1,"message":"433","line":7,"column":3,"nodeType":"375","messageId":"376","endLine":7,"endColumn":14},{"ruleId":"373","severity":1,"message":"434","line":8,"column":3,"nodeType":"375","messageId":"376","endLine":8,"endColumn":14},{"ruleId":"373","severity":1,"message":"435","line":11,"column":3,"nodeType":"375","messageId":"376","endLine":11,"endColumn":23},{"ruleId":"373","severity":1,"message":"436","line":3,"column":27,"nodeType":"375","messageId":"376","endLine":3,"endColumn":31},{"ruleId":"373","severity":1,"message":"437","line":3,"column":33,"nodeType":"375","messageId":"376","endLine":3,"endColumn":36},{"ruleId":"373","severity":1,"message":"391","line":1,"column":28,"nodeType":"375","messageId":"376","endLine":1,"endColumn":36},{"ruleId":"373","severity":1,"message":"393","line":6,"column":25,"nodeType":"375","messageId":"376","endLine":6,"endColumn":37},{"ruleId":"373","severity":1,"message":"438","line":51,"column":9,"nodeType":"375","messageId":"376","endLine":51,"endColumn":15},{"ruleId":"373","severity":1,"message":"439","line":145,"column":7,"nodeType":"375","messageId":"376","endLine":145,"endColumn":15},{"ruleId":"440","severity":1,"message":"441","line":170,"column":1,"nodeType":"401","endLine":170,"endColumn":62},{"ruleId":"440","severity":1,"message":"441","line":175,"column":7,"nodeType":"401","endLine":175,"endColumn":19},{"ruleId":"440","severity":1,"message":"441","line":176,"column":7,"nodeType":"401","endLine":176,"endColumn":19},{"ruleId":"440","severity":1,"message":"441","line":178,"column":7,"nodeType":"401","endLine":178,"endColumn":19},{"ruleId":"373","severity":1,"message":"393","line":6,"column":25,"nodeType":"375","messageId":"376","endLine":6,"endColumn":37},{"ruleId":"395","severity":1,"message":"402","line":18,"column":6,"nodeType":"397","endLine":18,"endColumn":8,"suggestions":"442"},"no-native-reassign",["443"],"no-negated-in-lhs",["444"],["443"],["444"],"no-unused-vars","'TypeWriter' is defined but never used.","Identifier","unusedVar","'somethingWentWrongLogger' is defined but never used.","'isFetching' is assigned a value but never used.","'ChangePassword' is defined but never used.","valid-typeof","Invalid typeof comparison value.","Literal","invalidValue","'Field' is defined but never used.","'profileUpdateCompletedLogger' is defined but never used.","'profileUpdateFailLogger' is defined but never used.","'availableRole' is assigned a value but never used.","'companyDepartmentDropDown' is assigned a value but never used.","'currentUserStaffID' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'NavLink' is defined but never used.","'selectFilter' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'params.id' and 'usersTasksByStatus'. Either include them or remove the dependency array.","ArrayExpression",["445"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["446"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'sendImage' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'syncCurrentUser' is defined but never used.","'history' is assigned a value but never used.","'phoneRegExp' is assigned a value but never used.","'EmployeeTasks' is defined but never used.","'Button' is defined but never used.","'Redirect' is defined but never used.","'accessToken' is defined but never used.","'currentUserFromLocalStorage' is defined but never used.","'isLoggedIn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'staffID'. Either include it or remove the dependency array.",["447"],"jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'getTodos' is defined but never used.","'date' is defined but never used.","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'generateId' is assigned a value but never used.","'UPDATE_TASK_STATUS' is defined but never used.","'ASSIGN_TASK' is defined but never used.","'TASKS_ERROR' is defined but never used.","'TOGGLE_TODO_COMPLETE' is defined but never used.","'type' is assigned a value but never used.","'url' is assigned a value but never used.","'taskss' is assigned a value but never used.","'navigate' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["448"],"no-global-assign","no-unsafe-negation",{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"451","fix":"455"},"Update the dependencies array to be: [params.id, usersTasksByStatus]",{"range":"456","text":"457"},"Update the dependencies array to be: [dispatch]",{"range":"458","text":"459"},"Update the dependencies array to be: [dispatch, staffID]",{"range":"460","text":"461"},{"range":"462","text":"459"},[1691,1693],"[params.id, usersTasksByStatus]",[665,667],"[dispatch]",[1496,1506],"[dispatch, staffID]",[664,666]]