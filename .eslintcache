[{"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\App.js":"1","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\index.js":"2","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Index.js":"3","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Dashboard.js":"4","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Navbar.js":"5","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\NotificationCards.js":"6","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\HourTimerScreen.js":"7","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\TodoCard.js":"8","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\LoginPage.js":"9","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Navbar.js":"10","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\HomeBody.js":"11","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\SignupPage.js":"12","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\layouts\\HomeButton.js":"13","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\Pricing.js":"14","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\Store.js":"15","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\reducers\\index.js":"16","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AssignedTasks.js":"17","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Table.js":"18","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\MostActiveEmployee.js":"19","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\reducers\\usersReducer.js":"20","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\EscheduleCard.js":"21","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\types.js":"22","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Footer.js":"23"},{"size":538,"mtime":1607624242601,"results":"24","hashOfConfig":"25"},{"size":3071,"mtime":1607670711758,"results":"26","hashOfConfig":"25"},{"size":1464,"mtime":1607628877974,"results":"27","hashOfConfig":"25"},{"size":1878,"mtime":1607603871941,"results":"28","hashOfConfig":"25"},{"size":5255,"mtime":1607604063487,"results":"29","hashOfConfig":"25"},{"size":488,"mtime":1607604277954,"results":"30","hashOfConfig":"25"},{"size":522,"mtime":1607604162837,"results":"31","hashOfConfig":"25"},{"size":943,"mtime":1607604276512,"results":"32","hashOfConfig":"25"},{"size":6554,"mtime":1607618317477,"results":"33","hashOfConfig":"25"},{"size":1627,"mtime":1607624737680,"results":"34","hashOfConfig":"25"},{"size":14768,"mtime":1607619141440,"results":"35","hashOfConfig":"25"},{"size":11087,"mtime":1607618324246,"results":"36","hashOfConfig":"25"},{"size":255,"mtime":1607618336988,"results":"37","hashOfConfig":"25"},{"size":3346,"mtime":1607625312777,"results":"38","hashOfConfig":"25"},{"size":221,"mtime":1607600391920,"results":"39","hashOfConfig":"25"},{"size":332,"mtime":1607600392249,"results":"40","hashOfConfig":"25"},{"size":1373,"mtime":1607600392229,"results":"41","hashOfConfig":"25"},{"size":1775,"mtime":1607600391993,"results":"42","hashOfConfig":"25"},{"size":967,"mtime":1607604009882,"results":"43","hashOfConfig":"25"},{"size":862,"mtime":1607600392257,"results":"44","hashOfConfig":"25"},{"size":969,"mtime":1607603995154,"results":"45","hashOfConfig":"25"},{"size":162,"mtime":1607600391923,"results":"46","hashOfConfig":"25"},{"size":4710,"mtime":1607670560361,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lqflwm",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\App.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\index.js",["98"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Index.js",["99","100","101","102"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\Dashboard.js",["103","104","105","106"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\layouts\\Navbar.js",["107","108"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\NotificationCards.js",["109"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\HourTimerScreen.js",[],["110","111"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\TodoCard.js",["112"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\LoginPage.js",["113"],"// react\r\nimport {React, Component} from 'react';\r\nimport { Formik, Form, ErrorMessage} from 'formik';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// layouts, customs\r\nimport auth from '../Authentication/LoginAuth';\r\nimport Button from '../layouts/Button';\r\nimport loginImage from './pages-images/login-img.png';\r\nimport { TextInput } from '../layouts/FormInput';\r\nimport { loginSchema } from '../Validation/Schema';\r\nimport { HomeButton } from '../layouts/HomeButton';\r\n\r\n\r\nclass LoginPage extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            user: {\r\n                workSpaceEmail: '',\r\n                workSpacePassword: ''\r\n            },\r\n            isUserAuthenticated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.title = 'Login | Pace'\r\n    }\r\n   \r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <main className=\"container d-flex justify-content-center align-items-center mt-5\">\r\n                    <div className=\"row\">\r\n                        <div className=\"form-con col-lg-5 mb-5\">\r\n                            <HomeButton />\r\n                            <div className=\"form-heading mt-5\">\r\n                            <h3 className=\"mb-3\">Login</h3>\r\n                            <h4 className=\"mb-5\">Welcome back!</h4>\r\n                            </div>\r\n                            <div className=\"mt-5\" name=\"form\">\r\n                                <div className=\"form-group mt-b\">\r\n                                    <Formik\r\n                                        initialValues={{\r\n                                            email: '',\r\n                                            password: ''\r\n                                        }}\r\n                                        validationSchema = {loginSchema}\r\n                                        onSubmit={(values)=>auth(values)}\r\n                                        \r\n                                    >{({values, touched, errors, isSubmitting, handleSubmit, handleChange}) => (\r\n                                        <Form onSubmit={handleSubmit}>\r\n                                            <div className=\"email-wrapper pb-3\">\r\n                                                <TextInput \r\n                                                    label=\"Enter your workspace address\"\r\n                                                    name=\"email\"\r\n                                                    type=\"email\"\r\n                                                    className={`form-control p-2 ${\r\n                                                        touched.email && errors.email ? \"is-invalid\" : \"\"\r\n                                                    }`}\r\n                                                    id=\"email\"\r\n                                                    placeholder=\"example@company.com\"\r\n                                                    onBlur = {this.handleChange}\r\n                                                />\r\n                                                <ErrorMessage\r\n                                                    component=\"div\"\r\n                                                    name=\"email\"\r\n                                                    className=\"invalid-feedback p-0\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"password-wrapper\">\r\n                                                <TextInput \r\n                                                    name=\"password\"\r\n                                                    type=\"password\"\r\n                                                    label=\"Password\"\r\n                                                    labelClassName=\"mt-3\"\r\n                                                    className={`form-control p-2 ${\r\n                                                        touched.password && errors.password ? \"is-invalid\" : \"\"\r\n                                                    }`}\r\n                                                    id=\"passwords\"\r\n                                                    placeholder=\"Password\"\r\n                                                />\r\n                                                <ErrorMessage\r\n                                                    component=\"div\"\r\n                                                    name=\"password\"\r\n                                                    className=\"invalid-feedback\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"mt-3\">\r\n                                            {/* <Link to=\"/dashboard\"> */}\r\n\r\n                                                <Button \r\n                                                    type=\"submit\"\r\n                                                    className=\"btn btn-primary\"\r\n                                                    disabled={isSubmitting}\r\n                                                    label={isSubmitting ? (<span><i className=\"fa fa-spinner fa-spin\"></i> Loading...</span>) : \"Login\"}\r\n                                                    />\r\n                                            {/* </Link> */}\r\n                                                <p>Create your workspace register <Link to=\"/signup\">Here</Link></p>\r\n                                                <span><Link to=\"/forgot\">Forgot Passwords</Link></span>\r\n                                            </div>\r\n                                        </Form>\r\n                                        \r\n                                    )}\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"img-con col-lg-7 d-none d-lg-block\">\r\n                        <div className=\"login-intro-img mt-3\">\r\n                        <img src={loginImage} alt=\"office timing\" className=\"img-fluid\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nLoginPage.propTypes = {\r\n    // workSpaceEmail: PropTypes.string.isRequired,\r\n    // password: PropTypes.any.isRequired\r\n};\r\n\r\n\r\nexport default LoginPage;",["114","115"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Navbar.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\HomeBody.js",["116"],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\SignupPage.js",["117"],"// react \r\nimport {React, Component} from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// layouts\r\nimport Button from '../layouts/Button';\r\nimport loginImage from './pages-images/login-img.png';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { signUpSchema } from '../Validation/Schema'\r\nimport { TextInput, CheckbBox } from '../layouts/FormInput';\r\n// import PropTypes from 'prop-types';\r\nimport { HomeButton } from '../layouts/HomeButton'\r\n\r\nclass SignupPage extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            user: {\r\n                workSpaceEmail: '',\r\n            },\r\n            isUserAuthenticated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.title = \"Signup | Pace \"\r\n    }\r\n\r\n    render(){\r\n       \r\n        return(\r\n            <div className=\"container\">\r\n                <main className=\"container d-flex justify-content-center align-items-center mt-5\">\r\n                    <div className=\"row\">\r\n                        <div className=\"form-con col-lg-5 mb-5\">\r\n                            <HomeButton />\r\n                            <div className=\"form-heading mt-2\">\r\n                            <h3 className=\"mb-3\">Signup</h3>\r\n                            <h4 className=\"mb-4\">Track every second!</h4>\r\n                            </div>\r\n                            <Formik \r\n                            \r\n                                initialValues={{\r\n                                    workSpaceName : '',\r\n                                    workSpaceEmail : '',\r\n                                    workSpacePhone : '',\r\n                                    password: '',\r\n                                    confirmPassword: '',\r\n                                    termsOfService: false\r\n                                }}\r\n                                validationSchema = {signUpSchema}\r\n                                onSubmit={(values)=>alert(\"done!!!\", values)}\r\n                            >\r\n                                {\r\n                                    ({values, errors, touched})=>(\r\n                                        <Form>\r\n                                            <div className=\"form-group signupForm\">\r\n                                                <div className=\"workSpaceName-wrapper\">\r\n                                                    {/* <label className=\"mt-3\">Workspace Name \"\"\"validate workspace name here onChange\"\"\"</label> */}\r\n                                                    <TextInput \r\n                                                        name=\"workSpaceName\"\r\n                                                        id=\"workSpaceName\"\r\n                                                        type=\"text\"\r\n                                                        label=\"Workspace Name\"\r\n                                                        labelClassName=\"mt-3\"\r\n                                                        placeholder=\"Bascom Limited\"\r\n                                                        className={`form-control lead p-2 ${\r\n                                                            touched.workSpaceName && errors.workSpaceName ? \"is-invalid\" : \"\"\r\n                                                        }`}                                                        \r\n                                                        title = {touched.workSpaceName && errors.workSpaceName ? \"Tooltip Text\" : \"Tooltip Text\"}\r\n                                                        data-placement = \"bottom\"\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"span\"\r\n                                                        name=\"workSpaceName\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"email-wrapper\">\r\n                                                    <TextInput \r\n                                                        name=\"workSpaceEmail\"\r\n                                                        id=\"workSpaceEmail\"\r\n                                                        type=\"email\"\r\n                                                        label=\"Email\"\r\n                                                        labelClassName=\"mt-3\"\r\n                                                        className={`form-control lead p-2 ${\r\n                                                            touched.workSpaceEmail && errors.workSpaceEmail ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        placeholder=\"Email\" \r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"workSpaceEmail\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            <div className=\"d-flex\">\r\n\r\n                                                <div className=\"form-group password-wrapper mr-2\">\r\n                                                    <TextInput \r\n                                                        name=\"password\"\r\n                                                        id=\"password\"\r\n                                                        type=\"password\"\r\n                                                        label=\"Password\"\r\n                                                        labelClassName=\"mt-3\"\r\n                                                        className={`form-control lead p-2 ${\r\n                                                            touched.password && errors.password ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        placeholder=\"Password\" \r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"password\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"form-group confirmPassword-wrapper\">\r\n                                                    <TextInput \r\n                                                        name=\"confirmPassword\"\r\n                                                        id=\"confirmPassword\"\r\n                                                        type=\"password\"\r\n                                                        label=\"Confirm Password\"\r\n                                                        labelClassName=\"mt-3\"\r\n                                                        className={`form-control lead p-2 ${\r\n                                                            touched.confirmPassword && errors.confirmPassword ? \"is-invalid\" : \"\"\r\n                                                        }`}\r\n                                                        placeholder=\"Confirm Password\" \r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        component=\"div\"\r\n                                                        name=\"confirmPassword\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <CheckbBox \r\n                                                    name=\"termsOfService\"\r\n                                                    id=\"termsOfService\"\r\n                                                    title=\"Accept Terms and condition\"\r\n                                                    titleClassName=\"text-blue\"\r\n                                                    className={`form-check-input ${touched.termsOfService && errors.termsOfService ? \"is-invalid\" : \"\"}`}\r\n                                                />\r\n                                                 <ErrorMessage\r\n                                                        name=\"termsOfService\"\r\n                                                        component=\"div\"\r\n                                                        className=\"invalid-feedback p-0\"\r\n                                                />\r\n                                            </div>\r\n                                                <Button \r\n                                                    type=\"submit\"\r\n                                                    className=\"btn btn-primary mt-3\"\r\n                                                    id=\"signUp\"\r\n                                                    label=\"Signup\"\r\n                                                    disabled={!values.termsOfService}\r\n                                                />\r\n                                                <p>Already have an account? <Link to=\"./login\">Login</Link></p>\r\n                                            </div>\r\n                                        </Form>\r\n                                    )\r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"img-con col-lg-7\">\r\n                            {/* <img src={images[index]} alt=\"office timing\" className=\"img-fluid\" /> */}\r\n                            <div className=\"login-intro-img mt-5 ml-5 d-none d-md-block\">\r\n                            <img src={loginImage} alt=\"office timing\" className=\"img-fluid\" />\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </main>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n// SignupPage.propTypes = {\r\n//     workSpaceName : PropTypes.string.isRequired(),\r\n//     workSpaceEmail : PropTypes.string.isRequired(),\r\n//     password : PropTypes.string.isRequired(),\r\n//     confirmPassword : PropTypes.string.isRequired(),\r\n// }\r\n\r\nexport default SignupPage;","C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\layouts\\HomeButton.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\pages\\Pricing.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\Store.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\reducers\\index.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\employeeTasks\\AssignedTasks.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Table.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\MostActiveEmployee.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\reducers\\usersReducer.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\workspace\\dashboard\\cards\\EscheduleCard.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\actions\\types.js",[],"C:\\Users\\Unclebay\\Desktop\\project\\Pace-Employee-TimeSheet\\src\\components\\layouts\\Footer.js",[],{"ruleId":"118","severity":1,"message":"119","line":48,"column":8,"nodeType":"120","messageId":"121","endLine":48,"endColumn":11},{"ruleId":"118","severity":1,"message":"122","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":16},{"ruleId":"118","severity":1,"message":"123","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":14},{"ruleId":"118","severity":1,"message":"124","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":21},{"ruleId":"118","severity":1,"message":"125","line":8,"column":8,"nodeType":"120","messageId":"121","endLine":8,"endColumn":21},{"ruleId":"118","severity":1,"message":"126","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":14},{"ruleId":"118","severity":1,"message":"125","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":21},{"ruleId":"118","severity":1,"message":"127","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":21},{"ruleId":"128","severity":1,"message":"129","line":10,"column":1,"nodeType":"130","messageId":"131","endLine":24,"endColumn":11},{"ruleId":"132","severity":1,"message":"133","line":21,"column":68,"nodeType":"134","endLine":21,"endColumn":238},{"ruleId":"132","severity":1,"message":"133","line":59,"column":33,"nodeType":"134","endLine":59,"endColumn":179},{"ruleId":"135","severity":1,"message":"136","line":8,"column":5,"nodeType":"137","messageId":"138","endLine":11,"endColumn":6},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"118","severity":1,"message":"143","line":13,"column":33,"nodeType":"120","messageId":"121","endLine":13,"endColumn":42},{"ruleId":"118","severity":1,"message":"144","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":17},{"ruleId":"139","replacedBy":"145"},{"ruleId":"141","replacedBy":"146"},{"ruleId":"118","severity":1,"message":"147","line":6,"column":8,"nodeType":"120","messageId":"121","endLine":6,"endColumn":18},{"ruleId":"118","severity":1,"message":"148","line":8,"column":24,"nodeType":"120","messageId":"121","endLine":8,"endColumn":29},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'EmpCards' is defined but never used.","'Footer' is defined but never used.","'AssignedTasks' is defined but never used.","'AcceptedTasks' is defined but never used.","'Invite' is defined but never used.","'EmployeeTasks' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["149"],"no-negated-in-lhs",["150"],"'cardColor' is assigned a value but never used.","'PropTypes' is defined but never used.",["149"],["150"],"'TypeWriter' is defined but never used.","'Field' is defined but never used.","no-global-assign","no-unsafe-negation"]